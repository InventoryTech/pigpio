!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_OUTPUT_EXCMD	mixed	/number, pattern, mixed, or combineV2/
!_TAG_OUTPUT_FILESEP	slash	/slash or backslash/
!_TAG_OUTPUT_MODE	u-ctags	/u-ctags or e-ctags/
!_TAG_PATTERN_LENGTH_LIMIT	96	/0 for no limit/
!_TAG_PROC_CWD	/home/raoul/Projects/CleverFirstAid/Source/pigpio/	//
!_TAG_PROGRAM_AUTHOR	Universal Ctags Team	//
!_TAG_PROGRAM_NAME	Universal Ctags	/Derived from Exuberant Ctags/
!_TAG_PROGRAM_URL	https://ctags.io/	/official site/
!_TAG_PROGRAM_VERSION	5.9.0	//
$(LIB1)	Makefile	/^$(LIB1):	$(OBJ1)$/;"	t
$(LIB2)	Makefile	/^$(LIB2):	$(OBJ2)$/;"	t
$(LIB3)	Makefile	/^$(LIB3):	$(OBJ3)$/;"	t
ALL	Makefile	/^ALL     = $(LIB) x_pigpio x_pigpiod_if x_pigpiod_if2 pig2vcd pigpiod pigs$/;"	m
AR	Makefile	/^AR           = $(CROSS_PREFIX)ar$/;"	m
AUXENB_SPI1	pigpio.c	/^#define AUXENB_SPI1 /;"	d	file:
AUXENB_SPI2	pigpio.c	/^#define AUXENB_SPI2 /;"	d	file:
AUXENB_UART	pigpio.c	/^#define AUXENB_UART /;"	d	file:
AUXSPI_CNTL0_CLR_FIFOS	pigpio.c	/^#define AUXSPI_CNTL0_CLR_FIFOS /;"	d	file:
AUXSPI_CNTL0_CS	pigpio.c	/^#define AUXSPI_CNTL0_CS(/;"	d	file:
AUXSPI_CNTL0_DOUT_HOLD	pigpio.c	/^#define AUXSPI_CNTL0_DOUT_HOLD(/;"	d	file:
AUXSPI_CNTL0_ENABLE	pigpio.c	/^#define AUXSPI_CNTL0_ENABLE /;"	d	file:
AUXSPI_CNTL0_INVERT_CLK	pigpio.c	/^#define AUXSPI_CNTL0_INVERT_CLK(/;"	d	file:
AUXSPI_CNTL0_IN_RISING	pigpio.c	/^#define AUXSPI_CNTL0_IN_RISING(/;"	d	file:
AUXSPI_CNTL0_MSB_FIRST	pigpio.c	/^#define AUXSPI_CNTL0_MSB_FIRST(/;"	d	file:
AUXSPI_CNTL0_OUT_RISING	pigpio.c	/^#define AUXSPI_CNTL0_OUT_RISING(/;"	d	file:
AUXSPI_CNTL0_POSTINP	pigpio.c	/^#define AUXSPI_CNTL0_POSTINP /;"	d	file:
AUXSPI_CNTL0_SHIFT_LEN	pigpio.c	/^#define AUXSPI_CNTL0_SHIFT_LEN(/;"	d	file:
AUXSPI_CNTL0_SPEED	pigpio.c	/^#define AUXSPI_CNTL0_SPEED(/;"	d	file:
AUXSPI_CNTL0_VAR_CS	pigpio.c	/^#define AUXSPI_CNTL0_VAR_CS /;"	d	file:
AUXSPI_CNTL0_VAR_WIDTH	pigpio.c	/^#define AUXSPI_CNTL0_VAR_WIDTH /;"	d	file:
AUXSPI_CNTL1_CS_HIGH	pigpio.c	/^#define AUXSPI_CNTL1_CS_HIGH(/;"	d	file:
AUXSPI_CNTL1_DONE_IRQ	pigpio.c	/^#define AUXSPI_CNTL1_DONE_IRQ /;"	d	file:
AUXSPI_CNTL1_KEEP_INPUT	pigpio.c	/^#define AUXSPI_CNTL1_KEEP_INPUT /;"	d	file:
AUXSPI_CNTL1_MSB_FIRST	pigpio.c	/^#define AUXSPI_CNTL1_MSB_FIRST(/;"	d	file:
AUXSPI_CNTL1_TX_IRQ	pigpio.c	/^#define AUXSPI_CNTL1_TX_IRQ /;"	d	file:
AUXSPI_STAT_BITS	pigpio.c	/^#define AUXSPI_STAT_BITS(/;"	d	file:
AUXSPI_STAT_BUSY	pigpio.c	/^#define AUXSPI_STAT_BUSY /;"	d	file:
AUXSPI_STAT_RX_EMPTY	pigpio.c	/^#define AUXSPI_STAT_RX_EMPTY /;"	d	file:
AUXSPI_STAT_RX_FIFO	pigpio.c	/^#define AUXSPI_STAT_RX_FIFO(/;"	d	file:
AUXSPI_STAT_TX_EMPTY	pigpio.c	/^#define AUXSPI_STAT_TX_EMPTY /;"	d	file:
AUXSPI_STAT_TX_FIFO	pigpio.c	/^#define AUXSPI_STAT_TX_FIFO(/;"	d	file:
AUXSPI_STAT_TX_FULL	pigpio.c	/^#define AUXSPI_STAT_TX_FULL /;"	d	file:
AUX_BASE	pigpio.c	/^#define AUX_BASE /;"	d	file:
AUX_ENABLES	pigpio.c	/^#define AUX_ENABLES /;"	d	file:
AUX_IRQ	pigpio.c	/^#define AUX_IRQ /;"	d	file:
AUX_LEN	pigpio.c	/^#define AUX_LEN /;"	d	file:
AUX_MU_BAUD_REG	pigpio.c	/^#define AUX_MU_BAUD_REG /;"	d	file:
AUX_MU_CNTL_REG	pigpio.c	/^#define AUX_MU_CNTL_REG /;"	d	file:
AUX_MU_IER_REG	pigpio.c	/^#define AUX_MU_IER_REG /;"	d	file:
AUX_MU_IIR_REG	pigpio.c	/^#define AUX_MU_IIR_REG /;"	d	file:
AUX_MU_IO_REG	pigpio.c	/^#define AUX_MU_IO_REG /;"	d	file:
AUX_MU_LCR_REG	pigpio.c	/^#define AUX_MU_LCR_REG /;"	d	file:
AUX_MU_LSR_REG	pigpio.c	/^#define AUX_MU_LSR_REG /;"	d	file:
AUX_MU_MCR_REG	pigpio.c	/^#define AUX_MU_MCR_REG /;"	d	file:
AUX_MU_MSR_REG	pigpio.c	/^#define AUX_MU_MSR_REG /;"	d	file:
AUX_MU_SCRATCH	pigpio.c	/^#define AUX_MU_SCRATCH /;"	d	file:
AUX_MU_STAT_REG	pigpio.c	/^#define AUX_MU_STAT_REG /;"	d	file:
AUX_SPI0_CNTL0_REG	pigpio.c	/^#define AUX_SPI0_CNTL0_REG /;"	d	file:
AUX_SPI0_CNTL1_REG	pigpio.c	/^#define AUX_SPI0_CNTL1_REG /;"	d	file:
AUX_SPI0_IO_REG	pigpio.c	/^#define AUX_SPI0_IO_REG /;"	d	file:
AUX_SPI0_PEEK_REG	pigpio.c	/^#define AUX_SPI0_PEEK_REG /;"	d	file:
AUX_SPI0_STAT_REG	pigpio.c	/^#define AUX_SPI0_STAT_REG /;"	d	file:
AUX_SPI0_TX_HOLD	pigpio.c	/^#define AUX_SPI0_TX_HOLD /;"	d	file:
AUX_SPI1_CNTL0_REG	pigpio.c	/^#define AUX_SPI1_CNTL0_REG /;"	d	file:
AUX_SPI1_CNTL1_REG	pigpio.c	/^#define AUX_SPI1_CNTL1_REG /;"	d	file:
AUX_SPI1_IO_REG	pigpio.c	/^#define AUX_SPI1_IO_REG /;"	d	file:
AUX_SPI1_PEEK_REG	pigpio.c	/^#define AUX_SPI1_PEEK_REG /;"	d	file:
AUX_SPI1_STAT_REG	pigpio.c	/^#define AUX_SPI1_STAT_REG /;"	d	file:
AUX_SPI1_TX_HOLD	pigpio.c	/^#define AUX_SPI1_TX_HOLD /;"	d	file:
BANK	pigpio.c	/^#define BANK /;"	d	file:
BCM_PASSWD	pigpio.c	/^#define BCM_PASSWD /;"	d	file:
BILLION	pigpio.c	/^#define BILLION /;"	d	file:
BIT	pigpio.c	/^#define BIT /;"	d	file:
BLOCK_SIZE	pigpio.c	/^#define BLOCK_SIZE /;"	d	file:
BPD	pigpio.c	/^#define BPD /;"	d	file:
BSCS_BASE	pigpio.c	/^#define BSCS_BASE /;"	d	file:
BSCS_LEN	pigpio.c	/^#define BSCS_LEN /;"	d	file:
BSC_CE_N	pigpio.h	/^#define BSC_CE_N /;"	d
BSC_CE_N_2711	pigpio.h	/^#define BSC_CE_N_2711 /;"	d
BSC_CR	pigpio.h	/^#define BSC_CR /;"	d
BSC_CR_BRK	pigpio.h	/^#define BSC_CR_BRK /;"	d
BSC_CR_CPHA	pigpio.h	/^#define BSC_CR_CPHA /;"	d
BSC_CR_CPOL	pigpio.h	/^#define BSC_CR_CPOL /;"	d
BSC_CR_EN	pigpio.h	/^#define BSC_CR_EN /;"	d
BSC_CR_I2C	pigpio.h	/^#define BSC_CR_I2C /;"	d
BSC_CR_RXE	pigpio.h	/^#define BSC_CR_RXE /;"	d
BSC_CR_SPI	pigpio.h	/^#define BSC_CR_SPI /;"	d
BSC_CR_TESTFIFO	pigpio.h	/^#define BSC_CR_TESTFIFO /;"	d
BSC_CR_TXE	pigpio.h	/^#define BSC_CR_TXE /;"	d
BSC_DEBUG_I2C	pigpio.h	/^#define BSC_DEBUG_I2C /;"	d
BSC_DEBUG_SPI	pigpio.h	/^#define BSC_DEBUG_SPI /;"	d
BSC_DMACR	pigpio.h	/^#define BSC_DMACR /;"	d
BSC_DR	pigpio.h	/^#define BSC_DR /;"	d
BSC_FIFO_SIZE	pigpio.h	/^#define BSC_FIFO_SIZE /;"	d
BSC_FR	pigpio.h	/^#define BSC_FR /;"	d
BSC_FR_RXBUSY	pigpio.h	/^#define BSC_FR_RXBUSY /;"	d
BSC_FR_RXFE	pigpio.h	/^#define BSC_FR_RXFE /;"	d
BSC_FR_RXFF	pigpio.h	/^#define BSC_FR_RXFF /;"	d
BSC_FR_TXBUSY	pigpio.h	/^#define BSC_FR_TXBUSY /;"	d
BSC_FR_TXFE	pigpio.h	/^#define BSC_FR_TXFE /;"	d
BSC_FR_TXFF	pigpio.h	/^#define BSC_FR_TXFF /;"	d
BSC_GPUSTAT	pigpio.h	/^#define BSC_GPUSTAT /;"	d
BSC_HCTRL	pigpio.h	/^#define BSC_HCTRL /;"	d
BSC_ICR	pigpio.h	/^#define BSC_ICR /;"	d
BSC_IFLS	pigpio.h	/^#define BSC_IFLS /;"	d
BSC_IMSC	pigpio.h	/^#define BSC_IMSC /;"	d
BSC_MIS	pigpio.h	/^#define BSC_MIS /;"	d
BSC_MISO	pigpio.h	/^#define BSC_MISO /;"	d
BSC_MISO_2711	pigpio.h	/^#define BSC_MISO_2711 /;"	d
BSC_MOSI	pigpio.h	/^#define BSC_MOSI /;"	d
BSC_MOSI_2711	pigpio.h	/^#define BSC_MOSI_2711 /;"	d
BSC_RIS	pigpio.h	/^#define BSC_RIS /;"	d
BSC_RSR	pigpio.h	/^#define BSC_RSR /;"	d
BSC_SCL_SCLK	pigpio.h	/^#define BSC_SCL_SCLK /;"	d
BSC_SCL_SCLK_2711	pigpio.h	/^#define BSC_SCL_SCLK_2711 /;"	d
BSC_SDA	pigpio.h	/^#define BSC_SDA /;"	d
BSC_SDA_2711	pigpio.h	/^#define BSC_SDA_2711 /;"	d
BSC_SLV	pigpio.h	/^#define BSC_SLV /;"	d
BSC_TDR	pigpio.h	/^#define BSC_TDR /;"	d
BUS_TO_PHYS	pigpio.c	/^#define BUS_TO_PHYS(/;"	d	file:
CBF_t	pigpiod_if.c	/^typedef void (*CBF_t) ();$/;"	t	typeref:typename:void (*)()	file:
CBF_t	pigpiod_if2.c	/^typedef void (*CBF_t) ();$/;"	t	typeref:typename:void (*)()	file:
CBFuncEx_t	pigpiod_if.h	/^typedef void (*CBFuncEx_t)$/;"	t	typeref:typename:void (*)(unsigned user_gpio,unsigned level,uint32_t tick,void * user)
CBFuncEx_t	pigpiod_if2.h	/^typedef void (*CBFuncEx_t)$/;"	t	typeref:typename:void (*)(int pi,unsigned user_gpio,unsigned level,uint32_t tick,void * userdata)
CBFunc_t	pigpiod_if.h	/^typedef void (*CBFunc_t)  (unsigned user_gpio, unsigned level, uint32_t tick);$/;"	t	typeref:typename:void (*)(unsigned user_gpio,unsigned level,uint32_t tick)
CBFunc_t	pigpiod_if2.h	/^typedef void (*CBFunc_t)$/;"	t	typeref:typename:void (*)(int pi,unsigned user_gpio,unsigned level,uint32_t tick)
CBS_PER_CYCLE	pigpio.c	/^#define CBS_PER_CYCLE /;"	d	file:
CBS_PER_IPAGE	pigpio.c	/^#define CBS_PER_IPAGE /;"	d	file:
CBS_PER_OPAGE	pigpio.c	/^#define CBS_PER_OPAGE /;"	d	file:
CC	Makefile	/^CC           = $(CROSS_PREFIX)gcc$/;"	m
CHECK	x_pigpio.c	/^void CHECK(int t, int st, int got, int expect, int pc, char *desc)$/;"	f	typeref:typename:void
CHECK	x_pigpiod_if.c	/^void CHECK(int t, int st, int got, int expect, int pc, char *desc)$/;"	f	typeref:typename:void
CHECK	x_pigpiod_if2.c	/^void CHECK(int t, int st, int got, int expect, int pc, char *desc)$/;"	f	typeref:typename:void
CHECK_INITED	pigpio.c	/^#define CHECK_INITED /;"	d	file:
CHECK_INITED_RET_NIL	pigpio.c	/^#define CHECK_INITED_RET_NIL /;"	d	file:
CHECK_INITED_RET_NULL_PTR	pigpio.c	/^#define CHECK_INITED_RET_NULL_PTR /;"	d	file:
CHECK_NOT_INITED	pigpio.c	/^#define CHECK_NOT_INITED /;"	d	file:
CLK_BASE	pigpio.c	/^#define CLK_BASE /;"	d	file:
CLK_CTL_BUSY	pigpio.c	/^#define CLK_CTL_BUSY /;"	d	file:
CLK_CTL_ENAB	pigpio.c	/^#define CLK_CTL_ENAB /;"	d	file:
CLK_CTL_KILL	pigpio.c	/^#define CLK_CTL_KILL /;"	d	file:
CLK_CTL_MASH	pigpio.c	/^#define CLK_CTL_MASH(/;"	d	file:
CLK_CTL_SRC	pigpio.c	/^#define CLK_CTL_SRC(/;"	d	file:
CLK_CTL_SRC_OSC	pigpio.c	/^#define CLK_CTL_SRC_OSC /;"	d	file:
CLK_CTL_SRC_PLLD	pigpio.c	/^#define CLK_CTL_SRC_PLLD /;"	d	file:
CLK_DIV_DIVF	pigpio.c	/^#define CLK_DIV_DIVF(/;"	d	file:
CLK_DIV_DIVI	pigpio.c	/^#define CLK_DIV_DIVI(/;"	d	file:
CLK_GP0_CTL	pigpio.c	/^#define CLK_GP0_CTL /;"	d	file:
CLK_GP0_DIV	pigpio.c	/^#define CLK_GP0_DIV /;"	d	file:
CLK_GP1_CTL	pigpio.c	/^#define CLK_GP1_CTL /;"	d	file:
CLK_GP1_DIV	pigpio.c	/^#define CLK_GP1_DIV /;"	d	file:
CLK_GP2_CTL	pigpio.c	/^#define CLK_GP2_CTL /;"	d	file:
CLK_GP2_DIV	pigpio.c	/^#define CLK_GP2_DIV /;"	d	file:
CLK_LEN	pigpio.c	/^#define CLK_LEN /;"	d	file:
CLK_OSC_FREQ	pigpio.c	/^#define CLK_OSC_FREQ /;"	d	file:
CLK_OSC_FREQ_2711	pigpio.c	/^#define CLK_OSC_FREQ_2711 /;"	d	file:
CLK_PCMCTL	pigpio.c	/^#define CLK_PCMCTL /;"	d	file:
CLK_PCMDIV	pigpio.c	/^#define CLK_PCMDIV /;"	d	file:
CLK_PLLD_FREQ	pigpio.c	/^#define CLK_PLLD_FREQ /;"	d	file:
CLK_PLLD_FREQ_2711	pigpio.c	/^#define CLK_PLLD_FREQ_2711 /;"	d	file:
CLK_PWMCTL	pigpio.c	/^#define CLK_PWMCTL /;"	d	file:
CLK_PWMDIV	pigpio.c	/^#define CLK_PWMDIV /;"	d	file:
CLK_SRCS	pigpio.c	/^#define CLK_SRCS /;"	d	file:
CMD_BAD_PARAMETER	command.h	/^#define CMD_BAD_PARAMETER /;"	d
CMD_EXT_TOO_SMALL	command.h	/^#define CMD_EXT_TOO_SMALL /;"	d
CMD_MAX_EXTENSION	command.h	/^#define CMD_MAX_EXTENSION /;"	d
CMD_MAX_PARAM	command.h	/^#define CMD_MAX_PARAM /;"	d
CMD_NOT_IN_SCRIPT	command.h	/^#define CMD_NOT_IN_SCRIPT /;"	d
CMD_NUMERIC	command.h	/^#define CMD_NUMERIC /;"	d
CMD_PAR	command.h	/^#define CMD_PAR /;"	d
CMD_P_ARR	command.h	/^#define CMD_P_ARR /;"	d
CMD_UNKNOWN_CMD	command.h	/^#define CMD_UNKNOWN_CMD /;"	d
CMD_VAR	command.h	/^#define CMD_VAR /;"	d
CMD_V_ARR	command.h	/^#define CMD_V_ARR /;"	d
COMMAND_H	command.h	/^#define COMMAND_H$/;"	d
CROSS_PREFIX	Makefile	/^CROSS_PREFIX =$/;"	m
CS	pigpio.c	/^   int CS;$/;"	m	struct:__anon638cdb1e1708	typeref:typename:int	file:
CSMode	pigpio.c	/^   int CSMode;$/;"	m	struct:__anon638cdb1e1708	typeref:typename:int	file:
CYCLES_PER_BLOCK	pigpio.c	/^#define CYCLES_PER_BLOCK /;"	d	file:
DBG	pigpio.c	/^#define DBG(/;"	d	file:
DBG_ALWAYS	pigpio.c	/^#define DBG_ALWAYS /;"	d	file:
DBG_DMACBS	pigpio.c	/^#define DBG_DMACBS /;"	d	file:
DBG_FAST_TICK	pigpio.c	/^#define DBG_FAST_TICK /;"	d	file:
DBG_INTERNAL	pigpio.c	/^#define DBG_INTERNAL /;"	d	file:
DBG_MAX_LEVEL	pigpio.c	/^#define DBG_MAX_LEVEL /;"	d	file:
DBG_MIN_LEVEL	pigpio.c	/^#define DBG_MIN_LEVEL /;"	d	file:
DBG_SCRIPT	pigpio.c	/^#define DBG_SCRIPT /;"	d	file:
DBG_SLOW_TICK	pigpio.c	/^#define DBG_SLOW_TICK /;"	d	file:
DBG_STARTUP	pigpio.c	/^#define DBG_STARTUP /;"	d	file:
DBG_USER	pigpio.c	/^#define DBG_USER /;"	d	file:
DEFAULT_PWM_IDX	pigpio.c	/^#define DEFAULT_PWM_IDX /;"	d	file:
DMA15_BASE	pigpio.c	/^#define DMA15_BASE /;"	d	file:
DMAI_PAGES	pigpio.c	/^#define DMAI_PAGES /;"	d	file:
DMAMem_t	pigpio.c	/^} DMAMem_t;$/;"	t	typeref:struct:__anon638cdb1e1c08	file:
DMAO_PAGES	pigpio.c	/^#define DMAO_PAGES /;"	d	file:
DMARestarts	pigpio.c	/^   uint32_t DMARestarts;$/;"	m	struct:__anon638cdb1e1208	typeref:typename:uint32_t	file:
DMA_ACTIVE	pigpio.c	/^#define DMA_ACTIVE /;"	d	file:
DMA_BASE	pigpio.c	/^#define DMA_BASE /;"	d	file:
DMA_BURST_LENGTH	pigpio.c	/^#define DMA_BURST_LENGTH(/;"	d	file:
DMA_CHANNEL_ABORT	pigpio.c	/^#define DMA_CHANNEL_ABORT /;"	d	file:
DMA_CHANNEL_RESET	pigpio.c	/^#define DMA_CHANNEL_RESET /;"	d	file:
DMA_CONBLK_AD	pigpio.c	/^#define DMA_CONBLK_AD /;"	d	file:
DMA_CS	pigpio.c	/^#define DMA_CS /;"	d	file:
DMA_DEBUG	pigpio.c	/^#define DMA_DEBUG /;"	d	file:
DMA_DEBUG_FIFO_ERR	pigpio.c	/^#define DMA_DEBUG_FIFO_ERR /;"	d	file:
DMA_DEBUG_RD_LST_NOT_SET_ERR	pigpio.c	/^#define DMA_DEBUG_RD_LST_NOT_SET_ERR /;"	d	file:
DMA_DEBUG_READ_ERR	pigpio.c	/^#define DMA_DEBUG_READ_ERR /;"	d	file:
DMA_DEST_DREQ	pigpio.c	/^#define DMA_DEST_DREQ /;"	d	file:
DMA_DEST_IGNORE	pigpio.c	/^#define DMA_DEST_IGNORE /;"	d	file:
DMA_DEST_INC	pigpio.c	/^#define DMA_DEST_INC /;"	d	file:
DMA_DEST_WIDTH	pigpio.c	/^#define DMA_DEST_WIDTH /;"	d	file:
DMA_ENABLE	pigpio.c	/^#define DMA_ENABLE /;"	d	file:
DMA_END_FLAG	pigpio.c	/^#define DMA_END_FLAG /;"	d	file:
DMA_INTERRUPT_STATUS	pigpio.c	/^#define DMA_INTERRUPT_STATUS /;"	d	file:
DMA_LEN	pigpio.c	/^#define DMA_LEN /;"	d	file:
DMA_LITE_FIRST	pigpio.c	/^#define DMA_LITE_FIRST /;"	d	file:
DMA_LITE_MAX	pigpio.c	/^#define DMA_LITE_MAX /;"	d	file:
DMA_NO_WIDE_BURSTS	pigpio.c	/^#define DMA_NO_WIDE_BURSTS /;"	d	file:
DMA_PANIC_PRIORITY	pigpio.c	/^#define DMA_PANIC_PRIORITY(/;"	d	file:
DMA_PERIPHERAL_MAPPING	pigpio.c	/^#define DMA_PERIPHERAL_MAPPING(/;"	d	file:
DMA_PRIORITY	pigpio.c	/^#define DMA_PRIORITY(/;"	d	file:
DMA_SRC_DREQ	pigpio.c	/^#define DMA_SRC_DREQ /;"	d	file:
DMA_SRC_IGNORE	pigpio.c	/^#define DMA_SRC_IGNORE /;"	d	file:
DMA_SRC_INC	pigpio.c	/^#define DMA_SRC_INC /;"	d	file:
DMA_SRC_WIDTH	pigpio.c	/^#define DMA_SRC_WIDTH /;"	d	file:
DMA_TDMODE	pigpio.c	/^#define DMA_TDMODE /;"	d	file:
DMA_WAIT_ON_WRITES	pigpio.c	/^#define DMA_WAIT_ON_WRITES /;"	d	file:
DMA_WAIT_RESP	pigpio.c	/^#define DMA_WAIT_RESP /;"	d	file:
DMAprimaryChannel	pigpio.c	/^   unsigned DMAprimaryChannel;$/;"	m	struct:__anon638cdb1e1308	typeref:typename:unsigned	file:
DMAprimaryChannel	pigpiod.c	/^static unsigned DMAprimaryChannel      = PI_DEFAULT_DMA_NOT_SET;$/;"	v	typeref:typename:unsigned	file:
DMAsecondaryChannel	pigpio.c	/^   unsigned DMAsecondaryChannel;$/;"	m	struct:__anon638cdb1e1308	typeref:typename:unsigned	file:
DMAsecondaryChannel	pigpiod.c	/^static unsigned DMAsecondaryChannel    = PI_DEFAULT_DMA_NOT_SET;$/;"	v	typeref:typename:unsigned	file:
DO_DBG	pigpio.c	/^#define DO_DBG(/;"	d	file:
EITHER_EDGE	pigpio.h	/^#define EITHER_EDGE /;"	d
FALLING_EDGE	pigpio.h	/^#define FALLING_EDGE /;"	d
FLUSH_PAGES	pigpio.c	/^#define FLUSH_PAGES /;"	d	file:
GPAFEN0	pigpio.c	/^#define GPAFEN0 /;"	d	file:
GPAFEN1	pigpio.c	/^#define GPAFEN1 /;"	d	file:
GPAREN0	pigpio.c	/^#define GPAREN0 /;"	d	file:
GPAREN1	pigpio.c	/^#define GPAREN1 /;"	d	file:
GPCLR0	pigpio.c	/^#define GPCLR0 /;"	d	file:
GPCLR1	pigpio.c	/^#define GPCLR1 /;"	d	file:
GPEDS0	pigpio.c	/^#define GPEDS0 /;"	d	file:
GPEDS1	pigpio.c	/^#define GPEDS1 /;"	d	file:
GPFEN0	pigpio.c	/^#define GPFEN0 /;"	d	file:
GPFEN1	pigpio.c	/^#define GPFEN1 /;"	d	file:
GPFSEL0	pigpio.c	/^#define GPFSEL0 /;"	d	file:
GPHEN0	pigpio.c	/^#define GPHEN0 /;"	d	file:
GPHEN1	pigpio.c	/^#define GPHEN1 /;"	d	file:
GPIO	EXAMPLES/C/POT_CAP_RECHARGE/pot_cap_charge.c	/^#define GPIO /;"	d	file:
GPIO	x_pigpio.c	/^#define GPIO /;"	d	file:
GPIO	x_pigpiod_if.c	/^#define GPIO /;"	d	file:
GPIO	x_pigpiod_if2.c	/^#define GPIO /;"	d	file:
GPIO_BASE	pigpio.c	/^#define GPIO_BASE /;"	d	file:
GPIO_HW_CLK	pigpio.c	/^#define GPIO_HW_CLK /;"	d	file:
GPIO_HW_PWM	pigpio.c	/^#define GPIO_HW_PWM /;"	d	file:
GPIO_I2C	pigpio.c	/^#define GPIO_I2C /;"	d	file:
GPIO_LEN	pigpio.c	/^#define GPIO_LEN /;"	d	file:
GPIO_PWM	pigpio.c	/^#define GPIO_PWM /;"	d	file:
GPIO_SERVO	pigpio.c	/^#define GPIO_SERVO /;"	d	file:
GPIO_SPI	pigpio.c	/^#define GPIO_SPI /;"	d	file:
GPIO_UNDEFINED	pigpio.c	/^#define GPIO_UNDEFINED /;"	d	file:
GPIO_WRITE	pigpio.c	/^#define GPIO_WRITE /;"	d	file:
GPLEN0	pigpio.c	/^#define GPLEN0 /;"	d	file:
GPLEN1	pigpio.c	/^#define GPLEN1 /;"	d	file:
GPLEV0	pigpio.c	/^#define GPLEV0 /;"	d	file:
GPLEV1	pigpio.c	/^#define GPLEV1 /;"	d	file:
GPPUD	pigpio.c	/^#define GPPUD /;"	d	file:
GPPUDCLK0	pigpio.c	/^#define GPPUDCLK0 /;"	d	file:
GPPUDCLK1	pigpio.c	/^#define GPPUDCLK1 /;"	d	file:
GPPUPPDN0	pigpio.c	/^#define GPPUPPDN0 /;"	d	file:
GPPUPPDN1	pigpio.c	/^#define GPPUPPDN1 /;"	d	file:
GPPUPPDN2	pigpio.c	/^#define GPPUPPDN2 /;"	d	file:
GPPUPPDN3	pigpio.c	/^#define GPPUPPDN3 /;"	d	file:
GPREN0	pigpio.c	/^#define GPREN0 /;"	d	file:
GPREN1	pigpio.c	/^#define GPREN1 /;"	d	file:
GPSET0	pigpio.c	/^#define GPSET0 /;"	d	file:
GPSET1	pigpio.c	/^#define GPSET1 /;"	d	file:
HALL	EXAMPLES/C/HALL_EFFECT_SENSOR/hall.c	/^#define HALL /;"	d	file:
Hasher	EXAMPLES/CPP/IR_RECEIVER/ir_hasher.cpp	/^Hasher::Hasher(int gpio, HasherCB_t callback, int timeout)$/;"	f	class:Hasher
Hasher	EXAMPLES/CPP/IR_RECEIVER/ir_hasher.hpp	/^class Hasher$/;"	c
HasherCB_t	EXAMPLES/CPP/IR_RECEIVER/ir_hasher.hpp	/^typedef void (*HasherCB_t)(uint32_t);$/;"	t	typeref:typename:void (*)(uint32_t)
I	pigpio.c	/^      wfRxI2C_t    I;$/;"	m	union:__anon638cdb1e1808::__anon638cdb1e190a	typeref:typename:wfRxI2C_t	file:
I2CGetBit	pigpio.c	/^static int I2CGetBit(wfRx_t *w)$/;"	f	typeref:typename:int	file:
I2CGetByte	pigpio.c	/^static uint8_t I2CGetByte(wfRx_t *w, int nack)$/;"	f	typeref:typename:uint8_t	file:
I2CPutBit	pigpio.c	/^static void I2CPutBit(wfRx_t *w, int bit)$/;"	f	typeref:typename:void	file:
I2CPutByte	pigpio.c	/^static int I2CPutByte(wfRx_t *w, int byte)$/;"	f	typeref:typename:int	file:
I2CStart	pigpio.c	/^static void I2CStart(wfRx_t *w)$/;"	f	typeref:typename:void	file:
I2CStop	pigpio.c	/^static void I2CStop(wfRx_t *w)$/;"	f	typeref:typename:void	file:
I2C_clock_stretch	pigpio.c	/^static void I2C_clock_stretch(wfRx_t *w)$/;"	f	typeref:typename:void	file:
I2C_delay	pigpio.c	/^static void I2C_delay(wfRx_t *w)$/;"	f	typeref:typename:void	file:
IR_HASHER_H	EXAMPLES/C/IR_RECEIVER/ir_hasher.h	/^#define IR_HASHER_H$/;"	d
IR_RX_HASHER_HPP	EXAMPLES/CPP/IR_RECEIVER/ir_hasher.hpp	/^#define IR_RX_HASHER_HPP$/;"	d
LIB	Makefile	/^LIB      = $(LIB1) $(LIB2) $(LIB3)$/;"	m
LIB1	Makefile	/^LIB1     = libpigpio.so$/;"	m
LIB2	Makefile	/^LIB2     = libpigpiod_if.so$/;"	m
LIB3	Makefile	/^LIB3     = libpigpiod_if2.so$/;"	m
LL1	Makefile	/^LL1      = -L. -lpigpio -pthread -lrt$/;"	m
LL2	Makefile	/^LL2      = -L. -lpigpiod_if -pthread -lrt$/;"	m
LL3	Makefile	/^LL3      = -L. -lpigpiod_if2 -pthread -lrt$/;"	m
LVS_PER_IPAGE	pigpio.c	/^#define LVS_PER_IPAGE /;"	d	file:
MAX_CONNECT_ADDRESSES	pigpio.h	/^#define MAX_CONNECT_ADDRESSES /;"	d
MAX_EMITS	pigpio.c	/^#define MAX_EMITS /;"	d	file:
MAX_GPIOS	EXAMPLES/C/COUNTER_1/freq_count_1.c	/^#define MAX_GPIOS /;"	d	file:
MAX_GPIOS	EXAMPLES/C/COUNTER_2/freq_count_2.c	/^#define MAX_GPIOS /;"	d	file:
MAX_PI	pigpiod_if2.c	/^#define MAX_PI /;"	d	file:
MAX_READING	EXAMPLES/C/POT_CAP_RECHARGE/pot_cap_charge.c	/^#define MAX_READING /;"	d	file:
MAX_REPORT	pigpio.c	/^#define MAX_REPORT /;"	d	file:
MAX_SAMPLE	pigpio.c	/^#define MAX_SAMPLE /;"	d	file:
MB_ALLOCATE_MEMORY_TAG	pigpio.c	/^#define MB_ALLOCATE_MEMORY_TAG /;"	d	file:
MB_DEV1	pigpio.c	/^#define MB_DEV1 /;"	d	file:
MB_DEV2	pigpio.c	/^#define MB_DEV2 /;"	d	file:
MB_DEV_MAJOR	pigpio.c	/^#define MB_DEV_MAJOR /;"	d	file:
MB_END_TAG	pigpio.c	/^#define MB_END_TAG /;"	d	file:
MB_IOCTL	pigpio.c	/^#define MB_IOCTL /;"	d	file:
MB_LOCK_MEMORY_TAG	pigpio.c	/^#define MB_LOCK_MEMORY_TAG /;"	d	file:
MB_PROCESS_REQUEST	pigpio.c	/^#define MB_PROCESS_REQUEST /;"	d	file:
MB_RELEASE_MEMORY_TAG	pigpio.c	/^#define MB_RELEASE_MEMORY_TAG /;"	d	file:
MB_UNLOCK_MEMORY_TAG	pigpio.c	/^#define MB_UNLOCK_MEMORY_TAG /;"	d	file:
MILLION	pigpio.c	/^#define MILLION /;"	d	file:
MISO	pigpio.c	/^   int MISO;$/;"	m	struct:__anon638cdb1e1708	typeref:typename:int	file:
MISOMode	pigpio.c	/^   int MISOMode;$/;"	m	struct:__anon638cdb1e1708	typeref:typename:int	file:
MOSI	pigpio.c	/^   int MOSI;$/;"	m	struct:__anon638cdb1e1708	typeref:typename:int	file:
MOSIMode	pigpio.c	/^   int MOSIMode;$/;"	m	struct:__anon638cdb1e1708	typeref:typename:int	file:
NORMAL_DMA	pigpio.c	/^#define NORMAL_DMA /;"	d	file:
NUM_CBS	pigpio.c	/^#define NUM_CBS /;"	d	file:
NUM_WAVE_CBS	pigpio.c	/^#define NUM_WAVE_CBS /;"	d	file:
NUM_WAVE_OOL	pigpio.c	/^#define NUM_WAVE_OOL /;"	d	file:
OBJ1	Makefile	/^OBJ1     = pigpio.o command.o$/;"	m
OBJ2	Makefile	/^OBJ2     = pigpiod_if.o command.o$/;"	m
OBJ3	Makefile	/^OBJ3     = pigpiod_if2.o command.o$/;"	m
OFF_PER_IPAGE	pigpio.c	/^#define OFF_PER_IPAGE /;"	d	file:
ON_PER_IPAGE	pigpio.c	/^#define ON_PER_IPAGE /;"	d	file:
OOL	pigpio.c	/^   uint32_t OOL    [OOL_PER_OPAGE];$/;"	m	struct:__anon638cdb1e0308	typeref:typename:uint32_t[]	file:
OOL_PER_OPAGE	pigpio.c	/^#define OOL_PER_OPAGE /;"	d	file:
OPT_P_DEF	EXAMPLES/C/COUNTER_1/freq_count_1.c	/^#define OPT_P_DEF /;"	d	file:
OPT_P_DEF	EXAMPLES/C/COUNTER_2/freq_count_2.c	/^#define OPT_P_DEF /;"	d	file:
OPT_P_MAX	EXAMPLES/C/COUNTER_1/freq_count_1.c	/^#define OPT_P_MAX /;"	d	file:
OPT_P_MAX	EXAMPLES/C/COUNTER_2/freq_count_2.c	/^#define OPT_P_MAX /;"	d	file:
OPT_P_MIN	EXAMPLES/C/COUNTER_1/freq_count_1.c	/^#define OPT_P_MIN /;"	d	file:
OPT_P_MIN	EXAMPLES/C/COUNTER_2/freq_count_2.c	/^#define OPT_P_MIN /;"	d	file:
OPT_R_DEF	EXAMPLES/C/COUNTER_1/freq_count_1.c	/^#define OPT_R_DEF /;"	d	file:
OPT_R_DEF	EXAMPLES/C/COUNTER_2/freq_count_2.c	/^#define OPT_R_DEF /;"	d	file:
OPT_R_MAX	EXAMPLES/C/COUNTER_1/freq_count_1.c	/^#define OPT_R_MAX /;"	d	file:
OPT_R_MAX	EXAMPLES/C/COUNTER_2/freq_count_2.c	/^#define OPT_R_MAX /;"	d	file:
OPT_R_MIN	EXAMPLES/C/COUNTER_1/freq_count_1.c	/^#define OPT_R_MIN /;"	d	file:
OPT_R_MIN	EXAMPLES/C/COUNTER_2/freq_count_2.c	/^#define OPT_R_MIN /;"	d	file:
OPT_S_DEF	EXAMPLES/C/COUNTER_1/freq_count_1.c	/^#define OPT_S_DEF /;"	d	file:
OPT_S_DEF	EXAMPLES/C/COUNTER_2/freq_count_2.c	/^#define OPT_S_DEF /;"	d	file:
OPT_S_MAX	EXAMPLES/C/COUNTER_1/freq_count_1.c	/^#define OPT_S_MAX /;"	d	file:
OPT_S_MAX	EXAMPLES/C/COUNTER_2/freq_count_2.c	/^#define OPT_S_MAX /;"	d	file:
OPT_S_MIN	EXAMPLES/C/COUNTER_1/freq_count_1.c	/^#define OPT_S_MIN /;"	d	file:
OPT_S_MIN	EXAMPLES/C/COUNTER_2/freq_count_2.c	/^#define OPT_S_MIN /;"	d	file:
PADS_BASE	pigpio.c	/^#define PADS_BASE /;"	d	file:
PADS_LEN	pigpio.c	/^#define PADS_LEN /;"	d	file:
PAD_PER_IPAGE	pigpio.c	/^#define PAD_PER_IPAGE /;"	d	file:
PAGES_PER_BLOCK	pigpio.c	/^#define PAGES_PER_BLOCK /;"	d	file:
PAGE_SIZE	pigpio.c	/^#define PAGE_SIZE /;"	d	file:
PCF8591_I2C_ADDR	EXAMPLES/C/PCF8591_YL-40/PCF8591.c	/^#define PCF8591_I2C_ADDR /;"	d	file:
PCM_BASE	pigpio.c	/^#define PCM_BASE /;"	d	file:
PCM_CS	pigpio.c	/^#define PCM_CS /;"	d	file:
PCM_CS_DMAEN	pigpio.c	/^#define PCM_CS_DMAEN /;"	d	file:
PCM_CS_EN	pigpio.c	/^#define PCM_CS_EN /;"	d	file:
PCM_CS_RXCLR	pigpio.c	/^#define PCM_CS_RXCLR /;"	d	file:
PCM_CS_RXERR	pigpio.c	/^#define PCM_CS_RXERR /;"	d	file:
PCM_CS_RXON	pigpio.c	/^#define PCM_CS_RXON /;"	d	file:
PCM_CS_RXSEX	pigpio.c	/^#define PCM_CS_RXSEX /;"	d	file:
PCM_CS_RXTHR	pigpio.c	/^#define PCM_CS_RXTHR(/;"	d	file:
PCM_CS_STBY	pigpio.c	/^#define PCM_CS_STBY /;"	d	file:
PCM_CS_SYNC	pigpio.c	/^#define PCM_CS_SYNC /;"	d	file:
PCM_CS_TXCLR	pigpio.c	/^#define PCM_CS_TXCLR /;"	d	file:
PCM_CS_TXERR	pigpio.c	/^#define PCM_CS_TXERR /;"	d	file:
PCM_CS_TXON	pigpio.c	/^#define PCM_CS_TXON /;"	d	file:
PCM_CS_TXTHR	pigpio.c	/^#define PCM_CS_TXTHR(/;"	d	file:
PCM_DREQ	pigpio.c	/^#define PCM_DREQ /;"	d	file:
PCM_DREQ_RX_PANIC	pigpio.c	/^#define PCM_DREQ_RX_PANIC(/;"	d	file:
PCM_DREQ_RX_REQ_L	pigpio.c	/^#define PCM_DREQ_RX_REQ_L(/;"	d	file:
PCM_DREQ_TX_PANIC	pigpio.c	/^#define PCM_DREQ_TX_PANIC(/;"	d	file:
PCM_DREQ_TX_REQ_L	pigpio.c	/^#define PCM_DREQ_TX_REQ_L(/;"	d	file:
PCM_FIFO	pigpio.c	/^#define PCM_FIFO /;"	d	file:
PCM_GRAY	pigpio.c	/^#define PCM_GRAY /;"	d	file:
PCM_GRAY_CLR	pigpio.c	/^#define PCM_GRAY_CLR /;"	d	file:
PCM_GRAY_EN	pigpio.c	/^#define PCM_GRAY_EN /;"	d	file:
PCM_GRAY_FLUSH	pigpio.c	/^#define PCM_GRAY_FLUSH /;"	d	file:
PCM_INTEN	pigpio.c	/^#define PCM_INTEN /;"	d	file:
PCM_INTEN_RXERR	pigpio.c	/^#define PCM_INTEN_RXERR /;"	d	file:
PCM_INTEN_RXR	pigpio.c	/^#define PCM_INTEN_RXR /;"	d	file:
PCM_INTEN_TXERR	pigpio.c	/^#define PCM_INTEN_TXERR /;"	d	file:
PCM_INTEN_TXW	pigpio.c	/^#define PCM_INTEN_TXW /;"	d	file:
PCM_INTSTC	pigpio.c	/^#define PCM_INTSTC /;"	d	file:
PCM_INTSTC_RXERR	pigpio.c	/^#define PCM_INTSTC_RXERR /;"	d	file:
PCM_INTSTC_RXR	pigpio.c	/^#define PCM_INTSTC_RXR /;"	d	file:
PCM_INTSTC_TXERR	pigpio.c	/^#define PCM_INTSTC_TXERR /;"	d	file:
PCM_INTSTC_TXW	pigpio.c	/^#define PCM_INTSTC_TXW /;"	d	file:
PCM_LEN	pigpio.c	/^#define PCM_LEN /;"	d	file:
PCM_MODE	pigpio.c	/^#define PCM_MODE /;"	d	file:
PCM_MODE_CLKI	pigpio.c	/^#define PCM_MODE_CLKI /;"	d	file:
PCM_MODE_CLKM	pigpio.c	/^#define PCM_MODE_CLKM /;"	d	file:
PCM_MODE_CLK_DIS	pigpio.c	/^#define PCM_MODE_CLK_DIS /;"	d	file:
PCM_MODE_FLEN	pigpio.c	/^#define PCM_MODE_FLEN(/;"	d	file:
PCM_MODE_FRXP	pigpio.c	/^#define PCM_MODE_FRXP /;"	d	file:
PCM_MODE_FSI	pigpio.c	/^#define PCM_MODE_FSI /;"	d	file:
PCM_MODE_FSLEN	pigpio.c	/^#define PCM_MODE_FSLEN(/;"	d	file:
PCM_MODE_FSM	pigpio.c	/^#define PCM_MODE_FSM /;"	d	file:
PCM_MODE_FTXP	pigpio.c	/^#define PCM_MODE_FTXP /;"	d	file:
PCM_MODE_PDME	pigpio.c	/^#define PCM_MODE_PDME /;"	d	file:
PCM_MODE_PDMN	pigpio.c	/^#define PCM_MODE_PDMN /;"	d	file:
PCM_RXC	pigpio.c	/^#define PCM_RXC /;"	d	file:
PCM_RXC_CH1EN	pigpio.c	/^#define PCM_RXC_CH1EN /;"	d	file:
PCM_RXC_CH1POS	pigpio.c	/^#define PCM_RXC_CH1POS(/;"	d	file:
PCM_RXC_CH1WEX	pigpio.c	/^#define PCM_RXC_CH1WEX /;"	d	file:
PCM_RXC_CH1WID	pigpio.c	/^#define PCM_RXC_CH1WID(/;"	d	file:
PCM_RXC_CH2EN	pigpio.c	/^#define PCM_RXC_CH2EN /;"	d	file:
PCM_RXC_CH2POS	pigpio.c	/^#define PCM_RXC_CH2POS(/;"	d	file:
PCM_RXC_CH2WEX	pigpio.c	/^#define PCM_RXC_CH2WEX /;"	d	file:
PCM_RXC_CH2WID	pigpio.c	/^#define PCM_RXC_CH2WID(/;"	d	file:
PCM_TIMER	pigpio.c	/^#define PCM_TIMER /;"	d	file:
PCM_TXC	pigpio.c	/^#define PCM_TXC /;"	d	file:
PCM_TXC_CH1EN	pigpio.c	/^#define PCM_TXC_CH1EN /;"	d	file:
PCM_TXC_CH1POS	pigpio.c	/^#define PCM_TXC_CH1POS(/;"	d	file:
PCM_TXC_CH1WEX	pigpio.c	/^#define PCM_TXC_CH1WEX /;"	d	file:
PCM_TXC_CH1WID	pigpio.c	/^#define PCM_TXC_CH1WID(/;"	d	file:
PCM_TXC_CH2EN	pigpio.c	/^#define PCM_TXC_CH2EN /;"	d	file:
PCM_TXC_CH2POS	pigpio.c	/^#define PCM_TXC_CH2POS(/;"	d	file:
PCM_TXC_CH2WEX	pigpio.c	/^#define PCM_TXC_CH2WEX /;"	d	file:
PCM_TXC_CH2WID	pigpio.c	/^#define PCM_TXC_CH2WID(/;"	d	file:
PIGPIOD_IF2_H	pigpiod_if2.h	/^#define PIGPIOD_IF2_H$/;"	d
PIGPIOD_IF2_VERSION	pigpiod_if2.h	/^#define PIGPIOD_IF2_VERSION /;"	d
PIGPIOD_IF_H	pigpiod_if.h	/^#define PIGPIOD_IF_H$/;"	d
PIGPIOD_IF_VERSION	pigpiod_if.h	/^#define PIGPIOD_IF_VERSION /;"	d
PIGPIO_H	pigpio.h	/^#define PIGPIO_H$/;"	d
PIGPIO_VERSION	pigpio.h	/^#define PIGPIO_VERSION /;"	d
PIGS_CONNECT_ERR	pigs.h	/^#define PIGS_CONNECT_ERR /;"	d
PIGS_H	pigs.h	/^#define PIGS_H$/;"	d
PIGS_OK	pigs.h	/^#define PIGS_OK /;"	d
PIGS_OPTION_ERR	pigs.h	/^#define PIGS_OPTION_ERR /;"	d
PIGS_SCRIPT_ERR	pigs.h	/^#define PIGS_SCRIPT_ERR /;"	d
PISCOPE_MAX_REPORTS_PER_READ	pigpiod_if.c	/^#define PISCOPE_MAX_REPORTS_PER_READ /;"	d	file:
PI_ALT0	pigpio.h	/^#define PI_ALT0 /;"	d
PI_ALT1	pigpio.h	/^#define PI_ALT1 /;"	d
PI_ALT2	pigpio.h	/^#define PI_ALT2 /;"	d
PI_ALT3	pigpio.h	/^#define PI_ALT3 /;"	d
PI_ALT4	pigpio.h	/^#define PI_ALT4 /;"	d
PI_ALT5	pigpio.h	/^#define PI_ALT5 /;"	d
PI_ASPI_CE0	pigpio.c	/^#define PI_ASPI_CE0 /;"	d	file:
PI_ASPI_CE1	pigpio.c	/^#define PI_ASPI_CE1 /;"	d	file:
PI_ASPI_CE2	pigpio.c	/^#define PI_ASPI_CE2 /;"	d	file:
PI_ASPI_MISO	pigpio.c	/^#define PI_ASPI_MISO /;"	d	file:
PI_ASPI_MOSI	pigpio.c	/^#define PI_ASPI_MOSI /;"	d	file:
PI_ASPI_SCLK	pigpio.c	/^#define PI_ASPI_SCLK /;"	d	file:
PI_BAD_BUF_MILLIS	pigpio.h	/^#define PI_BAD_BUF_MILLIS /;"	d
PI_BAD_CFG_INTERNAL	pigpio.h	/^#define PI_BAD_CFG_INTERNAL /;"	d
PI_BAD_CHAIN_CMD	pigpio.h	/^#define PI_BAD_CHAIN_CMD /;"	d
PI_BAD_CHAIN_DELAY	pigpio.h	/^#define PI_BAD_CHAIN_DELAY /;"	d
PI_BAD_CHAIN_LOOP	pigpio.h	/^#define PI_BAD_CHAIN_LOOP /;"	d
PI_BAD_CHANNEL	pigpio.h	/^#define PI_BAD_CHANNEL /;"	d
PI_BAD_CLK_MICROS	pigpio.h	/^#define PI_BAD_CLK_MICROS /;"	d
PI_BAD_CLK_PERIPH	pigpio.h	/^#define PI_BAD_CLK_PERIPH /;"	d
PI_BAD_CLK_SOURCE	pigpio.h	/^#define PI_BAD_CLK_SOURCE /;"	d
PI_BAD_DATABITS	pigpio.h	/^#define PI_BAD_DATABITS /;"	d
PI_BAD_DUTYCYCLE	pigpio.h	/^#define PI_BAD_DUTYCYCLE /;"	d
PI_BAD_DUTYRANGE	pigpio.h	/^#define PI_BAD_DUTYRANGE /;"	d
PI_BAD_DUTY_RANGE	pigpio.h	/^#define PI_BAD_DUTY_RANGE /;"	d
PI_BAD_EDGE	pigpio.h	/^#define PI_BAD_EDGE /;"	d
PI_BAD_EVENT_ID	pigpio.h	/^#define PI_BAD_EVENT_ID /;"	d
PI_BAD_FIFO_COMMAND	pigpio.h	/^#define PI_BAD_FIFO_COMMAND /;"	d
PI_BAD_FILE_FLAG	pigpio.h	/^#define PI_BAD_FILE_FLAG /;"	d
PI_BAD_FILE_MODE	pigpio.h	/^#define PI_BAD_FILE_MODE /;"	d
PI_BAD_FILE_READ	pigpio.h	/^#define PI_BAD_FILE_READ /;"	d
PI_BAD_FILE_SEEK	pigpio.h	/^#define PI_BAD_FILE_SEEK /;"	d
PI_BAD_FILE_WRITE	pigpio.h	/^#define PI_BAD_FILE_WRITE /;"	d
PI_BAD_FILTER	pigpio.h	/^#define PI_BAD_FILTER /;"	d
PI_BAD_FLAGS	pigpio.h	/^#define PI_BAD_FLAGS /;"	d
PI_BAD_FOREVER	pigpio.h	/^#define PI_BAD_FOREVER /;"	d
PI_BAD_GPIO	pigpio.h	/^#define PI_BAD_GPIO /;"	d
PI_BAD_HANDLE	pigpio.h	/^#define PI_BAD_HANDLE /;"	d
PI_BAD_HCLK_FREQ	pigpio.h	/^#define PI_BAD_HCLK_FREQ /;"	d
PI_BAD_HCLK_PASS	pigpio.h	/^#define PI_BAD_HCLK_PASS /;"	d
PI_BAD_HPWM_DUTY	pigpio.h	/^#define PI_BAD_HPWM_DUTY /;"	d
PI_BAD_HPWM_FREQ	pigpio.h	/^#define PI_BAD_HPWM_FREQ /;"	d
PI_BAD_I2C_ADDR	pigpio.h	/^#define PI_BAD_I2C_ADDR /;"	d
PI_BAD_I2C_BAUD	pigpio.h	/^#define PI_BAD_I2C_BAUD /;"	d
PI_BAD_I2C_BUS	pigpio.h	/^#define PI_BAD_I2C_BUS /;"	d
PI_BAD_I2C_CMD	pigpio.h	/^#define PI_BAD_I2C_CMD /;"	d
PI_BAD_I2C_RLEN	pigpio.h	/^#define PI_BAD_I2C_RLEN /;"	d
PI_BAD_I2C_SEG	pigpio.h	/^#define PI_BAD_I2C_SEG /;"	d
PI_BAD_I2C_WLEN	pigpio.h	/^#define PI_BAD_I2C_WLEN /;"	d
PI_BAD_IF_FLAGS	pigpio.h	/^#define PI_BAD_IF_FLAGS /;"	d
PI_BAD_ISR_INIT	pigpio.h	/^#define PI_BAD_ISR_INIT /;"	d
PI_BAD_LEVEL	pigpio.h	/^#define PI_BAD_LEVEL /;"	d
PI_BAD_MALLOC_MODE	pigpio.h	/^#define PI_BAD_MALLOC_MODE /;"	d
PI_BAD_MICROS	pigpio.h	/^#define PI_BAD_MICROS /;"	d
PI_BAD_MICS_DELAY	pigpio.h	/^#define PI_BAD_MICS_DELAY /;"	d
PI_BAD_MILS_DELAY	pigpio.h	/^#define PI_BAD_MILS_DELAY /;"	d
PI_BAD_MODE	pigpio.h	/^#define PI_BAD_MODE /;"	d
PI_BAD_MS	pigpio.h	/^#define PI_BAD_MS /;"	d
PI_BAD_PAD	pigpio.h	/^#define PI_BAD_PAD /;"	d
PI_BAD_PARAM	pigpio.h	/^#define PI_BAD_PARAM /;"	d
PI_BAD_PARAM_NUM	pigpio.h	/^#define PI_BAD_PARAM_NUM /;"	d
PI_BAD_PATHNAME	pigpio.h	/^#define PI_BAD_PATHNAME /;"	d
PI_BAD_POINTER	pigpio.h	/^#define PI_BAD_POINTER /;"	d
PI_BAD_PRIM_CHANNEL	pigpio.h	/^#define PI_BAD_PRIM_CHANNEL /;"	d
PI_BAD_PUD	pigpio.h	/^#define PI_BAD_PUD /;"	d
PI_BAD_PULSELEN	pigpio.h	/^#define PI_BAD_PULSELEN /;"	d
PI_BAD_PULSEWIDTH	pigpio.h	/^#define PI_BAD_PULSEWIDTH /;"	d
PI_BAD_SCRIPT	pigpio.h	/^#define PI_BAD_SCRIPT /;"	d
PI_BAD_SCRIPT_CMD	pigpio.h	/^#define PI_BAD_SCRIPT_CMD /;"	d
PI_BAD_SCRIPT_ID	pigpio.h	/^#define PI_BAD_SCRIPT_ID /;"	d
PI_BAD_SCRIPT_NAME	pigpio.h	/^#define PI_BAD_SCRIPT_NAME /;"	d
PI_BAD_SECONDS	pigpio.h	/^#define PI_BAD_SECONDS /;"	d
PI_BAD_SECO_CHANNEL	pigpio.h	/^#define PI_BAD_SECO_CHANNEL /;"	d
PI_BAD_SERIAL_BUF	pigpio.h	/^#define PI_BAD_SERIAL_BUF /;"	d
PI_BAD_SERIAL_COUNT	pigpio.h	/^#define PI_BAD_SERIAL_COUNT /;"	d
PI_BAD_SERIAL_STRUC	pigpio.h	/^#define PI_BAD_SERIAL_STRUC /;"	d
PI_BAD_SER_DEVICE	pigpio.h	/^#define PI_BAD_SER_DEVICE /;"	d
PI_BAD_SER_INVERT	pigpio.h	/^#define PI_BAD_SER_INVERT /;"	d
PI_BAD_SER_OFFSET	pigpio.h	/^#define PI_BAD_SER_OFFSET /;"	d
PI_BAD_SER_SPEED	pigpio.h	/^#define PI_BAD_SER_SPEED /;"	d
PI_BAD_SHELL_STATUS	pigpio.h	/^#define PI_BAD_SHELL_STATUS /;"	d
PI_BAD_SIGNUM	pigpio.h	/^#define PI_BAD_SIGNUM /;"	d
PI_BAD_SMBUS_CMD	pigpio.h	/^#define PI_BAD_SMBUS_CMD /;"	d
PI_BAD_SOCKET_PORT	pigpio.h	/^#define PI_BAD_SOCKET_PORT /;"	d
PI_BAD_SPI_BAUD	pigpio.h	/^#define PI_BAD_SPI_BAUD /;"	d
PI_BAD_SPI_CHANNEL	pigpio.h	/^#define PI_BAD_SPI_CHANNEL /;"	d
PI_BAD_SPI_COUNT	pigpio.h	/^#define PI_BAD_SPI_COUNT /;"	d
PI_BAD_SPI_SPEED	pigpio.h	/^#define PI_BAD_SPI_SPEED /;"	d
PI_BAD_STOPBITS	pigpio.h	/^#define PI_BAD_STOPBITS /;"	d
PI_BAD_STRENGTH	pigpio.h	/^#define PI_BAD_STRENGTH /;"	d
PI_BAD_TAG	pigpio.h	/^#define PI_BAD_TAG /;"	d
PI_BAD_TIMER	pigpio.h	/^#define PI_BAD_TIMER /;"	d
PI_BAD_TIMETYPE	pigpio.h	/^#define PI_BAD_TIMETYPE /;"	d
PI_BAD_USER_GPIO	pigpio.h	/^#define PI_BAD_USER_GPIO /;"	d
PI_BAD_VAR_NUM	pigpio.h	/^#define PI_BAD_VAR_NUM /;"	d
PI_BAD_WAVE_BAUD	pigpio.h	/^#define PI_BAD_WAVE_BAUD /;"	d
PI_BAD_WAVE_ID	pigpio.h	/^#define PI_BAD_WAVE_ID /;"	d
PI_BAD_WAVE_MODE	pigpio.h	/^#define PI_BAD_WAVE_MODE /;"	d
PI_BAD_WDOG_TIMEOUT	pigpio.h	/^#define PI_BAD_WDOG_TIMEOUT /;"	d
PI_BAD_WVSC_COMMND	pigpio.h	/^#define PI_BAD_WVSC_COMMND /;"	d
PI_BAD_WVSM_COMMND	pigpio.h	/^#define PI_BAD_WVSM_COMMND /;"	d
PI_BAD_WVSP_COMMND	pigpio.h	/^#define PI_BAD_WVSP_COMMND /;"	d
PI_BB_I2C_MAX_BAUD	pigpio.h	/^#define PI_BB_I2C_MAX_BAUD /;"	d
PI_BB_I2C_MIN_BAUD	pigpio.h	/^#define PI_BB_I2C_MIN_BAUD /;"	d
PI_BB_SER_INVERT	pigpio.h	/^#define PI_BB_SER_INVERT /;"	d
PI_BB_SER_MAX_BAUD	pigpio.h	/^#define PI_BB_SER_MAX_BAUD /;"	d
PI_BB_SER_MIN_BAUD	pigpio.h	/^#define PI_BB_SER_MIN_BAUD /;"	d
PI_BB_SER_NORMAL	pigpio.h	/^#define PI_BB_SER_NORMAL /;"	d
PI_BB_SPI_MAX_BAUD	pigpio.h	/^#define PI_BB_SPI_MAX_BAUD /;"	d
PI_BB_SPI_MIN_BAUD	pigpio.h	/^#define PI_BB_SPI_MIN_BAUD /;"	d
PI_BUF_MILLIS_MAX	pigpio.h	/^#define PI_BUF_MILLIS_MAX /;"	d
PI_BUF_MILLIS_MIN	pigpio.h	/^#define PI_BUF_MILLIS_MIN /;"	d
PI_CFG_ALERT_FREQ	pigpio.h	/^#define PI_CFG_ALERT_FREQ /;"	d
PI_CFG_DBG_LEVEL	pigpio.h	/^#define PI_CFG_DBG_LEVEL /;"	d
PI_CFG_ILLEGAL_VAL	pigpio.h	/^#define PI_CFG_ILLEGAL_VAL /;"	d
PI_CFG_NOSIGHANDLER	pigpio.h	/^#define PI_CFG_NOSIGHANDLER /;"	d
PI_CFG_RT_PRIORITY	pigpio.h	/^#define PI_CFG_RT_PRIORITY /;"	d
PI_CFG_STATS	pigpio.h	/^#define PI_CFG_STATS /;"	d
PI_CHAIN_COUNTER	pigpio.h	/^#define PI_CHAIN_COUNTER /;"	d
PI_CHAIN_LOOP_CNT	pigpio.h	/^#define PI_CHAIN_LOOP_CNT /;"	d
PI_CHAIN_NESTING	pigpio.h	/^#define PI_CHAIN_NESTING /;"	d
PI_CHAIN_TOO_BIG	pigpio.h	/^#define PI_CHAIN_TOO_BIG /;"	d
PI_CLEAR	pigpio.h	/^#define PI_CLEAR /;"	d
PI_CLOCK_PCM	pigpio.h	/^#define PI_CLOCK_PCM /;"	d
PI_CLOCK_PWM	pigpio.h	/^#define PI_CLOCK_PWM /;"	d
PI_CMD_ADD	pigpio.h	/^#define PI_CMD_ADD /;"	d
PI_CMD_AND	pigpio.h	/^#define PI_CMD_AND /;"	d
PI_CMD_BC1	pigpio.h	/^#define PI_CMD_BC1 /;"	d
PI_CMD_BC2	pigpio.h	/^#define PI_CMD_BC2 /;"	d
PI_CMD_BI2CC	pigpio.h	/^#define PI_CMD_BI2CC /;"	d
PI_CMD_BI2CO	pigpio.h	/^#define PI_CMD_BI2CO /;"	d
PI_CMD_BI2CZ	pigpio.h	/^#define PI_CMD_BI2CZ /;"	d
PI_CMD_BR1	pigpio.h	/^#define PI_CMD_BR1 /;"	d
PI_CMD_BR2	pigpio.h	/^#define PI_CMD_BR2 /;"	d
PI_CMD_BS1	pigpio.h	/^#define PI_CMD_BS1 /;"	d
PI_CMD_BS2	pigpio.h	/^#define PI_CMD_BS2 /;"	d
PI_CMD_BSCX	pigpio.h	/^#define PI_CMD_BSCX /;"	d
PI_CMD_BSPIC	pigpio.h	/^#define PI_CMD_BSPIC /;"	d
PI_CMD_BSPIO	pigpio.h	/^#define PI_CMD_BSPIO /;"	d
PI_CMD_BSPIX	pigpio.h	/^#define PI_CMD_BSPIX /;"	d
PI_CMD_CALL	pigpio.h	/^#define PI_CMD_CALL /;"	d
PI_CMD_CF1	pigpio.h	/^#define PI_CMD_CF1 /;"	d
PI_CMD_CF2	pigpio.h	/^#define PI_CMD_CF2 /;"	d
PI_CMD_CGI	pigpio.h	/^#define PI_CMD_CGI /;"	d
PI_CMD_CMDR	pigpio.h	/^#define PI_CMD_CMDR /;"	d
PI_CMD_CMDW	pigpio.h	/^#define PI_CMD_CMDW /;"	d
PI_CMD_CMP	pigpio.h	/^#define PI_CMD_CMP /;"	d
PI_CMD_CSI	pigpio.h	/^#define PI_CMD_CSI /;"	d
PI_CMD_DCR	pigpio.h	/^#define PI_CMD_DCR /;"	d
PI_CMD_DCRA	pigpio.h	/^#define PI_CMD_DCRA /;"	d
PI_CMD_DIV	pigpio.h	/^#define PI_CMD_DIV /;"	d
PI_CMD_EVM	pigpio.h	/^#define PI_CMD_EVM /;"	d
PI_CMD_EVT	pigpio.h	/^#define PI_CMD_EVT /;"	d
PI_CMD_EVTWT	pigpio.h	/^#define PI_CMD_EVTWT /;"	d
PI_CMD_FC	pigpio.h	/^#define PI_CMD_FC /;"	d
PI_CMD_FG	pigpio.h	/^#define PI_CMD_FG /;"	d
PI_CMD_FL	pigpio.h	/^#define PI_CMD_FL /;"	d
PI_CMD_FN	pigpio.h	/^#define PI_CMD_FN /;"	d
PI_CMD_FO	pigpio.h	/^#define PI_CMD_FO /;"	d
PI_CMD_FR	pigpio.h	/^#define PI_CMD_FR /;"	d
PI_CMD_FS	pigpio.h	/^#define PI_CMD_FS /;"	d
PI_CMD_FW	pigpio.h	/^#define PI_CMD_FW /;"	d
PI_CMD_GDC	pigpio.h	/^#define PI_CMD_GDC /;"	d
PI_CMD_GPW	pigpio.h	/^#define PI_CMD_GPW /;"	d
PI_CMD_HALT	pigpio.h	/^#define PI_CMD_HALT /;"	d
PI_CMD_HC	pigpio.h	/^#define PI_CMD_HC /;"	d
PI_CMD_HELP	pigpio.h	/^#define PI_CMD_HELP /;"	d
PI_CMD_HP	pigpio.h	/^#define PI_CMD_HP /;"	d
PI_CMD_HWVER	pigpio.h	/^#define PI_CMD_HWVER /;"	d
PI_CMD_I2CC	pigpio.h	/^#define PI_CMD_I2CC /;"	d
PI_CMD_I2CO	pigpio.h	/^#define PI_CMD_I2CO /;"	d
PI_CMD_I2CPC	pigpio.h	/^#define PI_CMD_I2CPC /;"	d
PI_CMD_I2CPK	pigpio.h	/^#define PI_CMD_I2CPK /;"	d
PI_CMD_I2CRB	pigpio.h	/^#define PI_CMD_I2CRB /;"	d
PI_CMD_I2CRD	pigpio.h	/^#define PI_CMD_I2CRD /;"	d
PI_CMD_I2CRI	pigpio.h	/^#define PI_CMD_I2CRI /;"	d
PI_CMD_I2CRK	pigpio.h	/^#define PI_CMD_I2CRK /;"	d
PI_CMD_I2CRS	pigpio.h	/^#define PI_CMD_I2CRS /;"	d
PI_CMD_I2CRW	pigpio.h	/^#define PI_CMD_I2CRW /;"	d
PI_CMD_I2CWB	pigpio.h	/^#define PI_CMD_I2CWB /;"	d
PI_CMD_I2CWD	pigpio.h	/^#define PI_CMD_I2CWD /;"	d
PI_CMD_I2CWI	pigpio.h	/^#define PI_CMD_I2CWI /;"	d
PI_CMD_I2CWK	pigpio.h	/^#define PI_CMD_I2CWK /;"	d
PI_CMD_I2CWQ	pigpio.h	/^#define PI_CMD_I2CWQ /;"	d
PI_CMD_I2CWS	pigpio.h	/^#define PI_CMD_I2CWS /;"	d
PI_CMD_I2CWW	pigpio.h	/^#define PI_CMD_I2CWW /;"	d
PI_CMD_I2CZ	pigpio.h	/^#define PI_CMD_I2CZ /;"	d
PI_CMD_INR	pigpio.h	/^#define PI_CMD_INR /;"	d
PI_CMD_INRA	pigpio.h	/^#define PI_CMD_INRA /;"	d
PI_CMD_INTERRUPTED	pigpio.h	/^#define PI_CMD_INTERRUPTED /;"	d
PI_CMD_JM	pigpio.h	/^#define PI_CMD_JM /;"	d
PI_CMD_JMP	pigpio.h	/^#define PI_CMD_JMP /;"	d
PI_CMD_JNZ	pigpio.h	/^#define PI_CMD_JNZ /;"	d
PI_CMD_JP	pigpio.h	/^#define PI_CMD_JP /;"	d
PI_CMD_JZ	pigpio.h	/^#define PI_CMD_JZ /;"	d
PI_CMD_LD	pigpio.h	/^#define PI_CMD_LD /;"	d
PI_CMD_LDA	pigpio.h	/^#define PI_CMD_LDA /;"	d
PI_CMD_LDAB	pigpio.h	/^#define PI_CMD_LDAB /;"	d
PI_CMD_MICS	pigpio.h	/^#define PI_CMD_MICS /;"	d
PI_CMD_MILS	pigpio.h	/^#define PI_CMD_MILS /;"	d
PI_CMD_MLT	pigpio.h	/^#define PI_CMD_MLT /;"	d
PI_CMD_MOD	pigpio.h	/^#define PI_CMD_MOD /;"	d
PI_CMD_MODEG	pigpio.h	/^#define PI_CMD_MODEG /;"	d
PI_CMD_MODES	pigpio.h	/^#define PI_CMD_MODES /;"	d
PI_CMD_NB	pigpio.h	/^#define PI_CMD_NB /;"	d
PI_CMD_NC	pigpio.h	/^#define PI_CMD_NC /;"	d
PI_CMD_NO	pigpio.h	/^#define PI_CMD_NO /;"	d
PI_CMD_NOIB	pigpio.h	/^#define PI_CMD_NOIB /;"	d
PI_CMD_NOP	pigpio.h	/^#define PI_CMD_NOP /;"	d
PI_CMD_NP	pigpio.h	/^#define PI_CMD_NP /;"	d
PI_CMD_OR	pigpio.h	/^#define PI_CMD_OR /;"	d
PI_CMD_PADG	pigpio.h	/^#define PI_CMD_PADG /;"	d
PI_CMD_PADS	pigpio.h	/^#define PI_CMD_PADS /;"	d
PI_CMD_PARSE	pigpio.h	/^#define PI_CMD_PARSE /;"	d
PI_CMD_PFG	pigpio.h	/^#define PI_CMD_PFG /;"	d
PI_CMD_PFS	pigpio.h	/^#define PI_CMD_PFS /;"	d
PI_CMD_PIGPV	pigpio.h	/^#define PI_CMD_PIGPV /;"	d
PI_CMD_POP	pigpio.h	/^#define PI_CMD_POP /;"	d
PI_CMD_POPA	pigpio.h	/^#define PI_CMD_POPA /;"	d
PI_CMD_PRG	pigpio.h	/^#define PI_CMD_PRG /;"	d
PI_CMD_PROC	pigpio.h	/^#define PI_CMD_PROC /;"	d
PI_CMD_PROCD	pigpio.h	/^#define PI_CMD_PROCD /;"	d
PI_CMD_PROCP	pigpio.h	/^#define PI_CMD_PROCP /;"	d
PI_CMD_PROCR	pigpio.h	/^#define PI_CMD_PROCR /;"	d
PI_CMD_PROCS	pigpio.h	/^#define PI_CMD_PROCS /;"	d
PI_CMD_PROCU	pigpio.h	/^#define PI_CMD_PROCU /;"	d
PI_CMD_PRRG	pigpio.h	/^#define PI_CMD_PRRG /;"	d
PI_CMD_PRS	pigpio.h	/^#define PI_CMD_PRS /;"	d
PI_CMD_PUD	pigpio.h	/^#define PI_CMD_PUD /;"	d
PI_CMD_PUSH	pigpio.h	/^#define PI_CMD_PUSH /;"	d
PI_CMD_PUSHA	pigpio.h	/^#define PI_CMD_PUSHA /;"	d
PI_CMD_PWM	pigpio.h	/^#define PI_CMD_PWM /;"	d
PI_CMD_READ	pigpio.h	/^#define PI_CMD_READ /;"	d
PI_CMD_RET	pigpio.h	/^#define PI_CMD_RET /;"	d
PI_CMD_RL	pigpio.h	/^#define PI_CMD_RL /;"	d
PI_CMD_RLA	pigpio.h	/^#define PI_CMD_RLA /;"	d
PI_CMD_RR	pigpio.h	/^#define PI_CMD_RR /;"	d
PI_CMD_RRA	pigpio.h	/^#define PI_CMD_RRA /;"	d
PI_CMD_SCRIPT	pigpio.h	/^#define PI_CMD_SCRIPT /;"	d
PI_CMD_SERC	pigpio.h	/^#define PI_CMD_SERC /;"	d
PI_CMD_SERDA	pigpio.h	/^#define PI_CMD_SERDA /;"	d
PI_CMD_SERO	pigpio.h	/^#define PI_CMD_SERO /;"	d
PI_CMD_SERR	pigpio.h	/^#define PI_CMD_SERR /;"	d
PI_CMD_SERRB	pigpio.h	/^#define PI_CMD_SERRB /;"	d
PI_CMD_SERVO	pigpio.h	/^#define PI_CMD_SERVO /;"	d
PI_CMD_SERW	pigpio.h	/^#define PI_CMD_SERW /;"	d
PI_CMD_SERWB	pigpio.h	/^#define PI_CMD_SERWB /;"	d
PI_CMD_SHELL	pigpio.h	/^#define PI_CMD_SHELL /;"	d
PI_CMD_SLR	pigpio.h	/^#define PI_CMD_SLR /;"	d
PI_CMD_SLRC	pigpio.h	/^#define PI_CMD_SLRC /;"	d
PI_CMD_SLRI	pigpio.h	/^#define PI_CMD_SLRI /;"	d
PI_CMD_SLRO	pigpio.h	/^#define PI_CMD_SLRO /;"	d
PI_CMD_SPIC	pigpio.h	/^#define PI_CMD_SPIC /;"	d
PI_CMD_SPIO	pigpio.h	/^#define PI_CMD_SPIO /;"	d
PI_CMD_SPIR	pigpio.h	/^#define PI_CMD_SPIR /;"	d
PI_CMD_SPIW	pigpio.h	/^#define PI_CMD_SPIW /;"	d
PI_CMD_SPIX	pigpio.h	/^#define PI_CMD_SPIX /;"	d
PI_CMD_STA	pigpio.h	/^#define PI_CMD_STA /;"	d
PI_CMD_STAB	pigpio.h	/^#define PI_CMD_STAB /;"	d
PI_CMD_SUB	pigpio.h	/^#define PI_CMD_SUB /;"	d
PI_CMD_SYS	pigpio.h	/^#define PI_CMD_SYS /;"	d
PI_CMD_TAG	pigpio.h	/^#define PI_CMD_TAG /;"	d
PI_CMD_TICK	pigpio.h	/^#define PI_CMD_TICK /;"	d
PI_CMD_TRIG	pigpio.h	/^#define PI_CMD_TRIG /;"	d
PI_CMD_WAIT	pigpio.h	/^#define PI_CMD_WAIT /;"	d
PI_CMD_WDOG	pigpio.h	/^#define PI_CMD_WDOG /;"	d
PI_CMD_WRITE	pigpio.h	/^#define PI_CMD_WRITE /;"	d
PI_CMD_WVAG	pigpio.h	/^#define PI_CMD_WVAG /;"	d
PI_CMD_WVAS	pigpio.h	/^#define PI_CMD_WVAS /;"	d
PI_CMD_WVBSY	pigpio.h	/^#define PI_CMD_WVBSY /;"	d
PI_CMD_WVCAP	pigpio.h	/^#define PI_CMD_WVCAP /;"	d
PI_CMD_WVCHA	pigpio.h	/^#define PI_CMD_WVCHA /;"	d
PI_CMD_WVCLR	pigpio.h	/^#define PI_CMD_WVCLR /;"	d
PI_CMD_WVCRE	pigpio.h	/^#define PI_CMD_WVCRE /;"	d
PI_CMD_WVDEL	pigpio.h	/^#define PI_CMD_WVDEL /;"	d
PI_CMD_WVGO	pigpio.h	/^#define PI_CMD_WVGO /;"	d
PI_CMD_WVGOR	pigpio.h	/^#define PI_CMD_WVGOR /;"	d
PI_CMD_WVHLT	pigpio.h	/^#define PI_CMD_WVHLT /;"	d
PI_CMD_WVNEW	pigpio.h	/^#define PI_CMD_WVNEW /;"	d
PI_CMD_WVSC	pigpio.h	/^#define PI_CMD_WVSC /;"	d
PI_CMD_WVSM	pigpio.h	/^#define PI_CMD_WVSM /;"	d
PI_CMD_WVSP	pigpio.h	/^#define PI_CMD_WVSP /;"	d
PI_CMD_WVTAT	pigpio.h	/^#define PI_CMD_WVTAT /;"	d
PI_CMD_WVTX	pigpio.h	/^#define PI_CMD_WVTX /;"	d
PI_CMD_WVTXM	pigpio.h	/^#define PI_CMD_WVTXM /;"	d
PI_CMD_WVTXR	pigpio.h	/^#define PI_CMD_WVTXR /;"	d
PI_CMD_X	pigpio.h	/^#define PI_CMD_X /;"	d
PI_CMD_XA	pigpio.h	/^#define PI_CMD_XA /;"	d
PI_CMD_XOR	pigpio.h	/^#define PI_CMD_XOR /;"	d
PI_CUSTOM_ERR_0	pigpio.h	/^#define PI_CUSTOM_ERR_0 /;"	d
PI_CUSTOM_ERR_999	pigpio.h	/^#define PI_CUSTOM_ERR_999 /;"	d
PI_DEFAULT_BUFFER_MILLIS	pigpio.h	/^#define PI_DEFAULT_BUFFER_MILLIS /;"	d
PI_DEFAULT_CFG_INTERNALS	pigpio.h	/^#define PI_DEFAULT_CFG_INTERNALS /;"	d
PI_DEFAULT_CLK_MICROS	pigpio.h	/^#define PI_DEFAULT_CLK_MICROS /;"	d
PI_DEFAULT_CLK_PERIPHERAL	pigpio.h	/^#define PI_DEFAULT_CLK_PERIPHERAL /;"	d
PI_DEFAULT_DMA_CHANNEL	pigpio.h	/^#define PI_DEFAULT_DMA_CHANNEL /;"	d
PI_DEFAULT_DMA_NOT_SET	pigpio.h	/^#define PI_DEFAULT_DMA_NOT_SET /;"	d
PI_DEFAULT_DMA_PRIMARY_CHANNEL	pigpio.h	/^#define PI_DEFAULT_DMA_PRIMARY_CHANNEL /;"	d
PI_DEFAULT_DMA_PRIMARY_CH_2711	pigpio.h	/^#define PI_DEFAULT_DMA_PRIMARY_CH_2711 /;"	d
PI_DEFAULT_DMA_SECONDARY_CHANNEL	pigpio.h	/^#define PI_DEFAULT_DMA_SECONDARY_CHANNEL /;"	d
PI_DEFAULT_DMA_SECONDARY_CH_2711	pigpio.h	/^#define PI_DEFAULT_DMA_SECONDARY_CH_2711 /;"	d
PI_DEFAULT_DUTYCYCLE_RANGE	pigpio.h	/^#define PI_DEFAULT_DUTYCYCLE_RANGE /;"	d
PI_DEFAULT_FOREGROUND	pigpio.h	/^#define PI_DEFAULT_FOREGROUND /;"	d
PI_DEFAULT_IF_FLAGS	pigpio.h	/^#define PI_DEFAULT_IF_FLAGS /;"	d
PI_DEFAULT_MEM_ALLOC_MODE	pigpio.h	/^#define PI_DEFAULT_MEM_ALLOC_MODE /;"	d
PI_DEFAULT_SOCKET_ADDR_STR	pigpio.h	/^#define PI_DEFAULT_SOCKET_ADDR_STR /;"	d
PI_DEFAULT_SOCKET_PORT	pigpio.h	/^#define PI_DEFAULT_SOCKET_PORT /;"	d
PI_DEFAULT_SOCKET_PORT_STR	pigpio.h	/^#define PI_DEFAULT_SOCKET_PORT_STR /;"	d
PI_DEFAULT_UPDATE_MASK_APLUS_BPLUS	pigpio.h	/^#define PI_DEFAULT_UPDATE_MASK_APLUS_BPLUS /;"	d
PI_DEFAULT_UPDATE_MASK_A_B2	pigpio.h	/^#define PI_DEFAULT_UPDATE_MASK_A_B2 /;"	d
PI_DEFAULT_UPDATE_MASK_B1	pigpio.h	/^#define PI_DEFAULT_UPDATE_MASK_B1 /;"	d
PI_DEFAULT_UPDATE_MASK_COMPUTE	pigpio.h	/^#define PI_DEFAULT_UPDATE_MASK_COMPUTE /;"	d
PI_DEFAULT_UPDATE_MASK_PI2B	pigpio.h	/^#define PI_DEFAULT_UPDATE_MASK_PI2B /;"	d
PI_DEFAULT_UPDATE_MASK_PI3B	pigpio.h	/^#define PI_DEFAULT_UPDATE_MASK_PI3B /;"	d
PI_DEFAULT_UPDATE_MASK_PI4B	pigpio.h	/^#define PI_DEFAULT_UPDATE_MASK_PI4B /;"	d
PI_DEFAULT_UPDATE_MASK_UNKNOWN	pigpio.h	/^#define PI_DEFAULT_UPDATE_MASK_UNKNOWN /;"	d
PI_DEFAULT_UPDATE_MASK_ZERO	pigpio.h	/^#define PI_DEFAULT_UPDATE_MASK_ZERO /;"	d
PI_DEPRECATED	pigpio.h	/^#define PI_DEPRECATED /;"	d
PI_DISABLE_ALERT	pigpio.h	/^#define PI_DISABLE_ALERT /;"	d
PI_DISABLE_FIFO_IF	pigpio.h	/^#define PI_DISABLE_FIFO_IF /;"	d
PI_DISABLE_SOCK_IF	pigpio.h	/^#define PI_DISABLE_SOCK_IF /;"	d
PI_DUP_TAG	pigpio.h	/^#define PI_DUP_TAG /;"	d
PI_EMPTY_WAVEFORM	pigpio.h	/^#define PI_EMPTY_WAVEFORM /;"	d
PI_ENDING	pigpio.c	/^#define PI_ENDING /;"	d	file:
PI_ENVADDR	pigpio.h	/^#define PI_ENVADDR /;"	d
PI_ENVPORT	pigpio.h	/^#define PI_ENVPORT /;"	d
PI_ERRFIFO	pigpio.h	/^#define PI_ERRFIFO /;"	d
PI_EVENT_BSC	pigpio.h	/^#define PI_EVENT_BSC /;"	d
PI_FILE_APPEND	pigpio.h	/^#define PI_FILE_APPEND /;"	d
PI_FILE_CLOSED	pigpio.c	/^#define PI_FILE_CLOSED /;"	d	file:
PI_FILE_CREATE	pigpio.h	/^#define PI_FILE_CREATE /;"	d
PI_FILE_IS_A_DIR	pigpio.h	/^#define PI_FILE_IS_A_DIR /;"	d
PI_FILE_MAX	pigpio.h	/^#define PI_FILE_MAX /;"	d
PI_FILE_MIN	pigpio.h	/^#define PI_FILE_MIN /;"	d
PI_FILE_NONE	pigpio.h	/^#define PI_FILE_NONE /;"	d
PI_FILE_NOT_ROPEN	pigpio.h	/^#define PI_FILE_NOT_ROPEN /;"	d
PI_FILE_NOT_WOPEN	pigpio.h	/^#define PI_FILE_NOT_WOPEN /;"	d
PI_FILE_OPENED	pigpio.c	/^#define PI_FILE_OPENED /;"	d	file:
PI_FILE_READ	pigpio.h	/^#define PI_FILE_READ /;"	d
PI_FILE_RESERVED	pigpio.c	/^#define PI_FILE_RESERVED /;"	d	file:
PI_FILE_RW	pigpio.h	/^#define PI_FILE_RW /;"	d
PI_FILE_SLOTS	pigpio.h	/^#define PI_FILE_SLOTS /;"	d
PI_FILE_TRUNC	pigpio.h	/^#define PI_FILE_TRUNC /;"	d
PI_FILE_WRITE	pigpio.h	/^#define PI_FILE_WRITE /;"	d
PI_FIL_OPEN_FAILED	pigpio.h	/^#define PI_FIL_OPEN_FAILED /;"	d
PI_FROM_CURRENT	pigpio.h	/^#define PI_FROM_CURRENT /;"	d
PI_FROM_END	pigpio.h	/^#define PI_FROM_END /;"	d
PI_FROM_START	pigpio.h	/^#define PI_FROM_START /;"	d
PI_GPIO_IN_USE	pigpio.h	/^#define PI_GPIO_IN_USE /;"	d
PI_HIGH	pigpio.h	/^#define PI_HIGH /;"	d
PI_HPWM_ILLEGAL	pigpio.h	/^#define PI_HPWM_ILLEGAL /;"	d
PI_HW_CLK_MAX_FREQ	pigpio.h	/^#define PI_HW_CLK_MAX_FREQ /;"	d
PI_HW_CLK_MAX_FREQ_2711	pigpio.h	/^#define PI_HW_CLK_MAX_FREQ_2711 /;"	d
PI_HW_CLK_MIN_FREQ	pigpio.h	/^#define PI_HW_CLK_MIN_FREQ /;"	d
PI_HW_CLK_MIN_FREQ_2711	pigpio.h	/^#define PI_HW_CLK_MIN_FREQ_2711 /;"	d
PI_HW_PWM_MAX_FREQ	pigpio.h	/^#define PI_HW_PWM_MAX_FREQ /;"	d
PI_HW_PWM_MAX_FREQ_2711	pigpio.h	/^#define PI_HW_PWM_MAX_FREQ_2711 /;"	d
PI_HW_PWM_MIN_FREQ	pigpio.h	/^#define PI_HW_PWM_MIN_FREQ /;"	d
PI_HW_PWM_RANGE	pigpio.h	/^#define PI_HW_PWM_RANGE /;"	d
PI_I2C_ADDR	pigpio.h	/^#define PI_I2C_ADDR /;"	d
PI_I2C_CLOSED	pigpio.c	/^#define PI_I2C_CLOSED /;"	d	file:
PI_I2C_COMBINED	pigpio.h	/^#define PI_I2C_COMBINED /;"	d
PI_I2C_COMBINED_OFF	pigpio.h	/^#define PI_I2C_COMBINED_OFF /;"	d
PI_I2C_COMBINED_ON	pigpio.h	/^#define PI_I2C_COMBINED_ON /;"	d
PI_I2C_END	pigpio.h	/^#define PI_I2C_END /;"	d
PI_I2C_ESC	pigpio.h	/^#define PI_I2C_ESC /;"	d
PI_I2C_FLAGS	pigpio.h	/^#define PI_I2C_FLAGS /;"	d
PI_I2C_FUNCS	pigpio.c	/^#define PI_I2C_FUNCS /;"	d	file:
PI_I2C_FUNC_SMBUS_PROC_CALL	pigpio.c	/^#define PI_I2C_FUNC_SMBUS_PROC_CALL /;"	d	file:
PI_I2C_FUNC_SMBUS_QUICK	pigpio.c	/^#define PI_I2C_FUNC_SMBUS_QUICK /;"	d	file:
PI_I2C_FUNC_SMBUS_READ_BLOCK_DATA	pigpio.c	/^#define PI_I2C_FUNC_SMBUS_READ_BLOCK_DATA /;"	d	file:
PI_I2C_FUNC_SMBUS_READ_BYTE	pigpio.c	/^#define PI_I2C_FUNC_SMBUS_READ_BYTE /;"	d	file:
PI_I2C_FUNC_SMBUS_READ_BYTE_DATA	pigpio.c	/^#define PI_I2C_FUNC_SMBUS_READ_BYTE_DATA /;"	d	file:
PI_I2C_FUNC_SMBUS_READ_I2C_BLOCK	pigpio.c	/^#define PI_I2C_FUNC_SMBUS_READ_I2C_BLOCK /;"	d	file:
PI_I2C_FUNC_SMBUS_READ_WORD_DATA	pigpio.c	/^#define PI_I2C_FUNC_SMBUS_READ_WORD_DATA /;"	d	file:
PI_I2C_FUNC_SMBUS_WRITE_BLOCK_DATA	pigpio.c	/^#define PI_I2C_FUNC_SMBUS_WRITE_BLOCK_DATA /;"	d	file:
PI_I2C_FUNC_SMBUS_WRITE_BYTE	pigpio.c	/^#define PI_I2C_FUNC_SMBUS_WRITE_BYTE /;"	d	file:
PI_I2C_FUNC_SMBUS_WRITE_BYTE_DATA	pigpio.c	/^#define PI_I2C_FUNC_SMBUS_WRITE_BYTE_DATA /;"	d	file:
PI_I2C_FUNC_SMBUS_WRITE_I2C_BLOCK	pigpio.c	/^#define PI_I2C_FUNC_SMBUS_WRITE_I2C_BLOCK /;"	d	file:
PI_I2C_FUNC_SMBUS_WRITE_WORD_DATA	pigpio.c	/^#define PI_I2C_FUNC_SMBUS_WRITE_WORD_DATA /;"	d	file:
PI_I2C_M_IGNORE_NAK	pigpio.h	/^#define PI_I2C_M_IGNORE_NAK /;"	d
PI_I2C_M_NOSTART	pigpio.h	/^#define PI_I2C_M_NOSTART /;"	d
PI_I2C_M_NO_RD_ACK	pigpio.h	/^#define PI_I2C_M_NO_RD_ACK /;"	d
PI_I2C_M_RD	pigpio.h	/^#define PI_I2C_M_RD /;"	d
PI_I2C_M_RECV_LEN	pigpio.h	/^#define PI_I2C_M_RECV_LEN /;"	d
PI_I2C_M_REV_DIR_ADDR	pigpio.h	/^#define PI_I2C_M_REV_DIR_ADDR /;"	d
PI_I2C_M_TEN	pigpio.h	/^#define PI_I2C_M_TEN /;"	d
PI_I2C_M_WR	pigpio.h	/^#define PI_I2C_M_WR /;"	d
PI_I2C_OPENED	pigpio.c	/^#define PI_I2C_OPENED /;"	d	file:
PI_I2C_OPEN_FAILED	pigpio.h	/^#define PI_I2C_OPEN_FAILED /;"	d
PI_I2C_RDRW_IOCTL_MAX_MSGS	pigpio.h	/^#define  PI_I2C_RDRW_IOCTL_MAX_MSGS /;"	d
PI_I2C_RDWR	pigpio.c	/^#define PI_I2C_RDWR /;"	d	file:
PI_I2C_READ	pigpio.h	/^#define PI_I2C_READ /;"	d
PI_I2C_READ_FAILED	pigpio.h	/^#define PI_I2C_READ_FAILED /;"	d
PI_I2C_RESERVED	pigpio.c	/^#define PI_I2C_RESERVED /;"	d	file:
PI_I2C_RETRIES	pigpio.c	/^#define PI_I2C_RETRIES /;"	d	file:
PI_I2C_SLAVE	pigpio.c	/^#define PI_I2C_SLAVE /;"	d	file:
PI_I2C_SLOTS	pigpio.h	/^#define PI_I2C_SLOTS /;"	d
PI_I2C_SMBUS	pigpio.c	/^#define PI_I2C_SMBUS /;"	d	file:
PI_I2C_SMBUS_BLOCK_DATA	pigpio.c	/^#define PI_I2C_SMBUS_BLOCK_DATA /;"	d	file:
PI_I2C_SMBUS_BLOCK_MAX	pigpio.c	/^#define PI_I2C_SMBUS_BLOCK_MAX /;"	d	file:
PI_I2C_SMBUS_BLOCK_PROC_CALL	pigpio.c	/^#define PI_I2C_SMBUS_BLOCK_PROC_CALL /;"	d	file:
PI_I2C_SMBUS_BYTE	pigpio.c	/^#define PI_I2C_SMBUS_BYTE /;"	d	file:
PI_I2C_SMBUS_BYTE_DATA	pigpio.c	/^#define PI_I2C_SMBUS_BYTE_DATA /;"	d	file:
PI_I2C_SMBUS_I2C_BLOCK_BROKEN	pigpio.c	/^#define PI_I2C_SMBUS_I2C_BLOCK_BROKEN /;"	d	file:
PI_I2C_SMBUS_I2C_BLOCK_DATA	pigpio.c	/^#define PI_I2C_SMBUS_I2C_BLOCK_DATA /;"	d	file:
PI_I2C_SMBUS_I2C_BLOCK_MAX	pigpio.c	/^#define PI_I2C_SMBUS_I2C_BLOCK_MAX /;"	d	file:
PI_I2C_SMBUS_PROC_CALL	pigpio.c	/^#define PI_I2C_SMBUS_PROC_CALL /;"	d	file:
PI_I2C_SMBUS_QUICK	pigpio.c	/^#define PI_I2C_SMBUS_QUICK /;"	d	file:
PI_I2C_SMBUS_READ	pigpio.c	/^#define PI_I2C_SMBUS_READ /;"	d	file:
PI_I2C_SMBUS_WORD_DATA	pigpio.c	/^#define PI_I2C_SMBUS_WORD_DATA /;"	d	file:
PI_I2C_SMBUS_WRITE	pigpio.c	/^#define PI_I2C_SMBUS_WRITE /;"	d	file:
PI_I2C_START	pigpio.h	/^#define PI_I2C_START /;"	d
PI_I2C_STOP	pigpio.h	/^#define PI_I2C_STOP /;"	d
PI_I2C_TIMEOUT	pigpio.c	/^#define PI_I2C_TIMEOUT /;"	d	file:
PI_I2C_WRITE	pigpio.h	/^#define PI_I2C_WRITE /;"	d
PI_I2C_WRITE_FAILED	pigpio.h	/^#define PI_I2C_WRITE_FAILED /;"	d
PI_INITIALISED	pigpio.h	/^#define PI_INITIALISED /;"	d
PI_INIT_FAILED	pigpio.h	/^#define PI_INIT_FAILED /;"	d
PI_INPFIFO	pigpio.h	/^#define PI_INPFIFO /;"	d
PI_INPUT	pigpio.h	/^#define PI_INPUT /;"	d
PI_LOCALHOST_SOCK_IF	pigpio.h	/^#define PI_LOCALHOST_SOCK_IF /;"	d
PI_LOCKFILE	pigpio.h	/^#define PI_LOCKFILE /;"	d
PI_LOW	pigpio.h	/^#define PI_LOW /;"	d
PI_MASH_MAX_FREQ	pigpio.c	/^#define PI_MASH_MAX_FREQ /;"	d	file:
PI_MAX_ACTIVE	pigpio.h	/^#define PI_MAX_ACTIVE /;"	d
PI_MAX_BUSY_DELAY	pigpio.h	/^#define PI_MAX_BUSY_DELAY /;"	d
PI_MAX_DMA_CHANNEL	pigpio.h	/^#define PI_MAX_DMA_CHANNEL /;"	d
PI_MAX_DUTYCYCLE_RANGE	pigpio.h	/^#define PI_MAX_DUTYCYCLE_RANGE /;"	d
PI_MAX_EVENT	pigpio.h	/^#define PI_MAX_EVENT /;"	d
PI_MAX_GPIO	pigpio.h	/^#define PI_MAX_GPIO /;"	d
PI_MAX_I2C_ADDR	pigpio.h	/^#define PI_MAX_I2C_ADDR /;"	d
PI_MAX_I2C_DEVICE_COUNT	pigpio.h	/^#define PI_MAX_I2C_DEVICE_COUNT /;"	d
PI_MAX_MICS_DELAY	pigpio.h	/^#define PI_MAX_MICS_DELAY /;"	d
PI_MAX_MILS_DELAY	pigpio.h	/^#define PI_MAX_MILS_DELAY /;"	d
PI_MAX_MS	pigpio.h	/^#define PI_MAX_MS /;"	d
PI_MAX_PAD	pigpio.h	/^#define PI_MAX_PAD /;"	d
PI_MAX_PAD_STRENGTH	pigpio.h	/^#define PI_MAX_PAD_STRENGTH /;"	d
PI_MAX_PATH	pigpio.c	/^#define PI_MAX_PATH /;"	d	file:
PI_MAX_REPORTS_PER_READ	pigpiod_if2.c	/^#define PI_MAX_REPORTS_PER_READ /;"	d	file:
PI_MAX_SCRIPTS	pigpio.h	/^#define PI_MAX_SCRIPTS /;"	d
PI_MAX_SCRIPT_PARAMS	pigpio.h	/^#define PI_MAX_SCRIPT_PARAMS /;"	d
PI_MAX_SCRIPT_TAGS	pigpio.h	/^#define PI_MAX_SCRIPT_TAGS /;"	d
PI_MAX_SCRIPT_VARS	pigpio.h	/^#define PI_MAX_SCRIPT_VARS /;"	d
PI_MAX_SERVO_PULSEWIDTH	pigpio.h	/^#define PI_MAX_SERVO_PULSEWIDTH /;"	d
PI_MAX_SIGNUM	pigpio.h	/^#define PI_MAX_SIGNUM /;"	d
PI_MAX_SOCKET_PORT	pigpio.h	/^#define PI_MAX_SOCKET_PORT /;"	d
PI_MAX_SPI_DEVICE_COUNT	pigpio.h	/^#define PI_MAX_SPI_DEVICE_COUNT /;"	d
PI_MAX_STEADY	pigpio.h	/^#define PI_MAX_STEADY /;"	d
PI_MAX_TIMER	pigpio.h	/^#define PI_MAX_TIMER /;"	d
PI_MAX_USER_GPIO	pigpio.h	/^#define PI_MAX_USER_GPIO /;"	d
PI_MAX_WAVES	pigpio.h	/^#define PI_MAX_WAVES /;"	d
PI_MAX_WAVE_CYCLES	pigpio.h	/^#define PI_MAX_WAVE_CYCLES /;"	d
PI_MAX_WAVE_DATABITS	pigpio.h	/^#define PI_MAX_WAVE_DATABITS /;"	d
PI_MAX_WAVE_DELAY	pigpio.h	/^#define PI_MAX_WAVE_DELAY /;"	d
PI_MAX_WAVE_HALFSTOPBITS	pigpio.h	/^#define PI_MAX_WAVE_HALFSTOPBITS /;"	d
PI_MAX_WDOG_TIMEOUT	pigpio.h	/^#define PI_MAX_WDOG_TIMEOUT /;"	d
PI_MEM_ALLOC_AUTO	pigpio.h	/^#define PI_MEM_ALLOC_AUTO /;"	d
PI_MEM_ALLOC_MAILBOX	pigpio.h	/^#define PI_MEM_ALLOC_MAILBOX /;"	d
PI_MEM_ALLOC_PAGEMAP	pigpio.h	/^#define PI_MEM_ALLOC_PAGEMAP /;"	d
PI_MIN_DMA_CHANNEL	pigpio.h	/^#define PI_MIN_DMA_CHANNEL /;"	d
PI_MIN_DUTYCYCLE_RANGE	pigpio.h	/^#define PI_MIN_DUTYCYCLE_RANGE /;"	d
PI_MIN_GPIO	pigpio.h	/^#define PI_MIN_GPIO /;"	d
PI_MIN_MS	pigpio.h	/^#define PI_MIN_MS /;"	d
PI_MIN_PAD_STRENGTH	pigpio.h	/^#define PI_MIN_PAD_STRENGTH /;"	d
PI_MIN_SERVO_PULSEWIDTH	pigpio.h	/^#define PI_MIN_SERVO_PULSEWIDTH /;"	d
PI_MIN_SIGNUM	pigpio.h	/^#define PI_MIN_SIGNUM /;"	d
PI_MIN_SOCKET_PORT	pigpio.h	/^#define PI_MIN_SOCKET_PORT /;"	d
PI_MIN_TIMER	pigpio.h	/^#define PI_MIN_TIMER /;"	d
PI_MIN_WAVE_DATABITS	pigpio.h	/^#define PI_MIN_WAVE_DATABITS /;"	d
PI_MIN_WAVE_HALFSTOPBITS	pigpio.h	/^#define PI_MIN_WAVE_HALFSTOPBITS /;"	d
PI_MIN_WDOG_TIMEOUT	pigpio.h	/^#define PI_MIN_WDOG_TIMEOUT /;"	d
PI_MSG_TOOBIG	pigpio.h	/^#define PI_MSG_TOOBIG /;"	d
PI_NOTIFY_CLOSED	pigpio.c	/^#define PI_NOTIFY_CLOSED /;"	d	file:
PI_NOTIFY_CLOSING	pigpio.c	/^#define PI_NOTIFY_CLOSING /;"	d	file:
PI_NOTIFY_OPENED	pigpio.c	/^#define PI_NOTIFY_OPENED /;"	d	file:
PI_NOTIFY_PAUSED	pigpio.c	/^#define PI_NOTIFY_PAUSED /;"	d	file:
PI_NOTIFY_RESERVED	pigpio.c	/^#define PI_NOTIFY_RESERVED /;"	d	file:
PI_NOTIFY_RUNNING	pigpio.c	/^#define PI_NOTIFY_RUNNING /;"	d	file:
PI_NOTIFY_SLOTS	pigpio.h	/^#define PI_NOTIFY_SLOTS /;"	d
PI_NOT_HALTED	pigpio.h	/^#define PI_NOT_HALTED /;"	d
PI_NOT_HCLK_GPIO	pigpio.h	/^#define PI_NOT_HCLK_GPIO /;"	d
PI_NOT_HPWM_GPIO	pigpio.h	/^#define PI_NOT_HPWM_GPIO /;"	d
PI_NOT_I2C_GPIO	pigpio.h	/^#define PI_NOT_I2C_GPIO /;"	d
PI_NOT_INITIALISED	pigpio.h	/^#define PI_NOT_INITIALISED /;"	d
PI_NOT_ON_BCM2711	pigpio.h	/^#define PI_NOT_ON_BCM2711 /;"	d
PI_NOT_PERMITTED	pigpio.h	/^#define PI_NOT_PERMITTED /;"	d
PI_NOT_PWM_GPIO	pigpio.h	/^#define PI_NOT_PWM_GPIO /;"	d
PI_NOT_SERIAL_GPIO	pigpio.h	/^#define PI_NOT_SERIAL_GPIO /;"	d
PI_NOT_SERVO_GPIO	pigpio.h	/^#define PI_NOT_SERVO_GPIO /;"	d
PI_NOT_SPI_GPIO	pigpio.h	/^#define PI_NOT_SPI_GPIO /;"	d
PI_NO_ALERT_FUNC	pigpio.h	/^#define PI_NO_ALERT_FUNC /;"	d
PI_NO_AUX_SPI	pigpio.h	/^#define PI_NO_AUX_SPI /;"	d
PI_NO_FILE_ACCESS	pigpio.h	/^#define PI_NO_FILE_ACCESS /;"	d
PI_NO_FILE_MATCH	pigpio.h	/^#define PI_NO_FILE_MATCH /;"	d
PI_NO_HANDLE	pigpio.h	/^#define PI_NO_HANDLE /;"	d
PI_NO_MEMORY	pigpio.h	/^#define PI_NO_MEMORY /;"	d
PI_NO_SCRIPT_ROOM	pigpio.h	/^#define PI_NO_SCRIPT_ROOM /;"	d
PI_NO_TX_WAVE	pigpio.h	/^#define PI_NO_TX_WAVE /;"	d
PI_NO_WAVEFORM_ID	pigpio.h	/^#define PI_NO_WAVEFORM_ID /;"	d
PI_NTFY_FLAGS_ALIVE	pigpio.h	/^#define PI_NTFY_FLAGS_ALIVE /;"	d
PI_NTFY_FLAGS_BIT	pigpio.h	/^#define PI_NTFY_FLAGS_BIT(/;"	d
PI_NTFY_FLAGS_EVENT	pigpio.h	/^#define PI_NTFY_FLAGS_EVENT /;"	d
PI_NTFY_FLAGS_WDOG	pigpio.h	/^#define PI_NTFY_FLAGS_WDOG /;"	d
PI_NUM_AUX_SPI_CHANNEL	pigpio.h	/^#define PI_NUM_AUX_SPI_CHANNEL /;"	d
PI_NUM_STD_SPI_CHANNEL	pigpio.h	/^#define PI_NUM_STD_SPI_CHANNEL /;"	d
PI_OFF	pigpio.h	/^#define PI_OFF /;"	d
PI_ON	pigpio.h	/^#define PI_ON /;"	d
PI_ONLY_ON_BCM2711	pigpio.h	/^#define PI_ONLY_ON_BCM2711 /;"	d
PI_OUTFIFO	pigpio.h	/^#define PI_OUTFIFO /;"	d
PI_OUTPUT	pigpio.h	/^#define PI_OUTPUT /;"	d
PI_PERI_BUS	pigpio.c	/^#define PI_PERI_BUS /;"	d	file:
PI_PIGIF_ERR_0	pigpio.h	/^#define PI_PIGIF_ERR_0 /;"	d
PI_PIGIF_ERR_99	pigpio.h	/^#define PI_PIGIF_ERR_99 /;"	d
PI_PUD_DOWN	pigpio.h	/^#define PI_PUD_DOWN /;"	d
PI_PUD_OFF	pigpio.h	/^#define PI_PUD_OFF /;"	d
PI_PUD_UP	pigpio.h	/^#define PI_PUD_UP /;"	d
PI_RUNNING	pigpio.c	/^#define PI_RUNNING /;"	d	file:
PI_SCRIPT_DELETE	pigpio.c	/^#define PI_SCRIPT_DELETE /;"	d	file:
PI_SCRIPT_DYING	pigpio.c	/^#define PI_SCRIPT_DYING /;"	d	file:
PI_SCRIPT_FAILED	pigpio.h	/^#define PI_SCRIPT_FAILED /;"	d
PI_SCRIPT_FREE	pigpio.c	/^#define PI_SCRIPT_FREE /;"	d	file:
PI_SCRIPT_HALT	pigpio.c	/^#define PI_SCRIPT_HALT /;"	d	file:
PI_SCRIPT_HALTED	pigpio.h	/^#define PI_SCRIPT_HALTED /;"	d
PI_SCRIPT_INITING	pigpio.h	/^#define PI_SCRIPT_INITING /;"	d
PI_SCRIPT_IN_USE	pigpio.c	/^#define PI_SCRIPT_IN_USE /;"	d	file:
PI_SCRIPT_NOT_READY	pigpio.h	/^#define PI_SCRIPT_NOT_READY /;"	d
PI_SCRIPT_RESERVED	pigpio.c	/^#define PI_SCRIPT_RESERVED /;"	d	file:
PI_SCRIPT_RUN	pigpio.c	/^#define PI_SCRIPT_RUN /;"	d	file:
PI_SCRIPT_RUNNING	pigpio.h	/^#define PI_SCRIPT_RUNNING /;"	d
PI_SCRIPT_STACK_SIZE	pigpio.c	/^#define PI_SCRIPT_STACK_SIZE /;"	d	file:
PI_SCRIPT_WAITING	pigpio.h	/^#define PI_SCRIPT_WAITING /;"	d
PI_SERVO_OFF	pigpio.h	/^#define PI_SERVO_OFF /;"	d
PI_SER_CLOSED	pigpio.c	/^#define PI_SER_CLOSED /;"	d	file:
PI_SER_OPENED	pigpio.c	/^#define PI_SER_OPENED /;"	d	file:
PI_SER_OPEN_FAILED	pigpio.h	/^#define PI_SER_OPEN_FAILED /;"	d
PI_SER_READ_FAILED	pigpio.h	/^#define PI_SER_READ_FAILED /;"	d
PI_SER_READ_NO_DATA	pigpio.h	/^#define PI_SER_READ_NO_DATA /;"	d
PI_SER_RESERVED	pigpio.c	/^#define PI_SER_RESERVED /;"	d	file:
PI_SER_SLOTS	pigpio.h	/^#define PI_SER_SLOTS /;"	d
PI_SER_WRITE_FAILED	pigpio.h	/^#define PI_SER_WRITE_FAILED /;"	d
PI_SET	pigpio.h	/^#define PI_SET /;"	d
PI_SOCK_READ_FAILED	pigpio.h	/^#define PI_SOCK_READ_FAILED /;"	d
PI_SOCK_WRIT_FAILED	pigpio.h	/^#define PI_SOCK_WRIT_FAILED /;"	d
PI_SOME_PERMITTED	pigpio.h	/^#define PI_SOME_PERMITTED /;"	d
PI_SPI_CE0	pigpio.c	/^#define PI_SPI_CE0 /;"	d	file:
PI_SPI_CE1	pigpio.c	/^#define PI_SPI_CE1 /;"	d	file:
PI_SPI_CLOSED	pigpio.c	/^#define PI_SPI_CLOSED /;"	d	file:
PI_SPI_FLAGS_3WIRE	pigpio.h	/^#define PI_SPI_FLAGS_3WIRE(/;"	d
PI_SPI_FLAGS_3WREN	pigpio.h	/^#define PI_SPI_FLAGS_3WREN(/;"	d
PI_SPI_FLAGS_AUX_SPI	pigpio.h	/^#define PI_SPI_FLAGS_AUX_SPI(/;"	d
PI_SPI_FLAGS_BITLEN	pigpio.h	/^#define PI_SPI_FLAGS_BITLEN(/;"	d
PI_SPI_FLAGS_CHANNEL	pigpio.c	/^#define PI_SPI_FLAGS_CHANNEL(/;"	d	file:
PI_SPI_FLAGS_CSPOLS	pigpio.h	/^#define PI_SPI_FLAGS_CSPOLS(/;"	d
PI_SPI_FLAGS_GET_3WIRE	pigpio.c	/^#define PI_SPI_FLAGS_GET_3WIRE(/;"	d	file:
PI_SPI_FLAGS_GET_3WREN	pigpio.c	/^#define PI_SPI_FLAGS_GET_3WREN(/;"	d	file:
PI_SPI_FLAGS_GET_AUX_SPI	pigpio.c	/^#define PI_SPI_FLAGS_GET_AUX_SPI(/;"	d	file:
PI_SPI_FLAGS_GET_BITLEN	pigpio.c	/^#define PI_SPI_FLAGS_GET_BITLEN(/;"	d	file:
PI_SPI_FLAGS_GET_CHANNEL	pigpio.c	/^#define PI_SPI_FLAGS_GET_CHANNEL(/;"	d	file:
PI_SPI_FLAGS_GET_CPHA	pigpio.c	/^#define PI_SPI_FLAGS_GET_CPHA(/;"	d	file:
PI_SPI_FLAGS_GET_CPOL	pigpio.c	/^#define PI_SPI_FLAGS_GET_CPOL(/;"	d	file:
PI_SPI_FLAGS_GET_CSPOL	pigpio.c	/^#define PI_SPI_FLAGS_GET_CSPOL(/;"	d	file:
PI_SPI_FLAGS_GET_CSPOLS	pigpio.c	/^#define PI_SPI_FLAGS_GET_CSPOLS(/;"	d	file:
PI_SPI_FLAGS_GET_MODE	pigpio.c	/^#define PI_SPI_FLAGS_GET_MODE(/;"	d	file:
PI_SPI_FLAGS_GET_RESVD	pigpio.c	/^#define PI_SPI_FLAGS_GET_RESVD(/;"	d	file:
PI_SPI_FLAGS_GET_RX_LSB	pigpio.c	/^#define PI_SPI_FLAGS_GET_RX_LSB(/;"	d	file:
PI_SPI_FLAGS_GET_TX_LSB	pigpio.c	/^#define PI_SPI_FLAGS_GET_TX_LSB(/;"	d	file:
PI_SPI_FLAGS_MODE	pigpio.h	/^#define PI_SPI_FLAGS_MODE(/;"	d
PI_SPI_FLAGS_RESVD	pigpio.h	/^#define PI_SPI_FLAGS_RESVD(/;"	d
PI_SPI_FLAGS_RX_LSB	pigpio.h	/^#define PI_SPI_FLAGS_RX_LSB(/;"	d
PI_SPI_FLAGS_TX_LSB	pigpio.h	/^#define PI_SPI_FLAGS_TX_LSB(/;"	d
PI_SPI_MAX_BAUD	pigpio.h	/^#define PI_SPI_MAX_BAUD /;"	d
PI_SPI_MIN_BAUD	pigpio.h	/^#define PI_SPI_MIN_BAUD /;"	d
PI_SPI_MISO	pigpio.c	/^#define PI_SPI_MISO /;"	d	file:
PI_SPI_MOSI	pigpio.c	/^#define PI_SPI_MOSI /;"	d	file:
PI_SPI_OPENED	pigpio.c	/^#define PI_SPI_OPENED /;"	d	file:
PI_SPI_OPEN_FAILED	pigpio.h	/^#define PI_SPI_OPEN_FAILED /;"	d
PI_SPI_RESERVED	pigpio.c	/^#define PI_SPI_RESERVED /;"	d	file:
PI_SPI_SCLK	pigpio.c	/^#define PI_SPI_SCLK /;"	d	file:
PI_SPI_SLOTS	pigpio.h	/^#define PI_SPI_SLOTS /;"	d
PI_SPI_XFER_FAILED	pigpio.h	/^#define PI_SPI_XFER_FAILED /;"	d
PI_STARTING	pigpio.c	/^#define PI_STARTING /;"	d	file:
PI_THREAD_NONE	pigpio.c	/^#define PI_THREAD_NONE /;"	d	file:
PI_THREAD_RUNNING	pigpio.c	/^#define PI_THREAD_RUNNING /;"	d	file:
PI_THREAD_STARTED	pigpio.c	/^#define PI_THREAD_STARTED /;"	d	file:
PI_TIMEOUT	pigpio.h	/^#define PI_TIMEOUT /;"	d
PI_TIMER_FAILED	pigpio.h	/^#define PI_TIMER_FAILED /;"	d
PI_TIME_ABSOLUTE	pigpio.h	/^#define PI_TIME_ABSOLUTE /;"	d
PI_TIME_RELATIVE	pigpio.h	/^#define PI_TIME_RELATIVE /;"	d
PI_TOO_MANY_CBS	pigpio.h	/^#define PI_TOO_MANY_CBS /;"	d
PI_TOO_MANY_CHARS	pigpio.h	/^#define PI_TOO_MANY_CHARS /;"	d
PI_TOO_MANY_OOL	pigpio.h	/^#define PI_TOO_MANY_OOL /;"	d
PI_TOO_MANY_PARAM	pigpio.h	/^#define PI_TOO_MANY_PARAM /;"	d
PI_TOO_MANY_PULSES	pigpio.h	/^#define PI_TOO_MANY_PULSES /;"	d
PI_TOO_MANY_SEGS	pigpio.h	/^#define PI_TOO_MANY_SEGS /;"	d
PI_TOO_MANY_TAGS	pigpio.h	/^#define PI_TOO_MANY_TAGS /;"	d
PI_UNKNOWN_COMMAND	pigpio.h	/^#define PI_UNKNOWN_COMMAND /;"	d
PI_WAVE_BLOCKS	pigpio.h	/^#define PI_WAVE_BLOCKS /;"	d
PI_WAVE_COUNT_PAGES	pigpio.h	/^#define PI_WAVE_COUNT_PAGES /;"	d
PI_WAVE_MAX_BAUD	pigpio.h	/^#define PI_WAVE_MAX_BAUD /;"	d
PI_WAVE_MAX_CHARS	pigpio.h	/^#define PI_WAVE_MAX_CHARS /;"	d
PI_WAVE_MAX_MICROS	pigpio.h	/^#define PI_WAVE_MAX_MICROS /;"	d
PI_WAVE_MAX_PULSES	pigpio.h	/^#define PI_WAVE_MAX_PULSES /;"	d
PI_WAVE_MIN_BAUD	pigpio.h	/^#define PI_WAVE_MIN_BAUD /;"	d
PI_WAVE_MODE_ONE_SHOT	pigpio.h	/^#define PI_WAVE_MODE_ONE_SHOT /;"	d
PI_WAVE_MODE_ONE_SHOT_SYNC	pigpio.h	/^#define PI_WAVE_MODE_ONE_SHOT_SYNC /;"	d
PI_WAVE_MODE_REPEAT	pigpio.h	/^#define PI_WAVE_MODE_REPEAT /;"	d
PI_WAVE_MODE_REPEAT_SYNC	pigpio.h	/^#define PI_WAVE_MODE_REPEAT_SYNC /;"	d
PI_WAVE_NOT_FOUND	pigpio.h	/^#define PI_WAVE_NOT_FOUND /;"	d
PI_WFRX_I2C_SCL	pigpio.c	/^#define PI_WFRX_I2C_SCL /;"	d	file:
PI_WFRX_I2C_SDA	pigpio.c	/^#define PI_WFRX_I2C_SDA /;"	d	file:
PI_WFRX_NONE	pigpio.c	/^#define PI_WFRX_NONE /;"	d	file:
PI_WFRX_SERIAL	pigpio.c	/^#define PI_WFRX_SERIAL /;"	d	file:
PI_WFRX_SPI_CS	pigpio.c	/^#define PI_WFRX_SPI_CS /;"	d	file:
PI_WFRX_SPI_MISO	pigpio.c	/^#define PI_WFRX_SPI_MISO /;"	d	file:
PI_WFRX_SPI_MOSI	pigpio.c	/^#define PI_WFRX_SPI_MOSI /;"	d	file:
PI_WFRX_SPI_SCLK	pigpio.c	/^#define PI_WFRX_SPI_SCLK /;"	d	file:
PI_WF_MICROS	pigpio.c	/^#define PI_WF_MICROS /;"	d	file:
PRINT_ASCII	pigs.c	/^#define PRINT_ASCII /;"	d	file:
PRINT_HEX	pigs.c	/^#define PRINT_HEX /;"	d	file:
PULSE_PER_CYCLE	pigpio.c	/^#define PULSE_PER_CYCLE /;"	d	file:
PWMClockInited	pigpio.c	/^static int PWMClockInited = 0;$/;"	v	typeref:typename:int	file:
PWMDef	pigpio.c	/^static const uint8_t PWMDef[PI_MAX_GPIO + 1] =$/;"	v	typeref:typename:const uint8_t[]	file:
PWM_BASE	pigpio.c	/^#define PWM_BASE /;"	d	file:
PWM_CTL	pigpio.c	/^#define PWM_CTL /;"	d	file:
PWM_CTL_CLRF1	pigpio.c	/^#define PWM_CTL_CLRF1 /;"	d	file:
PWM_CTL_MODE1	pigpio.c	/^#define PWM_CTL_MODE1 /;"	d	file:
PWM_CTL_MSEN1	pigpio.c	/^#define PWM_CTL_MSEN1 /;"	d	file:
PWM_CTL_MSEN2	pigpio.c	/^#define PWM_CTL_MSEN2 /;"	d	file:
PWM_CTL_PWEN1	pigpio.c	/^#define PWM_CTL_PWEN1 /;"	d	file:
PWM_CTL_PWEN2	pigpio.c	/^#define PWM_CTL_PWEN2 /;"	d	file:
PWM_CTL_USEF1	pigpio.c	/^#define PWM_CTL_USEF1 /;"	d	file:
PWM_DAT1	pigpio.c	/^#define PWM_DAT1 /;"	d	file:
PWM_DAT2	pigpio.c	/^#define PWM_DAT2 /;"	d	file:
PWM_DMAC	pigpio.c	/^#define PWM_DMAC /;"	d	file:
PWM_DMAC_DREQ	pigpio.c	/^#define PWM_DMAC_DREQ(/;"	d	file:
PWM_DMAC_ENAB	pigpio.c	/^#define PWM_DMAC_ENAB /;"	d	file:
PWM_DMAC_PANIC	pigpio.c	/^#define PWM_DMAC_PANIC(/;"	d	file:
PWM_FIFO	pigpio.c	/^#define PWM_FIFO /;"	d	file:
PWM_FREQS	pigpio.c	/^#define PWM_FREQS /;"	d	file:
PWM_LEN	pigpio.c	/^#define PWM_LEN /;"	d	file:
PWM_RNG1	pigpio.c	/^#define PWM_RNG1 /;"	d	file:
PWM_RNG2	pigpio.c	/^#define PWM_RNG2 /;"	d	file:
PWM_STA	pigpio.c	/^#define PWM_STA /;"	d	file:
PWM_TIMER	pigpio.c	/^#define PWM_TIMER /;"	d	file:
PYINSTALLARGS	Makefile	/^  PYINSTALLARGS = --root=$(DESTDIR)$/;"	m
PYINSTALLARGS	Makefile	/^  PYINSTALLARGS =$/;"	m
Pi_Hasher	EXAMPLES/C/IR_RECEIVER/ir_hasher.c	/^Pi_Hasher_t *Pi_Hasher(int gpio, Pi_Hasher_CB_t callback, int timeout)$/;"	f	typeref:typename:Pi_Hasher_t *
Pi_Hasher_CB_t	EXAMPLES/C/IR_RECEIVER/ir_hasher.h	/^typedef void (*Pi_Hasher_CB_t)(uint32_t);$/;"	t	typeref:typename:void (*)(uint32_t)
Pi_Hasher_cancel	EXAMPLES/C/IR_RECEIVER/ir_hasher.c	/^void Pi_Hasher_cancel(Pi_Hasher_t *hasher)$/;"	f	typeref:typename:void
Pi_Hasher_t	EXAMPLES/C/IR_RECEIVER/ir_hasher.h	/^typedef struct _Pi_Hasher_s Pi_Hasher_t;$/;"	t	typeref:struct:_Pi_Hasher_s
Pi_Renc	EXAMPLES/C/ROTARY_ENCODER/rotary_encoder.c	/^Pi_Renc_t * Pi_Renc(int gpioA, int gpioB, Pi_Renc_CB_t callback)$/;"	f	typeref:typename:Pi_Renc_t *
Pi_Renc_CB_t	EXAMPLES/C/ROTARY_ENCODER/rotary_encoder.h	/^typedef void (*Pi_Renc_CB_t)(int);$/;"	t	typeref:typename:void (*)(int)
Pi_Renc_cancel	EXAMPLES/C/ROTARY_ENCODER/rotary_encoder.c	/^void Pi_Renc_cancel(Pi_Renc_t *renc)$/;"	f	typeref:typename:void
Pi_Renc_t	EXAMPLES/C/ROTARY_ENCODER/rotary_encoder.h	/^typedef struct _Pi_Renc_s Pi_Renc_t;$/;"	t	typeref:struct:_Pi_Renc_s
Pi_Wieg	EXAMPLES/C/WIEGAND_CODE/wiegand.c	/^Pi_Wieg_t * Pi_Wieg($/;"	f	typeref:typename:Pi_Wieg_t *
Pi_Wieg_CB_t	EXAMPLES/C/WIEGAND_CODE/wiegand.h	/^typedef void (*Pi_Wieg_CB_t)(int, uint32_t);$/;"	t	typeref:typename:void (*)(int,uint32_t)
Pi_Wieg_cancel	EXAMPLES/C/WIEGAND_CODE/wiegand.c	/^void Pi_Wieg_cancel(Pi_Wieg_t *wieg)$/;"	f	typeref:typename:void
Pi_Wieg_t	EXAMPLES/C/WIEGAND_CODE/wiegand.h	/^typedef struct _Pi_Wieg_s Pi_Wieg_t;$/;"	t	typeref:struct:_Pi_Wieg_s
RANLIB	Makefile	/^RANLIB       = $(CROSS_PREFIX)ranlib$/;"	m
RISING_EDGE	pigpio.h	/^#define RISING_EDGE /;"	d
ROTARY_ENCODER_H	EXAMPLES/C/ROTARY_ENCODER/rotary_encoder.h	/^#define ROTARY_ENCODER_H$/;"	d
ROTARY_ENCODER_HPP	EXAMPLES/CPP/ROTARY_ENCODER/rotary_encoder.hpp	/^#define ROTARY_ENCODER_HPP$/;"	d
RS	EXAMPLES/C/I2C_SNIFFER/pig2i2c.c	/^#define RS /;"	d	file:
RS	pig2vcd.c	/^#define RS /;"	d	file:
S	pigpio.c	/^      wfRxSPI_t    S;$/;"	m	union:__anon638cdb1e1808::__anon638cdb1e190a	typeref:typename:wfRxSPI_t	file:
SCL	pigpio.c	/^   int SCL;$/;"	m	struct:__anon638cdb1e1608	typeref:typename:int	file:
SCLK	pigpio.c	/^   int SCLK;$/;"	m	struct:__anon638cdb1e1708	typeref:typename:int	file:
SCLKMode	pigpio.c	/^   int SCLKMode;$/;"	m	struct:__anon638cdb1e1708	typeref:typename:int	file:
SCLMode	pigpio.c	/^   int SCLMode;$/;"	m	struct:__anon638cdb1e1608	typeref:typename:int	file:
SCL_FALLING	EXAMPLES/C/I2C_SNIFFER/pig2i2c.c	/^#define SCL_FALLING /;"	d	file:
SCL_RISING	EXAMPLES/C/I2C_SNIFFER/pig2i2c.c	/^#define SCL_RISING /;"	d	file:
SCL_STEADY	EXAMPLES/C/I2C_SNIFFER/pig2i2c.c	/^#define SCL_STEADY /;"	d	file:
SDA	pigpio.c	/^   int SDA;$/;"	m	struct:__anon638cdb1e1608	typeref:typename:int	file:
SDAMode	pigpio.c	/^   int SDAMode;$/;"	m	struct:__anon638cdb1e1608	typeref:typename:int	file:
SDA_FALLING	EXAMPLES/C/I2C_SNIFFER/pig2i2c.c	/^#define SDA_FALLING /;"	d	file:
SDA_RISING	EXAMPLES/C/I2C_SNIFFER/pig2i2c.c	/^#define SDA_RISING /;"	d	file:
SDA_STEADY	EXAMPLES/C/I2C_SNIFFER/pig2i2c.c	/^#define SDA_STEADY /;"	d	file:
SER_CHECK_INITED	pigpio.c	/^#define SER_CHECK_INITED /;"	d	file:
SER_CHECK_INITED	pigpio.c	/^#define SER_CHECK_INITED$/;"	d	file:
SHLIB	Makefile	/^SHLIB        = $(CC) -shared$/;"	m
SIZE	Makefile	/^SIZE         = $(CROSS_PREFIX)size$/;"	m
SOCKET_OPEN_FAILED	pigs.c	/^#define SOCKET_OPEN_FAILED /;"	d	file:
SOFT_ERROR	pigpio.c	/^#define SOFT_ERROR(/;"	d	file:
SOVERSION	Makefile	/^SOVERSION    = 1$/;"	m
SPI_BASE	pigpio.c	/^#define SPI_BASE /;"	d	file:
SPI_CLK	pigpio.c	/^#define SPI_CLK /;"	d	file:
SPI_CS	pigpio.c	/^#define SPI_CS /;"	d	file:
SPI_CS0	pigpio.c	/^#define SPI_CS0 /;"	d	file:
SPI_CS1	pigpio.c	/^#define SPI_CS1 /;"	d	file:
SPI_CS2	pigpio.c	/^#define SPI_CS2 /;"	d	file:
SPI_CS_ADCS	pigpio.c	/^#define SPI_CS_ADCS /;"	d	file:
SPI_CS_CLEAR	pigpio.c	/^#define SPI_CS_CLEAR(/;"	d	file:
SPI_CS_CS	pigpio.c	/^#define SPI_CS_CS(/;"	d	file:
SPI_CS_CSPOL	pigpio.c	/^#define SPI_CS_CSPOL(/;"	d	file:
SPI_CS_CSPOLS	pigpio.c	/^#define SPI_CS_CSPOLS(/;"	d	file:
SPI_CS_DMAEN	pigpio.c	/^#define SPI_CS_DMAEN /;"	d	file:
SPI_CS_DMA_LEN	pigpio.c	/^#define SPI_CS_DMA_LEN /;"	d	file:
SPI_CS_DONE	pigpio.c	/^#define SPI_CS_DONE /;"	d	file:
SPI_CS_INTD	pigpio.c	/^#define SPI_CS_INTD /;"	d	file:
SPI_CS_INTR	pigpio.c	/^#define SPI_CS_INTR /;"	d	file:
SPI_CS_LEN	pigpio.c	/^#define SPI_CS_LEN /;"	d	file:
SPI_CS_LEN_LONG	pigpio.c	/^#define SPI_CS_LEN_LONG /;"	d	file:
SPI_CS_MODE	pigpio.c	/^#define SPI_CS_MODE(/;"	d	file:
SPI_CS_REN	pigpio.c	/^#define SPI_CS_REN /;"	d	file:
SPI_CS_RXD	pigpio.c	/^#define SPI_CS_RXD /;"	d	file:
SPI_CS_RXF	pigpio.c	/^#define SPI_CS_RXF /;"	d	file:
SPI_CS_RXR	pigpio.c	/^#define SPI_CS_RXR /;"	d	file:
SPI_CS_TA	pigpio.c	/^#define SPI_CS_TA /;"	d	file:
SPI_CS_TXD	pigpio.c	/^#define SPI_CS_TXD /;"	d	file:
SPI_DC	pigpio.c	/^#define SPI_DC /;"	d	file:
SPI_DC_RDREQ	pigpio.c	/^#define SPI_DC_RDREQ(/;"	d	file:
SPI_DC_RPANIC	pigpio.c	/^#define SPI_DC_RPANIC(/;"	d	file:
SPI_DC_TDREQ	pigpio.c	/^#define SPI_DC_TDREQ(/;"	d	file:
SPI_DC_TPANIC	pigpio.c	/^#define SPI_DC_TPANIC(/;"	d	file:
SPI_DLEN	pigpio.c	/^#define SPI_DLEN /;"	d	file:
SPI_FIFO	pigpio.c	/^#define SPI_FIFO /;"	d	file:
SPI_LEN	pigpio.c	/^#define SPI_LEN /;"	d	file:
SPI_LTOH	pigpio.c	/^#define SPI_LTOH /;"	d	file:
SPI_MODE0	pigpio.c	/^#define SPI_MODE0 /;"	d	file:
SPI_MODE1	pigpio.c	/^#define SPI_MODE1 /;"	d	file:
SPI_MODE2	pigpio.c	/^#define SPI_MODE2 /;"	d	file:
SPI_MODE3	pigpio.c	/^#define SPI_MODE3 /;"	d	file:
SPI_delay	pigpio.c	/^static void SPI_delay(wfRx_t *w)$/;"	f	typeref:typename:void	file:
SRX_BUF_SIZE	pigpio.c	/^#define SRX_BUF_SIZE /;"	d	file:
STACK_SIZE	pigpio.c	/^#define STACK_SIZE /;"	d	file:
STACK_SIZE	pigpiod_if.c	/^#define STACK_SIZE /;"	d	file:
STACK_SIZE	pigpiod_if2.c	/^#define STACK_SIZE /;"	d	file:
STRIP	Makefile	/^STRIP        = $(CROSS_PREFIX)strip$/;"	m
STRIPLIB	Makefile	/^STRIPLIB     = $(STRIP) --strip-unneeded$/;"	m
SUPERCYCLE	pigpio.c	/^#define SUPERCYCLE /;"	d	file:
SUPERLEVEL	pigpio.c	/^#define SUPERLEVEL /;"	d	file:
SYST_BASE	pigpio.c	/^#define SYST_BASE /;"	d	file:
SYST_CHI	pigpio.c	/^#define SYST_CHI /;"	d	file:
SYST_CLO	pigpio.c	/^#define SYST_CLO /;"	d	file:
SYST_CS	pigpio.c	/^#define SYST_CS /;"	d	file:
SYST_LEN	pigpio.c	/^#define SYST_LEN /;"	d	file:
TCK_PER_IPAGE	pigpio.c	/^#define TCK_PER_IPAGE /;"	d	file:
THOUSAND	pigpio.c	/^#define THOUSAND /;"	d	file:
TICKSLOTS	pigpio.c	/^#define TICKSLOTS /;"	d	file:
TIMED_DMA	pigpio.c	/^#define TIMED_DMA(/;"	d	file:
TIMER_ADD	pigpio.c	/^#define TIMER_ADD(/;"	d	file:
TIMER_SUB	pigpio.c	/^#define TIMER_SUB(/;"	d	file:
TWO_BEAT_DMA	pigpio.c	/^#define TWO_BEAT_DMA /;"	d	file:
USERDATA	x_pigpio.c	/^#define USERDATA /;"	d	file:
WAVE_FLAG_READ	pigpio.h	/^#define WAVE_FLAG_READ /;"	d
WAVE_FLAG_TICK	pigpio.h	/^#define WAVE_FLAG_TICK /;"	d
WCB_CHAIN_CBS	pigpio.c	/^#define WCB_CHAIN_CBS /;"	d	file:
WCB_CHAIN_OOL	pigpio.c	/^#define WCB_CHAIN_OOL /;"	d	file:
WCB_CNT_CBS	pigpio.c	/^#define WCB_CNT_CBS /;"	d	file:
WCB_CNT_OOL	pigpio.c	/^#define WCB_CNT_OOL /;"	d	file:
WCB_CNT_PER_PAGE	pigpio.c	/^#define WCB_CNT_PER_PAGE /;"	d	file:
WCB_COUNTERS	pigpio.c	/^#define WCB_COUNTERS /;"	d	file:
WCB_COUNTER_CBS	pigpio.c	/^#define WCB_COUNTER_CBS /;"	d	file:
WCB_COUNTER_OOL	pigpio.c	/^#define WCB_COUNTER_OOL /;"	d	file:
WIEGAND_H	EXAMPLES/C/WIEGAND_CODE/wiegand.h	/^#define WIEGAND_H$/;"	d
WIEGAND_HPP	EXAMPLES/CPP/WIEGAND_CODE/wiegand.hpp	/^#define WIEGAND_HPP$/;"	d
Wiegand	EXAMPLES/CPP/WIEGAND_CODE/wiegand.cpp	/^Wiegand::Wiegand(int gpio_0, int gpio_1, WiegandCB_t callback, int timeout)$/;"	f	class:Wiegand
Wiegand	EXAMPLES/CPP/WIEGAND_CODE/wiegand.hpp	/^class Wiegand$/;"	c
WiegandCB_t	EXAMPLES/CPP/WIEGAND_CODE/wiegand.hpp	/^typedef void (*WiegandCB_t)(int, uint32_t);$/;"	t	typeref:typename:void (*)(int,uint32_t)
_GNU_SOURCE	pigpio.c	/^#define _GNU_SOURCE$/;"	d	file:
_Pi_Hasher_s	EXAMPLES/C/IR_RECEIVER/ir_hasher.c	/^struct _Pi_Hasher_s$/;"	s	file:
_Pi_Renc_s	EXAMPLES/C/ROTARY_ENCODER/rotary_encoder.c	/^struct _Pi_Renc_s$/;"	s	file:
_Pi_Wieg_s	EXAMPLES/C/WIEGAND_CODE/wiegand.c	/^struct _Pi_Wieg_s$/;"	s	file:
__anon3aaf00950108	command.c	/^{$/;"	s	file:
__anon3aaf009a0108	command.h	/^{$/;"	s
__anon3aaf009a020a	command.h	/^   {$/;"	u	struct:__anon3aaf009a0108
__anon3aaf009a0308	command.h	/^{$/;"	s
__anon3aaf009a0408	command.h	/^{$/;"	s
__anon3aaf009a0508	command.h	/^{$/;"	s
__anon3aaf009a0608	command.h	/^{$/;"	s
__anon3aaf009a0708	command.h	/^{$/;"	s
__anon448ab6150103	pigpiod_if.h	/^{$/;"	g
__anon638cdb1e0108	pigpio.c	/^{$/;"	s	file:
__anon638cdb1e0208	pigpio.c	/^{$/;"	s	file:
__anon638cdb1e0308	pigpio.c	/^{$/;"	s	file:
__anon638cdb1e0408	pigpio.c	/^{$/;"	s	file:
__anon638cdb1e0508	pigpio.c	/^{$/;"	s	file:
__anon638cdb1e0608	pigpio.c	/^{$/;"	s	file:
__anon638cdb1e0708	pigpio.c	/^{$/;"	s	file:
__anon638cdb1e0808	pigpio.c	/^{$/;"	s	file:
__anon638cdb1e0908	pigpio.c	/^{$/;"	s	file:
__anon638cdb1e0a08	pigpio.c	/^{$/;"	s	file:
__anon638cdb1e0b08	pigpio.c	/^{$/;"	s	file:
__anon638cdb1e0c08	pigpio.c	/^{$/;"	s	file:
__anon638cdb1e0d08	pigpio.c	/^{$/;"	s	file:
__anon638cdb1e0e08	pigpio.c	/^{$/;"	s	file:
__anon638cdb1e0f08	pigpio.c	/^{$/;"	s	file:
__anon638cdb1e1008	pigpio.c	/^{$/;"	s	file:
__anon638cdb1e1108	pigpio.c	/^{$/;"	s	file:
__anon638cdb1e1208	pigpio.c	/^{$/;"	s	file:
__anon638cdb1e1308	pigpio.c	/^{$/;"	s	file:
__anon638cdb1e1408	pigpio.c	/^{$/;"	s	file:
__anon638cdb1e1508	pigpio.c	/^{$/;"	s	file:
__anon638cdb1e1608	pigpio.c	/^{$/;"	s	file:
__anon638cdb1e1708	pigpio.c	/^{$/;"	s	file:
__anon638cdb1e1808	pigpio.c	/^{$/;"	s	file:
__anon638cdb1e190a	pigpio.c	/^   {$/;"	u	struct:__anon638cdb1e1808	file:
__anon638cdb1e1a08	pigpio.c	/^{$/;"	s	file:
__anon638cdb1e1b08	pigpio.c	/^{$/;"	s	file:
__anon638cdb1e1c08	pigpio.c	/^{$/;"	s	file:
__anon638cdb230108	pigpio.h	/^{$/;"	s
__anon638cdb230208	pigpio.h	/^{$/;"	s
__anon638cdb230308	pigpio.h	/^{$/;"	s
__anon638cdb230408	pigpio.h	/^{$/;"	s
__anon638cdb230508	pigpio.h	/^{$/;"	s
__anon638cdb230608	pigpio.h	/^{$/;"	s
__anon638cdb230708	pigpio.h	/^{$/;"	s
__anon638cdb230808	pigpio.h	/^{$/;"	s
__anon638cdb230908	pigpio.h	/^typedef struct { \/* linux\/arch\/arm\/mach-bcm2708\/include\/mach\/dma.h *\/$/;"	s
__anon638cdb230a08	pigpio.h	/^{$/;"	s
__anon638cdb230b08	pigpio.h	/^{$/;"	s
__anond5e182a70103	pigpiod_if2.h	/^{$/;"	g
_callback	EXAMPLES/CPP/IR_RECEIVER/ir_hasher.cpp	/^void Hasher::_callback(int gpio, int level, uint32_t tick)$/;"	f	class:Hasher	typeref:typename:void
_callbackExt	EXAMPLES/CPP/IR_RECEIVER/ir_hasher.cpp	/^void Hasher::_callbackExt(int gpio, int level, uint32_t tick, void *user)$/;"	f	class:Hasher	typeref:typename:void
_cb	EXAMPLES/C/IR_RECEIVER/ir_hasher.c	/^static void _cb(int gpio, int level, uint32_t tick, void *user)$/;"	f	typeref:typename:void	file:
_cb	EXAMPLES/C/ROTARY_ENCODER/rotary_encoder.c	/^static void _cb(int gpio, int level, uint32_t tick, void *user)$/;"	f	typeref:typename:void	file:
_cb	EXAMPLES/C/WIEGAND_CODE/wiegand.c	/^void _cb(int gpio, int level, uint32_t tick, void *user)$/;"	f	typeref:typename:void
_cb	EXAMPLES/CPP/WIEGAND_CODE/wiegand.cpp	/^void Wiegand::_cb(int gpio, int level, uint32_t tick)$/;"	f	class:Wiegand	typeref:typename:void
_cbEx	EXAMPLES/CPP/WIEGAND_CODE/wiegand.cpp	/^void Wiegand::_cbEx(int gpio, int level, uint32_t tick, void *user)$/;"	f	class:Wiegand	typeref:typename:void
_ewfe	pigpiod_if2.c	/^static void _ewfe($/;"	f	typeref:typename:void	file:
_hash	EXAMPLES/C/IR_RECEIVER/ir_hasher.c	/^static uint32_t _hash(uint32_t hv, int old_val, int new_val)$/;"	f	typeref:typename:uint32_t	file:
_hash	EXAMPLES/CPP/IR_RECEIVER/ir_hasher.cpp	/^void Hasher::_hash(int old_val, int new_val)$/;"	f	class:Hasher	typeref:typename:void
_pml	pigpiod_if2.c	/^static void _pml(int pi)$/;"	f	typeref:typename:void	file:
_pmu	pigpiod_if2.c	/^static void _pmu(int pi)$/;"	f	typeref:typename:void	file:
_pulse	EXAMPLES/CPP/ROTARY_ENCODER/rotary_encoder.cpp	/^void re_decoder::_pulse(int gpio, int level, uint32_t tick)$/;"	f	class:re_decoder	typeref:typename:void
_pulseEx	EXAMPLES/CPP/ROTARY_ENCODER/rotary_encoder.cpp	/^void re_decoder::_pulseEx(int gpio, int level, uint32_t tick, void *user)$/;"	f	class:re_decoder	typeref:typename:void
_spiRXBits	pigpio.c	/^static void _spiRXBits($/;"	f	typeref:typename:void	file:
_spiTXBits	pigpio.c	/^static uint32_t _spiTXBits(char *buf, int pos, int bitlen, int msbf)$/;"	f	typeref:typename:uint32_t	file:
_wfe	pigpiod_if.c	/^static void _wfe(unsigned user_gpio, unsigned level, uint32_t tick, void *user)$/;"	f	typeref:typename:void	file:
_wfe	pigpiod_if2.c	/^static void _wfe($/;"	f	typeref:typename:void	file:
addr	pigpio.c	/^   uint32_t addr;$/;"	m	struct:__anon638cdb1e0f08	typeref:typename:uint32_t	file:
addr	pigpio.h	/^   uint16_t addr;  \/* slave address       *\/$/;"	m	struct:__anon638cdb230a08	typeref:typename:uint16_t
addrAllowed	pigpio.c	/^static int addrAllowed(struct sockaddr *saddr)$/;"	f	typeref:typename:int	file:
alert	EXAMPLES/C/HALL_EFFECT_SENSOR/hall.c	/^void alert(int gpio, int level, uint32_t tick)$/;"	f	typeref:typename:void
alertBits	pigpio.c	/^static volatile uint32_t alertBits   = 0;$/;"	v	typeref:typename:volatile uint32_t	file:
alertEmit	pigpio.c	/^static void alertEmit($/;"	f	typeref:typename:void	file:
alertFreq	pigpio.c	/^   unsigned alertFreq;$/;"	m	struct:__anon638cdb1e1308	typeref:typename:unsigned	file:
alertGlitchFilter	pigpio.c	/^static void alertGlitchFilter(gpioSample_t *sample, int numSamples)$/;"	f	typeref:typename:void	file:
alertNoiseFilter	pigpio.c	/^static void alertNoiseFilter(gpioSample_t *sample, int numSamples)$/;"	f	typeref:typename:void	file:
alertTicks	pigpio.c	/^   uint32_t alertTicks;$/;"	m	struct:__anon638cdb1e1208	typeref:typename:uint32_t	file:
alertWdogCheck	pigpio.c	/^static void alertWdogCheck(gpioSample_t *sample, int numSamples)$/;"	f	typeref:typename:void	file:
alert_delays	pigpio.c	/^unsigned alert_delays[]=$/;"	v	typeref:typename:unsigned[]
all	Makefile	/^all:	$(ALL)$/;"	t
auxReg	pigpio.c	/^static volatile uint32_t * auxReg  = MAP_FAILED;$/;"	v	typeref:typename:volatile uint32_t *	file:
baud	pigpio.c	/^   uint32_t baud;$/;"	m	struct:__anon638cdb1e1808	typeref:typename:uint32_t	file:
bbI2CClose	pigpio.c	/^int bbI2CClose(unsigned SDA)$/;"	f	typeref:typename:int
bbI2COpen	pigpio.c	/^int bbI2COpen(unsigned SDA, unsigned SCL, unsigned baud)$/;"	f	typeref:typename:int
bbI2CZip	pigpio.c	/^int bbI2CZip($/;"	f	typeref:typename:int
bbSPIClose	pigpio.c	/^int bbSPIClose(unsigned CS)$/;"	f	typeref:typename:int
bbSPIOpen	pigpio.c	/^int bbSPIOpen($/;"	f	typeref:typename:int
bbSPIStart	pigpio.c	/^static void bbSPIStart(wfRx_t *w)$/;"	f	typeref:typename:void	file:
bbSPIStop	pigpio.c	/^static void bbSPIStop(wfRx_t *w)$/;"	f	typeref:typename:void	file:
bbSPIXfer	pigpio.c	/^int bbSPIXfer($/;"	f	typeref:typename:int
bbSPIXferByte	pigpio.c	/^static uint8_t bbSPIXferByte(wfRx_t *w, char txByte)$/;"	f	typeref:typename:uint8_t	file:
bb_i2c_close	pigpiod_if.c	/^int bb_i2c_close(unsigned SDA)$/;"	f	typeref:typename:int
bb_i2c_close	pigpiod_if2.c	/^int bb_i2c_close(int pi, unsigned SDA)$/;"	f	typeref:typename:int
bb_i2c_open	pigpiod_if.c	/^int bb_i2c_open(unsigned SDA, unsigned SCL, unsigned baud)$/;"	f	typeref:typename:int
bb_i2c_open	pigpiod_if2.c	/^int bb_i2c_open(int pi, unsigned SDA, unsigned SCL, unsigned baud)$/;"	f	typeref:typename:int
bb_i2c_zip	pigpiod_if.c	/^int bb_i2c_zip($/;"	f	typeref:typename:int
bb_i2c_zip	pigpiod_if2.c	/^int bb_i2c_zip($/;"	f	typeref:typename:int
bb_serial_invert	pigpiod_if.c	/^int bb_serial_invert(unsigned user_gpio, unsigned invert)$/;"	f	typeref:typename:int
bb_serial_invert	pigpiod_if2.c	/^int bb_serial_invert(int pi, unsigned user_gpio, unsigned invert)$/;"	f	typeref:typename:int
bb_serial_read	pigpiod_if.c	/^int bb_serial_read(unsigned user_gpio, void *buf, size_t bufSize)$/;"	f	typeref:typename:int
bb_serial_read	pigpiod_if2.c	/^int bb_serial_read(int pi, unsigned user_gpio, void *buf, size_t bufSize)$/;"	f	typeref:typename:int
bb_serial_read_close	pigpiod_if.c	/^int bb_serial_read_close(unsigned user_gpio)$/;"	f	typeref:typename:int
bb_serial_read_close	pigpiod_if2.c	/^int bb_serial_read_close(int pi, unsigned user_gpio)$/;"	f	typeref:typename:int
bb_serial_read_open	pigpiod_if.c	/^int bb_serial_read_open(unsigned user_gpio, unsigned baud, uint32_t bbBits)$/;"	f	typeref:typename:int
bb_serial_read_open	pigpiod_if2.c	/^int bb_serial_read_open(int pi, unsigned user_gpio, unsigned baud, uint32_t bbBits)$/;"	f	typeref:typename:int
bb_spi_close	pigpiod_if2.c	/^int bb_spi_close(int pi, unsigned CS)$/;"	f	typeref:typename:int
bb_spi_open	pigpiod_if2.c	/^int bb_spi_open($/;"	f	typeref:typename:int
bb_spi_xfer	pigpiod_if2.c	/^int bb_spi_xfer($/;"	f	typeref:typename:int
bindir	Makefile	/^bindir = $(exec_prefix)\/bin$/;"	m
bit	pigpio.c	/^   int      bit;$/;"	m	struct:__anon638cdb1e1508	typeref:typename:int	file:
bits	EXAMPLES/C/WIEGAND_CODE/wiegand.c	/^   int bits;$/;"	m	struct:_Pi_Wieg_s	typeref:typename:int	file:
bits	EXAMPLES/CPP/WIEGAND_CODE/wiegand.hpp	/^   int mygpio_0, mygpio_1, mytimeout, in_code, bits;$/;"	m	class:Wiegand	typeref:typename:int
bits	pigpio.c	/^   uint32_t bits;$/;"	m	struct:__anon638cdb1e0908	typeref:typename:uint32_t	file:
bits	pigpio.c	/^   uint32_t bits;$/;"	m	struct:__anon638cdb1e0d08	typeref:typename:uint32_t	file:
block	pigpio.c	/^   uint8_t  block[PI_I2C_SMBUS_BLOCK_MAX + 2];$/;"	m	union:my_smbus_data	typeref:typename:uint8_t[]	file:
botCB	pigpio.h	/^   uint16_t botCB;  \/* first CB used by wave  *\/$/;"	m	struct:__anon638cdb230708	typeref:typename:uint16_t
botOOL	pigpio.h	/^   uint16_t botOOL; \/* first bottom OOL used by wave  *\/$/;"	m	struct:__anon638cdb230708	typeref:typename:uint16_t
bscFR	pigpio.c	/^static uint32_t bscFR;$/;"	v	typeref:typename:uint32_t	file:
bscInit	pigpio.c	/^void bscInit(int mode)$/;"	f	typeref:typename:void
bscTerm	pigpio.c	/^void bscTerm(int mode)$/;"	f	typeref:typename:void
bscXfer	pigpio.c	/^int bscXfer(bsc_xfer_t *xfer)$/;"	f	typeref:typename:int
bsc_i2c	pigpiod_if2.c	/^int bsc_i2c(int pi, int i2c_addr, bsc_xfer_t *bscxfer)$/;"	f	typeref:typename:int
bsc_xfer	pigpiod_if2.c	/^int bsc_xfer(int pi, bsc_xfer_t *bscxfer)$/;"	f	typeref:typename:int
bsc_xfer_t	pigpio.h	/^} bsc_xfer_t;$/;"	t	typeref:struct:__anon638cdb230b08
bscsReg	pigpio.c	/^static volatile uint32_t * bscsReg = MAP_FAILED;$/;"	v	typeref:typename:volatile uint32_t *	file:
buf	pigpio.c	/^   char    *buf;$/;"	m	struct:__anon638cdb1e1508	typeref:typename:char *	file:
buf	pigpio.h	/^   uint8_t  *buf;  \/* pointer to msg data *\/$/;"	m	struct:__anon638cdb230a08	typeref:typename:uint8_t *
bufSize	pigpio.c	/^   uint32_t bufSize;$/;"	m	struct:__anon638cdb1e1508	typeref:typename:uint32_t	file:
bufferBlocks	pigpio.c	/^static unsigned bufferBlocks; \/* number of blocks in buffer *\/$/;"	v	typeref:typename:unsigned	file:
bufferCycles	pigpio.c	/^static unsigned bufferCycles; \/* number of cycles *\/$/;"	v	typeref:typename:unsigned	file:
bufferMilliseconds	pigpio.c	/^   unsigned bufferMilliseconds;$/;"	m	struct:__anon638cdb1e1308	typeref:typename:unsigned	file:
bufferSizeMilliseconds	pigpiod.c	/^static unsigned bufferSizeMilliseconds = PI_DEFAULT_BUFFER_MILLIS;$/;"	v	typeref:typename:unsigned	file:
bus_addr	pigpio.c	/^   uintptr_t bus_addr;      \/* mbLockMemory() *\/$/;"	m	struct:__anon638cdb1e1c08	typeref:typename:uintptr_t	file:
byte	pigpio.c	/^   uint8_t  byte;$/;"	m	union:my_smbus_data	typeref:typename:uint8_t	file:
bytes	pigpio.c	/^   int      bytes; \/* 1, 2, 4 *\/$/;"	m	struct:__anon638cdb1e1508	typeref:typename:int	file:
callback	EXAMPLES/C/IR_RECEIVER/ir_hasher.c	/^   Pi_Hasher_CB_t callback;$/;"	m	struct:_Pi_Hasher_s	typeref:typename:Pi_Hasher_CB_t	file:
callback	EXAMPLES/C/IR_RECEIVER/test_ir_hasher.c	/^void callback(uint32_t hash)$/;"	f	typeref:typename:void
callback	EXAMPLES/C/POT_CAP_RECHARGE/pot_cap_charge.c	/^void callback(int gpio, int level, uint32_t tick)$/;"	f	typeref:typename:void
callback	EXAMPLES/C/ROTARY_ENCODER/rotary_encoder.c	/^   Pi_Renc_CB_t callback;$/;"	m	struct:_Pi_Renc_s	typeref:typename:Pi_Renc_CB_t	file:
callback	EXAMPLES/C/ROTARY_ENCODER/test_rotary_encoder.c	/^void callback(int way)$/;"	f	typeref:typename:void
callback	EXAMPLES/C/WIEGAND_CODE/test_wiegand.c	/^void callback(int bits, uint32_t value)$/;"	f	typeref:typename:void
callback	EXAMPLES/CPP/IR_RECEIVER/test_ir_hasher.cpp	/^void callback(uint32_t hash)$/;"	f	typeref:typename:void
callback	EXAMPLES/CPP/ROTARY_ENCODER/test_rotary_encoder.cpp	/^void callback(int way)$/;"	f	typeref:typename:void
callback	EXAMPLES/CPP/WIEGAND_CODE/test_wiegand.cpp	/^void callback(int bits, uint32_t value)$/;"	f	typeref:typename:void
callback	pigpiod_if.c	/^int callback(unsigned user_gpio, unsigned edge, CBFunc_t f)$/;"	f	typeref:typename:int
callback	pigpiod_if2.c	/^int callback(int pi, unsigned user_gpio, unsigned edge, CBFunc_t f)$/;"	f	typeref:typename:int
callback_cancel	pigpiod_if.c	/^int callback_cancel(unsigned id)$/;"	f	typeref:typename:int
callback_cancel	pigpiod_if2.c	/^int callback_cancel(unsigned id)$/;"	f	typeref:typename:int
callback_ex	pigpiod_if.c	/^int callback_ex(unsigned user_gpio, unsigned edge, CBFuncEx_t f, void *user)$/;"	f	typeref:typename:int
callback_ex	pigpiod_if2.c	/^int callback_ex($/;"	f	typeref:typename:int
callback_s	pigpiod_if.c	/^struct callback_s$/;"	s	file:
callback_s	pigpiod_if2.c	/^struct callback_s$/;"	s	file:
callback_t	pigpiod_if.h	/^typedef struct callback_s callback_t;$/;"	t	typeref:struct:callback_s
callback_t	pigpiod_if2.h	/^typedef struct callback_s callback_t;$/;"	t	typeref:struct:callback_s
callbk_t	pigpio.c	/^typedef void (*callbk_t) ();$/;"	t	typeref:typename:void (*)()	file:
cancel	EXAMPLES/CPP/WIEGAND_CODE/wiegand.cpp	/^void Wiegand::cancel(void)$/;"	f	class:Wiegand	typeref:typename:void
cb	pigpio.c	/^   rawCbs_t cb           [128];$/;"	m	struct:__anon638cdb1e0108	typeref:typename:rawCbs_t[128]	file:
cb	pigpio.c	/^   rawCbs_t cb           [CBS_PER_IPAGE];$/;"	m	struct:__anon638cdb1e0208	typeref:typename:rawCbs_t[]	file:
cb	pigpio.c	/^   rawCbs_t cb     [CBS_PER_OPAGE];$/;"	m	struct:__anon638cdb1e0308	typeref:typename:rawCbs_t[]	file:
cbCalls	pigpio.c	/^   uint32_t cbCalls;$/;"	m	struct:__anon638cdb1e1208	typeref:typename:uint32_t	file:
cbTicks	pigpio.c	/^   uint32_t cbTicks;$/;"	m	struct:__anon638cdb1e1208	typeref:typename:uint32_t	file:
cbs	pigpio.c	/^   uint32_t cbs;$/;"	m	struct:__anon638cdb1e1408	typeref:typename:uint32_t	file:
cfgInternals	pigpiod.c	/^static uint32_t cfgInternals           = PI_DEFAULT_CFG_INTERNALS;$/;"	v	typeref:typename:uint32_t	file:
chainGetCB	pigpio.c	/^static int chainGetCB(int n)$/;"	f	typeref:typename:int	file:
chainGetCntCB	pigpio.c	/^static int chainGetCntCB(int counter)$/;"	f	typeref:typename:int	file:
chainGetCntVal	pigpio.c	/^static uint32_t chainGetCntVal(int counter, int slot)$/;"	f	typeref:typename:uint32_t	file:
chainGetCntValPadr	pigpio.c	/^static uint32_t chainGetCntValPadr(int counter, int slot)$/;"	f	typeref:typename:uint32_t	file:
chainGetValPadr	pigpio.c	/^static uint32_t chainGetValPadr(int n)$/;"	f	typeref:typename:uint32_t	file:
chainMakeCounter	pigpio.c	/^static void chainMakeCounter($/;"	f	typeref:typename:void	file:
chainSetCntVal	pigpio.c	/^static void chainSetCntVal(int counter, int slot, uint32_t value)$/;"	f	typeref:typename:void	file:
chainSetVal	pigpio.c	/^static void chainSetVal(int n, uint32_t val)$/;"	f	typeref:typename:void	file:
changedBits	pigpio.c	/^   uint32_t changedBits;$/;"	m	struct:__anon638cdb1e0b08	typeref:typename:uint32_t	file:
checkAddr	pigpiod.c	/^static uint32_t checkAddr(char *addrStr)$/;"	f	typeref:typename:uint32_t	file:
chooseBestClock	pigpio.c	/^static int chooseBestClock$/;"	f	typeref:typename:int	file:
clean	Makefile	/^clean:$/;"	t
clear_CS	pigpio.c	/^static void clear_CS(wfRx_t *w)$/;"	f	typeref:typename:void	file:
clear_SCL	pigpio.c	/^static void clear_SCL(wfRx_t *w)$/;"	f	typeref:typename:void	file:
clear_SCLK	pigpio.c	/^static void clear_SCLK(wfRx_t *w)$/;"	f	typeref:typename:void	file:
clear_SDA	pigpio.c	/^static void clear_SDA(wfRx_t *w)$/;"	f	typeref:typename:void	file:
clear_bank_1	pigpiod_if.c	/^int clear_bank_1(uint32_t levels)$/;"	f	typeref:typename:int
clear_bank_1	pigpiod_if2.c	/^int clear_bank_1(int pi, uint32_t levels)$/;"	f	typeref:typename:int
clear_bank_2	pigpiod_if.c	/^int clear_bank_2(uint32_t levels)$/;"	f	typeref:typename:int
clear_bank_2	pigpiod_if2.c	/^int clear_bank_2(int pi, uint32_t levels)$/;"	f	typeref:typename:int
clk	pigpio.h	/^   int clk;     \/* GPIO for clock           *\/$/;"	m	struct:__anon638cdb230808	typeref:typename:int
clkCfg	pigpio.c	/^static const clkCfg_t clkCfg[]=$/;"	v	typeref:typename:const clkCfg_t[]	file:
clkCfg_t	pigpio.c	/^} clkCfg_t;$/;"	t	typeref:struct:__anon638cdb1e0c08	file:
clkDef	pigpio.c	/^static const uint8_t clkDef[PI_MAX_GPIO + 1] =$/;"	v	typeref:typename:const uint8_t[]	file:
clkInf_t	pigpio.c	/^} clkInf_t;$/;"	t	typeref:struct:__anon638cdb1e1b08	file:
clkReg	pigpio.c	/^static volatile uint32_t * clkReg  = MAP_FAILED;$/;"	v	typeref:typename:volatile uint32_t *	file:
clk_osc_freq	pigpio.c	/^static volatile uint32_t clk_osc_freq  = CLK_OSC_FREQ;$/;"	v	typeref:typename:volatile uint32_t	file:
clk_pha	pigpio.h	/^   int clk_pha; \/* clock phase              *\/$/;"	m	struct:__anon638cdb230808	typeref:typename:int
clk_plld_freq	pigpio.c	/^static volatile uint32_t clk_plld_freq = CLK_PLLD_FREQ;$/;"	v	typeref:typename:volatile uint32_t	file:
clk_pol	pigpio.h	/^   int clk_pol; \/* clock off state          *\/$/;"	m	struct:__anon638cdb230808	typeref:typename:int
clk_us	pigpio.h	/^   int clk_us;  \/* clock micros             *\/$/;"	m	struct:__anon638cdb230808	typeref:typename:int
clock	pigpio.c	/^   unsigned clock;$/;"	m	struct:__anon638cdb1e1b08	typeref:typename:unsigned	file:
clockMicros	pigpio.c	/^   unsigned clockMicros;$/;"	m	struct:__anon638cdb1e1308	typeref:typename:unsigned	file:
clockMicros	pigpiod.c	/^static unsigned clockMicros            = PI_DEFAULT_CLK_MICROS;$/;"	v	typeref:typename:unsigned	file:
clockPeriph	pigpio.c	/^   unsigned clockPeriph;$/;"	m	struct:__anon638cdb1e1308	typeref:typename:unsigned	file:
clockPeripheral	pigpiod.c	/^static unsigned clockPeripheral        = PI_DEFAULT_CLK_PERIPHERAL;$/;"	v	typeref:typename:unsigned	file:
closeOrphanedNotifications	pigpio.c	/^static void closeOrphanedNotifications(int slot, int fd)$/;"	f	typeref:typename:void	file:
cmd	command.h	/^   int   cmd;  \/* command number            *\/$/;"	m	struct:__anon3aaf009a0408	typeref:typename:int
cmd	command.h	/^   uint32_t cmd;$/;"	m	struct:__anon3aaf009a0108	typeref:typename:uint32_t
cmdCmd_t	command.h	/^} cmdCmd_t;$/;"	t	typeref:struct:__anon3aaf009a0108
cmdCtlParse_t	command.h	/^} cmdCtlParse_t;$/;"	t	typeref:struct:__anon3aaf009a0308
cmdErrStr	command.c	/^char * cmdErrStr(int error)$/;"	f	typeref:typename:char *
cmdInfo	command.c	/^cmdInfo_t cmdInfo[]=$/;"	v	typeref:typename:cmdInfo_t[]
cmdInfo_t	command.h	/^} cmdInfo_t;$/;"	t	typeref:struct:__anon3aaf009a0408
cmdInstr_t	command.h	/^} cmdInstr_t;$/;"	t	typeref:struct:__anon3aaf009a0608
cmdMatch	command.c	/^static int cmdMatch(char *str)$/;"	f	typeref:typename:int	file:
cmdParse	command.c	/^int cmdParse($/;"	f	typeref:typename:int
cmdParseScript	command.c	/^int cmdParseScript(char *script, cmdScript_t *s, int diags)$/;"	f	typeref:typename:int
cmdScript_t	command.h	/^} cmdScript_t;$/;"	t	typeref:struct:__anon3aaf009a0708
cmdStr	command.c	/^char *cmdStr(void)$/;"	f	typeref:typename:char *
cmdTagStep_t	command.h	/^} cmdTagStep_t;$/;"	t	typeref:struct:__anon3aaf009a0508
cmdUsage	command.c	/^char * cmdUsage = "\\n\\$/;"	v	typeref:typename:char *
code_timeout	EXAMPLES/C/WIEGAND_CODE/wiegand.c	/^   uint32_t code_timeout;$/;"	m	struct:_Pi_Wieg_s	typeref:typename:uint32_t	file:
code_timeout	EXAMPLES/CPP/WIEGAND_CODE/wiegand.hpp	/^   uint32_t code_timeout;$/;"	m	class:Wiegand	typeref:typename:uint32_t
command	pigpio.c	/^   uint8_t command;$/;"	m	struct:my_smbus_ioctl_data	typeref:typename:uint8_t	file:
command.o	Makefile	/^command.o: command.c pigpio.h command.h$/;"	t
command_buf	pigs.c	/^char command_buf[CMD_MAX_EXTENSION];$/;"	v	typeref:typename:char[]
command_mutex	pigpiod_if.c	/^static pthread_mutex_t command_mutex = PTHREAD_MUTEX_INITIALIZER;$/;"	v	typeref:typename:pthread_mutex_t	file:
control	pigpio.h	/^   uint32_t control;          \/* Write *\/$/;"	m	struct:__anon638cdb230b08	typeref:typename:uint32_t
custom_1	pigpiod_if.c	/^int custom_1(unsigned arg1, unsigned arg2, char *argx, unsigned count)$/;"	f	typeref:typename:int
custom_1	pigpiod_if2.c	/^int custom_1(int pi, unsigned arg1, unsigned arg2, char *argx, unsigned count)$/;"	f	typeref:typename:int
custom_2	pigpiod_if.c	/^int custom_2(unsigned arg1, char *argx, unsigned count,$/;"	f	typeref:typename:int
custom_2	pigpiod_if2.c	/^int custom_2(int pi, unsigned arg1, char *argx, unsigned count,$/;"	f	typeref:typename:int
cvis	command.h	/^   int   cvis; \/* command valid in a script *\/$/;"	m	struct:__anon3aaf009a0408	typeref:typename:int
data	pigpio.c	/^   uint32_t data;$/;"	m	struct:__anon638cdb1e1508	typeref:typename:uint32_t	file:
data	pigpio.c	/^   union my_smbus_data *data;$/;"	m	struct:my_smbus_ioctl_data	typeref:union:my_smbus_data *	file:
data	pigpio.h	/^   uint32_t data;$/;"	m	struct:__anon638cdb230208	typeref:typename:uint32_t
dataBits	pigpio.c	/^   int      dataBits; \/* 1-32 *\/$/;"	m	struct:__anon638cdb1e1508	typeref:typename:int	file:
dbgLevel	pigpio.c	/^   unsigned dbgLevel;$/;"	m	struct:__anon638cdb1e1308	typeref:typename:unsigned	file:
deferOff	pigpio.c	/^   uint16_t deferOff;$/;"	m	struct:__anon638cdb1e0408	typeref:typename:uint16_t	file:
deferRng	pigpio.c	/^   uint16_t deferRng;$/;"	m	struct:__anon638cdb1e0408	typeref:typename:uint16_t	file:
delay	pigpio.c	/^   int delay;$/;"	m	struct:__anon638cdb1e1608	typeref:typename:int	file:
delay	pigpio.c	/^   int delay;$/;"	m	struct:__anon638cdb1e1708	typeref:typename:int	file:
delete_script	pigpiod_if.c	/^int delete_script(unsigned script_id)$/;"	f	typeref:typename:int
delete_script	pigpiod_if2.c	/^int delete_script(int pi, unsigned script_id)$/;"	f	typeref:typename:int
deleted	pigpio.h	/^   uint16_t deleted;$/;"	m	struct:__anon638cdb230708	typeref:typename:uint16_t
diffTick	pigpio.c	/^   uint32_t diffTick[TICKSLOTS];$/;"	m	struct:__anon638cdb1e1208	typeref:typename:uint32_t[]	file:
dispatch_notification	pigpiod_if.c	/^static void dispatch_notification(gpioReport_t *r)$/;"	f	typeref:typename:void	file:
dispatch_notification	pigpiod_if2.c	/^static void dispatch_notification(int pi, gpioReport_t *r)$/;"	f	typeref:typename:void	file:
div	pigpio.c	/^   unsigned div;$/;"	m	struct:__anon638cdb1e1b08	typeref:typename:unsigned	file:
dmaBus	pigpio.c	/^static dmaPage_t * * dmaBus = MAP_FAILED;$/;"	v	typeref:typename:dmaPage_t **	file:
dmaCB2adr	pigpio.c	/^static rawCbs_t * dmaCB2adr(int pos)$/;"	f	typeref:typename:rawCbs_t *	file:
dmaCbAdr	pigpio.c	/^static uint32_t dmaCbAdr(int pos)$/;"	f	typeref:typename:uint32_t	file:
dmaCbPrint	pigpio.c	/^static void dmaCbPrint(int pos)$/;"	f	typeref:typename:void	file:
dmaCurrentSlot	pigpio.c	/^static unsigned dmaCurrentSlot(unsigned pos)$/;"	f	typeref:typename:unsigned	file:
dmaDelayCb	pigpio.c	/^static void dmaDelayCb(int b)$/;"	f	typeref:typename:void	file:
dmaGpioOffAdr	pigpio.c	/^static uint32_t dmaGpioOffAdr(int pos)$/;"	f	typeref:typename:uint32_t	file:
dmaGpioOffCb	pigpio.c	/^static void dmaGpioOffCb(int b, int pos)$/;"	f	typeref:typename:void	file:
dmaGpioOnAdr	pigpio.c	/^static uint32_t dmaGpioOnAdr(int pos)$/;"	f	typeref:typename:uint32_t	file:
dmaGpioOnCb	pigpio.c	/^static void dmaGpioOnCb(int b, int pos)$/;"	f	typeref:typename:void	file:
dmaIBus	pigpio.c	/^static dmaIPage_t * * dmaIBus = MAP_FAILED;$/;"	v	typeref:typename:dmaIPage_t **	file:
dmaIPage_t	pigpio.c	/^} dmaIPage_t;$/;"	t	typeref:struct:__anon638cdb1e0208	file:
dmaIVirt	pigpio.c	/^static dmaIPage_t * * dmaIVirt = MAP_FAILED;$/;"	v	typeref:typename:dmaIPage_t **	file:
dmaIn	pigpio.c	/^static volatile uint32_t * dmaIn   = MAP_FAILED;$/;"	v	typeref:typename:volatile uint32_t *	file:
dmaInitCbs	pigpio.c	/^static void dmaInitCbs(void)$/;"	f	typeref:typename:void	file:
dmaInitCbsCount	pigpio.c	/^   uint32_t dmaInitCbsCount;$/;"	m	struct:__anon638cdb1e1208	typeref:typename:uint32_t	file:
dmaMboxBlk	pigpio.c	/^static DMAMem_t *dmaMboxBlk = MAP_FAILED;$/;"	v	typeref:typename:DMAMem_t *	file:
dmaNowAtICB	pigpio.c	/^static unsigned dmaNowAtICB(void)$/;"	f	typeref:typename:unsigned	file:
dmaNowAtOCB	pigpio.c	/^static int dmaNowAtOCB(void)$/;"	f	typeref:typename:int	file:
dmaOBus	pigpio.c	/^static dmaOPage_t * * dmaOBus = MAP_FAILED;$/;"	v	typeref:typename:dmaOPage_t **	file:
dmaOPage_t	pigpio.c	/^} dmaOPage_t;$/;"	t	typeref:struct:__anon638cdb1e0308	file:
dmaOVirt	pigpio.c	/^static dmaOPage_t * * dmaOVirt = MAP_FAILED;$/;"	v	typeref:typename:dmaOPage_t **	file:
dmaOut	pigpio.c	/^static volatile uint32_t * dmaOut  = MAP_FAILED;$/;"	v	typeref:typename:volatile uint32_t *	file:
dmaPMapBlk	pigpio.c	/^static uintptr_t * * dmaPMapBlk = MAP_FAILED;$/;"	v	typeref:typename:uintptr_t **	file:
dmaPage_t	pigpio.c	/^} dmaPage_t;$/;"	t	typeref:struct:__anon638cdb1e0108	file:
dmaPwmDataAdr	pigpio.c	/^static uint32_t dmaPwmDataAdr(int pos)$/;"	f	typeref:typename:uint32_t	file:
dmaReadLevelsAdr	pigpio.c	/^static uint32_t dmaReadLevelsAdr(int pos)$/;"	f	typeref:typename:uint32_t	file:
dmaReadLevelsCb	pigpio.c	/^static void dmaReadLevelsCb(int b, int pos)$/;"	f	typeref:typename:void	file:
dmaReg	pigpio.c	/^static volatile uint32_t * dmaReg  = MAP_FAILED;$/;"	v	typeref:typename:volatile uint32_t *	file:
dmaTickAdr	pigpio.c	/^static uint32_t dmaTickAdr(int pos)$/;"	f	typeref:typename:uint32_t	file:
dmaTickCb	pigpio.c	/^static void dmaTickCb(int b, int pos)$/;"	f	typeref:typename:void	file:
dmaVirt	pigpio.c	/^static dmaPage_t * * dmaVirt = MAP_FAILED;$/;"	v	typeref:typename:dmaPage_t **	file:
dst	pigpio.h	/^   uint32_t dst;$/;"	m	struct:__anon638cdb230908	typeref:typename:uint32_t
eaten	command.h	/^   int    eaten;$/;"	m	struct:__anon3aaf009a0308	typeref:typename:int
edge	pigpio.c	/^   unsigned edge;$/;"	m	struct:__anon638cdb1e0708	typeref:typename:unsigned	file:
edge	pigpiod_if.c	/^   int edge;$/;"	m	struct:callback_s	typeref:typename:int	file:
edge	pigpiod_if2.c	/^   int edge;$/;"	m	struct:callback_s	typeref:typename:int	file:
edges	EXAMPLES/C/COUNTER_1/freq_count_1.c	/^void edges(int gpio, int level, uint32_t tick)$/;"	f	typeref:typename:void
edges	EXAMPLES/C/IR_RECEIVER/ir_hasher.c	/^   int edges;$/;"	m	struct:_Pi_Hasher_s	typeref:typename:int	file:
edges	EXAMPLES/CPP/IR_RECEIVER/ir_hasher.hpp	/^   int edges;$/;"	m	class:Hasher	typeref:typename:int
emitFrags	pigpio.c	/^   uint32_t emitFrags;$/;"	m	struct:__anon638cdb1e1208	typeref:typename:uint32_t	file:
errFifo	pigpiod.c	/^static FILE * errFifo;$/;"	v	typeref:typename:FILE *	file:
errInfo	command.c	/^static errInfo_t errInfo[]=$/;"	v	typeref:typename:errInfo_t[]	file:
errInfo_t	command.c	/^} errInfo_t;$/;"	t	typeref:struct:__anon3aaf00950108	file:
error	command.c	/^   int error;$/;"	m	struct:__anon3aaf00950108	typeref:typename:int	file:
event	pigpiod_if2.c	/^   int event;$/;"	m	struct:evtCallback_s	typeref:typename:int	file:
eventAlert	pigpio.c	/^static eventAlert_t     eventAlert [PI_MAX_EVENT+1];$/;"	v	typeref:typename:eventAlert_t[]	file:
eventAlert_t	pigpio.c	/^} eventAlert_t;$/;"	t	typeref:struct:__anon638cdb1e0608	file:
eventBits	pigpio.c	/^   uint32_t eventBits;$/;"	m	struct:__anon638cdb1e0b08	typeref:typename:uint32_t	file:
eventBits	pigpio.c	/^   uint32_t eventBits;$/;"	m	struct:__anon638cdb1e0d08	typeref:typename:uint32_t	file:
eventFuncEx_t	pigpio.h	/^typedef void (*eventFuncEx_t)      (int      event,$/;"	t	typeref:typename:void (*)(int event,uint32_t tick,void * userdata)
eventFunc_t	pigpio.h	/^typedef void (*eventFunc_t)        (int      event,$/;"	t	typeref:typename:void (*)(int event,uint32_t tick)
eventMonitor	pigpio.c	/^int eventMonitor(unsigned handle, uint32_t bits)$/;"	f	typeref:typename:int
eventSetFunc	pigpio.c	/^int eventSetFunc(unsigned event, eventFunc_t f)$/;"	f	typeref:typename:int
eventSetFuncEx	pigpio.c	/^int eventSetFuncEx(unsigned event, eventFuncEx_t f, void *userdata)$/;"	f	typeref:typename:int
eventTrigger	pigpio.c	/^int eventTrigger(unsigned event)$/;"	f	typeref:typename:int
event_callback	pigpiod_if2.c	/^int event_callback(int pi, unsigned event, evtCBFunc_t f)$/;"	f	typeref:typename:int
event_callback_cancel	pigpiod_if2.c	/^int event_callback_cancel(unsigned id)$/;"	f	typeref:typename:int
event_callback_ex	pigpiod_if2.c	/^int event_callback_ex($/;"	f	typeref:typename:int
event_trigger	pigpiod_if2.c	/^int event_trigger(int pi, unsigned event)$/;"	f	typeref:typename:int
evtCBFuncEx_t	pigpiod_if2.h	/^typedef void (*evtCBFuncEx_t)$/;"	t	typeref:typename:void (*)(int pi,unsigned event,uint32_t tick,void * userdata)
evtCBFunc_t	pigpiod_if2.h	/^typedef void (*evtCBFunc_t)$/;"	t	typeref:typename:void (*)(int pi,unsigned event,uint32_t tick)
evtCallback_s	pigpiod_if2.c	/^struct evtCallback_s$/;"	s	file:
evtCallback_t	pigpiod_if2.h	/^typedef struct evtCallback_s evtCallback_t;$/;"	t	typeref:struct:evtCallback_s
ex	pigpio.c	/^   unsigned ex;$/;"	m	struct:__anon638cdb1e0508	typeref:typename:unsigned	file:
ex	pigpio.c	/^   unsigned ex;$/;"	m	struct:__anon638cdb1e0608	typeref:typename:unsigned	file:
ex	pigpio.c	/^   unsigned ex;$/;"	m	struct:__anon638cdb1e0708	typeref:typename:unsigned	file:
ex	pigpio.c	/^   unsigned ex;$/;"	m	struct:__anon638cdb1e0808	typeref:typename:unsigned	file:
ex	pigpio.c	/^   unsigned ex;$/;"	m	struct:__anon638cdb1e0908	typeref:typename:unsigned	file:
ex	pigpio.c	/^   unsigned ex;$/;"	m	struct:__anon638cdb1e0a08	typeref:typename:unsigned	file:
ex	pigpiod_if.c	/^   int ex;$/;"	m	struct:callback_s	typeref:typename:int	file:
ex	pigpiod_if2.c	/^   int ex;$/;"	m	struct:callback_s	typeref:typename:int	file:
ex	pigpiod_if2.c	/^   int ex;$/;"	m	struct:evtCallback_s	typeref:typename:int	file:
exec_prefix	Makefile	/^exec_prefix = $(prefix)$/;"	m
ext_len	command.h	/^      uint32_t ext_len;$/;"	m	union:__anon3aaf009a0108::__anon3aaf009a020a	typeref:typename:uint32_t
f	pigpiod_if.c	/^   CBF_t f;$/;"	m	struct:callback_s	typeref:typename:CBF_t	file:
f	pigpiod_if2.c	/^   CBF_t f;$/;"	m	struct:callback_s	typeref:typename:CBF_t	file:
f	pigpiod_if2.c	/^   CBF_t f;$/;"	m	struct:evtCallback_s	typeref:typename:CBF_t	file:
fatal	EXAMPLES/C/COUNTER_1/freq_count_1.c	/^void fatal(int show_usage, char *fmt, ...)$/;"	f	typeref:typename:void
fatal	EXAMPLES/C/COUNTER_2/freq_count_2.c	/^void fatal(int show_usage, char *fmt, ...)$/;"	f	typeref:typename:void
fatal	pigpiod.c	/^void fatal(char *fmt, ...)$/;"	f	typeref:typename:void
fd	pigpio.c	/^   int      fd;$/;"	m	struct:__anon638cdb1e0d08	typeref:typename:int	file:
fd	pigpio.c	/^   int fd;$/;"	m	struct:__anon638cdb1e0708	typeref:typename:int	file:
fd	pigpio.c	/^   int16_t  fd;$/;"	m	struct:__anon638cdb1e0e08	typeref:typename:int16_t	file:
fd	pigpio.c	/^   int16_t  fd;$/;"	m	struct:__anon638cdb1e0f08	typeref:typename:int16_t	file:
fd	pigpio.c	/^   int16_t  fd;$/;"	m	struct:__anon638cdb1e1008	typeref:typename:int16_t	file:
fdLock	pigpio.c	/^static int fdLock       = -1;$/;"	v	typeref:typename:int	file:
fdMbox	pigpio.c	/^static int fdMbox       = -1;$/;"	v	typeref:typename:int	file:
fdMem	pigpio.c	/^static int fdMem        = -1;$/;"	v	typeref:typename:int	file:
fdPmap	pigpio.c	/^static int fdPmap       = -1;$/;"	v	typeref:typename:int	file:
fdSock	pigpio.c	/^static int fdSock       = -1;$/;"	v	typeref:typename:int	file:
fileApprove	pigpio.c	/^int fileApprove(char *filename)$/;"	f	typeref:typename:int
fileClose	pigpio.c	/^int fileClose(unsigned handle)$/;"	f	typeref:typename:int
fileInfo	pigpio.c	/^static fileInfo_t       fileInfo   [PI_FILE_SLOTS];$/;"	v	typeref:typename:fileInfo_t[]	file:
fileInfo_t	pigpio.c	/^} fileInfo_t;$/;"	t	typeref:struct:__anon638cdb1e0e08	file:
fileList	pigpio.c	/^int fileList(char *fpat,  char *buf, unsigned count)$/;"	f	typeref:typename:int
fileOpen	pigpio.c	/^int fileOpen(char *file, unsigned mode)$/;"	f	typeref:typename:int
fileRead	pigpio.c	/^int fileRead(unsigned handle, char *buf, unsigned count)$/;"	f	typeref:typename:int
fileSeek	pigpio.c	/^int fileSeek(unsigned handle, int32_t seekOffset, int seekFrom)$/;"	f	typeref:typename:int
fileWrite	pigpio.c	/^int fileWrite(unsigned handle, char *buf, unsigned count)$/;"	f	typeref:typename:int
file_close	pigpiod_if2.c	/^int file_close(int pi, unsigned handle)$/;"	f	typeref:typename:int
file_list	pigpiod_if2.c	/^int file_list(int pi, char *fpat,  char *buf, unsigned count)$/;"	f	typeref:typename:int
file_open	pigpiod_if2.c	/^int file_open(int pi, char *file, unsigned mode)$/;"	f	typeref:typename:int
file_read	pigpiod_if2.c	/^int file_read(int pi, unsigned handle, char *buf, unsigned count)$/;"	f	typeref:typename:int
file_seek	pigpiod_if2.c	/^int file_seek(int pi, unsigned handle, int32_t seekOffset, int seekFrom)$/;"	f	typeref:typename:int
file_write	pigpiod_if2.c	/^int file_write(int pi, unsigned handle, char *buf, unsigned count)$/;"	f	typeref:typename:int
findEventBits	pigpiod_if2.c	/^static void findEventBits(int pi)$/;"	f	typeref:typename:void	file:
findNotifyBits	pigpiod_if.c	/^static void findNotifyBits(void)$/;"	f	typeref:typename:void	file:
findNotifyBits	pigpiod_if2.c	/^static void findNotifyBits(int pi)$/;"	f	typeref:typename:void	file:
fired	pigpio.c	/^   int fired;$/;"	m	struct:__anon638cdb1e0608	typeref:typename:int	file:
flags	pigpio.c	/^   uint32_t flags;$/;"	m	struct:__anon638cdb1e0f08	typeref:typename:uint32_t	file:
flags	pigpio.c	/^   uint32_t flags;$/;"	m	struct:__anon638cdb1e1008	typeref:typename:uint32_t	file:
flags	pigpio.c	/^   uint32_t flags;$/;"	m	struct:__anon638cdb1e1108	typeref:typename:uint32_t	file:
flags	pigpio.h	/^   uint16_t flags;$/;"	m	struct:__anon638cdb230408	typeref:typename:uint16_t
flags	pigpio.h	/^   uint16_t flags;$/;"	m	struct:__anon638cdb230a08	typeref:typename:uint16_t
flags	pigpio.h	/^   uint32_t flags;$/;"	m	struct:__anon638cdb230608	typeref:typename:uint32_t
flushMemory	pigpio.c	/^static void flushMemory(void)$/;"	f	typeref:typename:void	file:
fmtMdeStr	command.c	/^static char * fmtMdeStr="RW540123";$/;"	v	typeref:typename:char *	file:
fmtPudStr	command.c	/^static char * fmtPudStr="ODU";$/;"	v	typeref:typename:char *	file:
foreground	pigpiod.c	/^static int      foreground             = PI_DEFAULT_FOREGROUND;$/;"	v	typeref:typename:int	file:
frac	pigpio.c	/^   unsigned frac;$/;"	m	struct:__anon638cdb1e1b08	typeref:typename:unsigned	file:
freqIdx	pigpio.c	/^   uint16_t freqIdx;$/;"	m	struct:__anon638cdb1e0408	typeref:typename:uint16_t	file:
fullBit	pigpio.c	/^   uint32_t fullBit; \/* nanoseconds *\/$/;"	m	struct:__anon638cdb1e1508	typeref:typename:uint32_t	file:
func	pigpio.c	/^   callbk_t func;$/;"	m	struct:__anon638cdb1e0508	typeref:typename:callbk_t	file:
func	pigpio.c	/^   callbk_t func;$/;"	m	struct:__anon638cdb1e0608	typeref:typename:callbk_t	file:
func	pigpio.c	/^   callbk_t func;$/;"	m	struct:__anon638cdb1e0708	typeref:typename:callbk_t	file:
func	pigpio.c	/^   callbk_t func;$/;"	m	struct:__anon638cdb1e0808	typeref:typename:callbk_t	file:
func	pigpio.c	/^   callbk_t func;$/;"	m	struct:__anon638cdb1e0908	typeref:typename:callbk_t	file:
func	pigpio.c	/^   callbk_t func;$/;"	m	struct:__anon638cdb1e0a08	typeref:typename:callbk_t	file:
func	pigpio.h	/^   uint16_t func;$/;"	m	struct:__anon638cdb230108	typeref:typename:uint16_t
funcs	pigpio.c	/^   uint32_t funcs;$/;"	m	struct:__anon638cdb1e0f08	typeref:typename:uint32_t	file:
gCallBackFirst	pigpiod_if.c	/^callback_t *gCallBackFirst = 0;$/;"	v	typeref:typename:callback_t *
gCallBackFirst	pigpiod_if2.c	/^static callback_t *gCallBackFirst = 0;$/;"	v	typeref:typename:callback_t *	file:
gCallBackLast	pigpiod_if.c	/^callback_t *gCallBackLast = 0;$/;"	v	typeref:typename:callback_t *
gCallBackLast	pigpiod_if2.c	/^static callback_t *gCallBackLast  = 0;$/;"	v	typeref:typename:callback_t *	file:
gCancelState	pigpiod_if2.c	/^static int             gCancelState [MAX_PI];$/;"	v	typeref:typename:int[]	file:
gCmdMutex	pigpiod_if2.c	/^static pthread_mutex_t gCmdMutex    [MAX_PI];$/;"	v	typeref:typename:pthread_mutex_t[]	file:
gEventBits	pigpiod_if2.c	/^static uint32_t        gEventBits   [MAX_PI];$/;"	v	typeref:typename:uint32_t[]	file:
gFilterBits	pigpio.c	/^static volatile uint32_t gFilterBits = 0;$/;"	v	typeref:typename:volatile uint32_t	file:
gLastLevel	pigpiod_if.c	/^static uint32_t gLastLevel;$/;"	v	typeref:typename:uint32_t	file:
gLastLevel	pigpiod_if2.c	/^static uint32_t        gLastLevel   [MAX_PI];$/;"	v	typeref:typename:uint32_t[]	file:
gNotifyBits	pigpiod_if.c	/^static uint32_t gNotifyBits;$/;"	v	typeref:typename:uint32_t	file:
gNotifyBits	pigpiod_if2.c	/^static uint32_t        gNotifyBits  [MAX_PI];$/;"	v	typeref:typename:uint32_t[]	file:
gPiInUse	pigpiod_if2.c	/^static int             gPiInUse     [MAX_PI];$/;"	v	typeref:typename:int[]	file:
gPigCommand	pigpiod_if.c	/^static int gPigCommand = -1;$/;"	v	typeref:typename:int	file:
gPigCommand	pigpiod_if2.c	/^static int             gPigCommand  [MAX_PI];$/;"	v	typeref:typename:int[]	file:
gPigHandle	pigpiod_if.c	/^static int gPigHandle = -1;$/;"	v	typeref:typename:int	file:
gPigHandle	pigpiod_if2.c	/^static int             gPigHandle   [MAX_PI];$/;"	v	typeref:typename:int[]	file:
gPigNotify	pigpiod_if.c	/^static int gPigNotify = -1;$/;"	v	typeref:typename:int	file:
gPigNotify	pigpiod_if2.c	/^static int             gPigNotify   [MAX_PI];$/;"	v	typeref:typename:int[]	file:
gPigStarted	pigpiod_if.c	/^static int gPigStarted = 0;$/;"	v	typeref:typename:int	file:
gPthNotify	pigpiod_if2.c	/^static pthread_t       *gPthNotify  [MAX_PI];$/;"	v	typeref:typename:pthread_t * []	file:
gReport	pigpiod_if.c	/^static gpioReport_t gReport[PISCOPE_MAX_REPORTS_PER_READ];$/;"	v	typeref:typename:gpioReport_t[]	file:
g_gpio	EXAMPLES/C/COUNTER_1/freq_count_1.c	/^static int g_gpio[MAX_GPIOS];$/;"	v	typeref:typename:int[]	file:
g_gpio	EXAMPLES/C/COUNTER_2/freq_count_2.c	/^static int g_gpio[MAX_GPIOS];$/;"	v	typeref:typename:int[]	file:
g_mask	EXAMPLES/C/COUNTER_1/freq_count_1.c	/^static uint32_t g_mask;$/;"	v	typeref:typename:uint32_t	file:
g_mask	EXAMPLES/C/COUNTER_2/freq_count_2.c	/^static uint32_t g_mask;$/;"	v	typeref:typename:uint32_t	file:
g_num_gpios	EXAMPLES/C/COUNTER_1/freq_count_1.c	/^static int g_num_gpios;$/;"	v	typeref:typename:int	file:
g_num_gpios	EXAMPLES/C/COUNTER_2/freq_count_2.c	/^static int g_num_gpios;$/;"	v	typeref:typename:int	file:
g_opt_p	EXAMPLES/C/COUNTER_1/freq_count_1.c	/^static int g_opt_p = OPT_P_DEF;$/;"	v	typeref:typename:int	file:
g_opt_p	EXAMPLES/C/COUNTER_2/freq_count_2.c	/^static int g_opt_p = OPT_P_DEF;$/;"	v	typeref:typename:int	file:
g_opt_r	EXAMPLES/C/COUNTER_1/freq_count_1.c	/^static int g_opt_r = OPT_R_DEF;$/;"	v	typeref:typename:int	file:
g_opt_r	EXAMPLES/C/COUNTER_2/freq_count_2.c	/^static int g_opt_r = OPT_R_DEF;$/;"	v	typeref:typename:int	file:
g_opt_s	EXAMPLES/C/COUNTER_1/freq_count_1.c	/^static int g_opt_s = OPT_S_DEF;$/;"	v	typeref:typename:int	file:
g_opt_s	EXAMPLES/C/COUNTER_2/freq_count_2.c	/^static int g_opt_s = OPT_S_DEF;$/;"	v	typeref:typename:int	file:
g_opt_t	EXAMPLES/C/COUNTER_1/freq_count_1.c	/^static int g_opt_t = 0;$/;"	v	typeref:typename:int	file:
g_opt_t	EXAMPLES/C/COUNTER_2/freq_count_2.c	/^static int g_opt_t = 0;$/;"	v	typeref:typename:int	file:
g_pulse_count	EXAMPLES/C/COUNTER_1/freq_count_1.c	/^static volatile int g_pulse_count[MAX_GPIOS];$/;"	v	typeref:typename:volatile int[]	file:
g_pulse_count	EXAMPLES/C/COUNTER_2/freq_count_2.c	/^static volatile int g_pulse_count[MAX_GPIOS];$/;"	v	typeref:typename:volatile int[]	file:
g_reset_counts	EXAMPLES/C/COUNTER_1/freq_count_1.c	/^static volatile int g_reset_counts;$/;"	v	typeref:typename:volatile int	file:
g_reset_counts	EXAMPLES/C/COUNTER_2/freq_count_2.c	/^static volatile int g_reset_counts;$/;"	v	typeref:typename:volatile int	file:
geCallBackFirst	pigpiod_if2.c	/^static evtCallback_t *geCallBackFirst = 0;$/;"	v	typeref:typename:evtCallback_t *	file:
geCallBackLast	pigpiod_if2.c	/^static evtCallback_t *geCallBackLast  = 0;$/;"	v	typeref:typename:evtCallback_t *	file:
getBitInBytes	pigpio.c	/^int getBitInBytes(int bitPos, char *buf, int numBits)$/;"	f	typeref:typename:int
getNum	command.c	/^static int getNum(char *str, uintptr_t *val, int8_t *opt)$/;"	f	typeref:typename:int	file:
getNum	pigpiod.c	/^static uint64_t getNum(char *str, int *err)$/;"	f	typeref:typename:uint64_t	file:
get_PWM_dutycycle	pigpiod_if.c	/^int get_PWM_dutycycle(unsigned user_gpio)$/;"	f	typeref:typename:int
get_PWM_dutycycle	pigpiod_if2.c	/^int get_PWM_dutycycle(int pi, unsigned user_gpio)$/;"	f	typeref:typename:int
get_PWM_frequency	pigpiod_if.c	/^int get_PWM_frequency(unsigned user_gpio)$/;"	f	typeref:typename:int
get_PWM_frequency	pigpiod_if2.c	/^int get_PWM_frequency(int pi, unsigned user_gpio)$/;"	f	typeref:typename:int
get_PWM_range	pigpiod_if.c	/^int get_PWM_range(unsigned user_gpio)$/;"	f	typeref:typename:int
get_PWM_range	pigpiod_if2.c	/^int get_PWM_range(int pi, unsigned user_gpio)$/;"	f	typeref:typename:int
get_PWM_real_range	pigpiod_if.c	/^int get_PWM_real_range(unsigned user_gpio)$/;"	f	typeref:typename:int
get_PWM_real_range	pigpiod_if2.c	/^int get_PWM_real_range(int pi, unsigned user_gpio)$/;"	f	typeref:typename:int
get_current_tick	pigpiod_if.c	/^uint32_t get_current_tick(void)$/;"	f	typeref:typename:uint32_t
get_current_tick	pigpiod_if2.c	/^uint32_t get_current_tick(int pi)$/;"	f	typeref:typename:uint32_t
get_extensions	pigs.c	/^void get_extensions(int sock, int command, int res)$/;"	f	typeref:typename:void
get_hardware_revision	pigpiod_if.c	/^uint32_t get_hardware_revision(void)$/;"	f	typeref:typename:uint32_t
get_hardware_revision	pigpiod_if2.c	/^uint32_t get_hardware_revision(int pi)$/;"	f	typeref:typename:uint32_t
get_mode	pigpiod_if.c	/^int get_mode(unsigned gpio)$/;"	f	typeref:typename:int
get_mode	pigpiod_if2.c	/^int get_mode(int pi, unsigned gpio)$/;"	f	typeref:typename:int
get_pad_strength	pigpiod_if2.c	/^int get_pad_strength(int pi, unsigned pad)$/;"	f	typeref:typename:int
get_pigpio_version	pigpiod_if.c	/^uint32_t get_pigpio_version(void)$/;"	f	typeref:typename:uint32_t
get_pigpio_version	pigpiod_if2.c	/^uint32_t get_pigpio_version(int pi)$/;"	f	typeref:typename:uint32_t
get_servo_pulsewidth	pigpiod_if.c	/^int get_servo_pulsewidth(unsigned user_gpio)$/;"	f	typeref:typename:int
get_servo_pulsewidth	pigpiod_if2.c	/^int get_servo_pulsewidth(int pi, unsigned user_gpio)$/;"	f	typeref:typename:int
gfInitialised	pigpio.c	/^   uint8_t  gfInitialised;$/;"	m	struct:__anon638cdb1e0508	typeref:typename:uint8_t	file:
gfLBitV	pigpio.c	/^   uint32_t gfLBitV;$/;"	m	struct:__anon638cdb1e0508	typeref:typename:uint32_t	file:
gfRBitV	pigpio.c	/^   uint32_t gfRBitV;$/;"	m	struct:__anon638cdb1e0508	typeref:typename:uint32_t	file:
gfSteadyUs	pigpio.c	/^   uint32_t gfSteadyUs;$/;"	m	struct:__anon638cdb1e0508	typeref:typename:uint32_t	file:
gfTick	pigpio.c	/^   uint32_t gfTick;$/;"	m	struct:__anon638cdb1e0508	typeref:typename:uint32_t	file:
goodPipeWrite	pigpio.c	/^   uint32_t goodPipeWrite;$/;"	m	struct:__anon638cdb1e1208	typeref:typename:uint32_t	file:
gpio	EXAMPLES/C/IR_RECEIVER/ir_hasher.c	/^   int gpio;$/;"	m	struct:_Pi_Hasher_s	typeref:typename:int	file:
gpio	pigpio.c	/^   int      gpio;$/;"	m	struct:__anon638cdb1e1808	typeref:typename:int	file:
gpio	pigpio.c	/^   unsigned gpio;$/;"	m	struct:__anon638cdb1e0708	typeref:typename:unsigned	file:
gpio	pigpiod_if.c	/^   int gpio;$/;"	m	struct:callback_s	typeref:typename:int	file:
gpio	pigpiod_if2.c	/^   int gpio;$/;"	m	struct:callback_s	typeref:typename:int	file:
gpioA	EXAMPLES/C/ROTARY_ENCODER/rotary_encoder.c	/^   int gpioA;$/;"	m	struct:_Pi_Renc_s	typeref:typename:int	file:
gpioAlert	pigpio.c	/^static gpioAlert_t      gpioAlert  [PI_MAX_USER_GPIO+1];$/;"	v	typeref:typename:gpioAlert_t[]	file:
gpioAlertFuncEx_t	pigpio.h	/^typedef void (*gpioAlertFuncEx_t)  (int      gpio,$/;"	t	typeref:typename:void (*)(int gpio,int level,uint32_t tick,void * userdata)
gpioAlertFunc_t	pigpio.h	/^typedef void (*gpioAlertFunc_t)    (int      gpio,$/;"	t	typeref:typename:void (*)(int gpio,int level,uint32_t tick)
gpioAlert_t	pigpio.c	/^} gpioAlert_t;$/;"	t	typeref:struct:__anon638cdb1e0508	file:
gpioB	EXAMPLES/C/ROTARY_ENCODER/rotary_encoder.c	/^   int gpioB;$/;"	m	struct:_Pi_Renc_s	typeref:typename:int	file:
gpioCfg	pigpio.c	/^static volatile gpioCfg_t gpioCfg =$/;"	v	typeref:typename:volatile gpioCfg_t	file:
gpioCfgBufferSize	pigpio.c	/^int gpioCfgBufferSize(unsigned millis)$/;"	f	typeref:typename:int
gpioCfgClock	pigpio.c	/^int gpioCfgClock(unsigned micros, unsigned peripheral, unsigned source)$/;"	f	typeref:typename:int
gpioCfgDMAchannel	pigpio.c	/^int gpioCfgDMAchannel(unsigned DMAchannel)$/;"	f	typeref:typename:int
gpioCfgDMAchannels	pigpio.c	/^int gpioCfgDMAchannels(unsigned primaryChannel, unsigned secondaryChannel)$/;"	f	typeref:typename:int
gpioCfgGetInternals	pigpio.c	/^uint32_t gpioCfgGetInternals(void)$/;"	f	typeref:typename:uint32_t
gpioCfgInterfaces	pigpio.c	/^int gpioCfgInterfaces(unsigned ifFlags)$/;"	f	typeref:typename:int
gpioCfgMemAlloc	pigpio.c	/^int gpioCfgMemAlloc(unsigned memAllocMode)$/;"	f	typeref:typename:int
gpioCfgNetAddr	pigpio.c	/^int gpioCfgNetAddr(int numSockAddr, uint32_t *sockAddr)$/;"	f	typeref:typename:int
gpioCfgPermissions	pigpio.c	/^int gpioCfgPermissions(uint64_t updateMask)$/;"	f	typeref:typename:int
gpioCfgSetInternals	pigpio.c	/^int gpioCfgSetInternals(uint32_t cfgVal)$/;"	f	typeref:typename:int
gpioCfgSocketPort	pigpio.c	/^int gpioCfgSocketPort(unsigned port)$/;"	f	typeref:typename:int
gpioCfg_t	pigpio.c	/^} gpioCfg_t;$/;"	t	typeref:struct:__anon638cdb1e1308	file:
gpioDelay	pigpio.c	/^uint32_t gpioDelay(uint32_t micros)$/;"	f	typeref:typename:uint32_t
gpioDeleteScript	pigpio.c	/^int gpioDeleteScript(unsigned script_id)$/;"	f	typeref:typename:int
gpioExtent_t	pigpio.h	/^} gpioExtent_t;$/;"	t	typeref:struct:__anon638cdb230208
gpioGetMode	pigpio.c	/^int gpioGetMode(unsigned gpio)$/;"	f	typeref:typename:int
gpioGetPWMdutycycle	pigpio.c	/^int gpioGetPWMdutycycle(unsigned gpio)$/;"	f	typeref:typename:int
gpioGetPWMfrequency	pigpio.c	/^int gpioGetPWMfrequency(unsigned gpio)$/;"	f	typeref:typename:int
gpioGetPWMrange	pigpio.c	/^int gpioGetPWMrange(unsigned gpio)$/;"	f	typeref:typename:int
gpioGetPWMrealRange	pigpio.c	/^int gpioGetPWMrealRange(unsigned gpio)$/;"	f	typeref:typename:int
gpioGetPad	pigpio.c	/^int gpioGetPad(unsigned pad)$/;"	f	typeref:typename:int
gpioGetSamples	pigpio.c	/^static gpioGetSamples_t gpioGetSamples;$/;"	v	typeref:typename:gpioGetSamples_t	file:
gpioGetSamplesFuncEx_t	pigpio.h	/^typedef void (*gpioGetSamplesFuncEx_t) (const gpioSample_t *samples,$/;"	t	typeref:typename:void (*)(const gpioSample_t * samples,int numSamples,void * userdata)
gpioGetSamplesFunc_t	pigpio.h	/^typedef void (*gpioGetSamplesFunc_t)   (const gpioSample_t *samples,$/;"	t	typeref:typename:void (*)(const gpioSample_t * samples,int numSamples)
gpioGetSamples_t	pigpio.c	/^} gpioGetSamples_t;$/;"	t	typeref:struct:__anon638cdb1e0908	file:
gpioGetServoPulsewidth	pigpio.c	/^int gpioGetServoPulsewidth(unsigned gpio)$/;"	f	typeref:typename:int
gpioGlitchFilter	pigpio.c	/^int gpioGlitchFilter(unsigned gpio, unsigned steady)$/;"	f	typeref:typename:int
gpioHardwareClock	pigpio.c	/^int gpioHardwareClock(unsigned gpio, unsigned frequency)$/;"	f	typeref:typename:int
gpioHardwarePWM	pigpio.c	/^int gpioHardwarePWM($/;"	f	typeref:typename:int
gpioHardwareRevision	pigpio.c	/^unsigned gpioHardwareRevision(void)$/;"	f	typeref:typename:unsigned
gpioHeader_t	pigpio.h	/^} gpioHeader_t;$/;"	t	typeref:struct:__anon638cdb230108
gpioISR	pigpio.c	/^static gpioISR_t        gpioISR    [PI_MAX_GPIO+1];$/;"	v	typeref:typename:gpioISR_t[]	file:
gpioISRFuncEx_t	pigpio.h	/^typedef void (*gpioISRFuncEx_t)    (int      gpio,$/;"	t	typeref:typename:void (*)(int gpio,int level,uint32_t tick,void * userdata)
gpioISRFunc_t	pigpio.h	/^typedef void (*gpioISRFunc_t)      (int      gpio,$/;"	t	typeref:typename:void (*)(int gpio,int level,uint32_t tick)
gpioISR_t	pigpio.c	/^} gpioISR_t;$/;"	t	typeref:struct:__anon638cdb1e0708	file:
gpioInfo	pigpio.c	/^static gpioInfo_t       gpioInfo   [PI_MAX_GPIO+1];$/;"	v	typeref:typename:gpioInfo_t[]	file:
gpioInfo_t	pigpio.c	/^} gpioInfo_t;$/;"	t	typeref:struct:__anon638cdb1e0408	file:
gpioInitialise	pigpio.c	/^int gpioInitialise(void)$/;"	f	typeref:typename:int
gpioMask	pigpio.c	/^static uint64_t gpioMask;$/;"	v	typeref:typename:uint64_t	file:
gpioMaskSet	pigpio.c	/^static int gpioMaskSet = 0;$/;"	v	typeref:typename:int	file:
gpioNoiseFilter	pigpio.c	/^int gpioNoiseFilter(unsigned gpio, unsigned steady, unsigned active)$/;"	f	typeref:typename:int
gpioNotify	pigpio.c	/^static gpioNotify_t     gpioNotify [PI_NOTIFY_SLOTS];$/;"	v	typeref:typename:gpioNotify_t[]	file:
gpioNotifyBegin	pigpio.c	/^int gpioNotifyBegin(unsigned handle, uint32_t bits)$/;"	f	typeref:typename:int
gpioNotifyClose	pigpio.c	/^int gpioNotifyClose(unsigned handle)$/;"	f	typeref:typename:int
gpioNotifyOpen	pigpio.c	/^int gpioNotifyOpen(void)$/;"	f	typeref:typename:int
gpioNotifyOpenInBand	pigpio.c	/^static int gpioNotifyOpenInBand(int fd)$/;"	f	typeref:typename:int	file:
gpioNotifyOpenWithSize	pigpio.c	/^int gpioNotifyOpenWithSize(int bufSize)$/;"	f	typeref:typename:int
gpioNotifyPause	pigpio.c	/^int gpioNotifyPause (unsigned handle)$/;"	f	typeref:typename:int
gpioNotify_t	pigpio.c	/^} gpioNotify_t;$/;"	t	typeref:struct:__anon638cdb1e0d08	file:
gpioOff	pigpio.c	/^   uint32_t gpioOff      [OFF_PER_IPAGE];$/;"	m	struct:__anon638cdb1e0208	typeref:typename:uint32_t[]	file:
gpioOff	pigpio.h	/^   uint32_t gpioOff;$/;"	m	struct:__anon638cdb230508	typeref:typename:uint32_t
gpioOff	pigpio.h	/^   uint32_t gpioOff;$/;"	m	struct:__anon638cdb230608	typeref:typename:uint32_t
gpioOn	pigpio.c	/^   uint32_t gpioOn       [ON_PER_IPAGE];$/;"	m	struct:__anon638cdb1e0208	typeref:typename:uint32_t[]	file:
gpioOn	pigpio.h	/^   uint32_t gpioOn;$/;"	m	struct:__anon638cdb230508	typeref:typename:uint32_t
gpioOn	pigpio.h	/^   uint32_t gpioOn;$/;"	m	struct:__anon638cdb230608	typeref:typename:uint32_t
gpioPWM	pigpio.c	/^int gpioPWM(unsigned gpio, unsigned val)$/;"	f	typeref:typename:int
gpioPulse_t	pigpio.h	/^} gpioPulse_t;$/;"	t	typeref:struct:__anon638cdb230508
gpioRead	pigpio.c	/^int gpioRead(unsigned gpio)$/;"	f	typeref:typename:int
gpioRead_Bits_0_31	pigpio.c	/^uint32_t gpioRead_Bits_0_31(void)$/;"	f	typeref:typename:uint32_t
gpioRead_Bits_32_53	pigpio.c	/^uint32_t gpioRead_Bits_32_53(void)$/;"	f	typeref:typename:uint32_t
gpioReg	pigpio.c	/^static volatile uint32_t * gpioReg = MAP_FAILED;$/;"	v	typeref:typename:volatile uint32_t *	file:
gpioReport_t	pigpio.h	/^} gpioReport_t;$/;"	t	typeref:struct:__anon638cdb230408
gpioRunScript	pigpio.c	/^int gpioRunScript(unsigned script_id, unsigned numParam, uint32_t *param)$/;"	f	typeref:typename:int
gpioSample_t	pigpio.h	/^} gpioSample_t;$/;"	t	typeref:struct:__anon638cdb230308
gpioScript	pigpio.c	/^static gpioScript_t     gpioScript [PI_MAX_SCRIPTS];$/;"	v	typeref:typename:gpioScript_t[]	file:
gpioScriptStatus	pigpio.c	/^int gpioScriptStatus(unsigned script_id, uint32_t *param)$/;"	f	typeref:typename:int
gpioScript_t	pigpio.c	/^} gpioScript_t;$/;"	t	typeref:struct:__anon638cdb1e0b08	file:
gpioSerialRead	pigpio.c	/^int gpioSerialRead(unsigned gpio, void *buf, size_t bufSize)$/;"	f	typeref:typename:int
gpioSerialReadClose	pigpio.c	/^int gpioSerialReadClose(unsigned gpio)$/;"	f	typeref:typename:int
gpioSerialReadInvert	pigpio.c	/^int gpioSerialReadInvert(unsigned gpio, unsigned invert)$/;"	f	typeref:typename:int
gpioSerialReadOpen	pigpio.c	/^int gpioSerialReadOpen(unsigned gpio, unsigned baud, unsigned data_bits)$/;"	f	typeref:typename:int
gpioServo	pigpio.c	/^int gpioServo(unsigned gpio, unsigned val)$/;"	f	typeref:typename:int
gpioSetAlertFunc	pigpio.c	/^int gpioSetAlertFunc(unsigned gpio, gpioAlertFunc_t f)$/;"	f	typeref:typename:int
gpioSetAlertFuncEx	pigpio.c	/^int gpioSetAlertFuncEx(unsigned gpio, gpioAlertFuncEx_t f, void *userdata)$/;"	f	typeref:typename:int
gpioSetGetSamplesFunc	pigpio.c	/^int gpioSetGetSamplesFunc(gpioGetSamplesFunc_t f, uint32_t bits)$/;"	f	typeref:typename:int
gpioSetGetSamplesFuncEx	pigpio.c	/^int gpioSetGetSamplesFuncEx(gpioGetSamplesFuncEx_t f,$/;"	f	typeref:typename:int
gpioSetISRFunc	pigpio.c	/^int gpioSetISRFunc($/;"	f	typeref:typename:int
gpioSetISRFuncEx	pigpio.c	/^int gpioSetISRFuncEx($/;"	f	typeref:typename:int
gpioSetMode	pigpio.c	/^int gpioSetMode(unsigned gpio, unsigned mode)$/;"	f	typeref:typename:int
gpioSetPWMfrequency	pigpio.c	/^int gpioSetPWMfrequency(unsigned gpio, unsigned frequency)$/;"	f	typeref:typename:int
gpioSetPWMrange	pigpio.c	/^int gpioSetPWMrange(unsigned gpio, unsigned range)$/;"	f	typeref:typename:int
gpioSetPad	pigpio.c	/^int gpioSetPad(unsigned pad, unsigned padStrength)$/;"	f	typeref:typename:int
gpioSetPullUpDown	pigpio.c	/^int gpioSetPullUpDown(unsigned gpio, unsigned pud)$/;"	f	typeref:typename:int
gpioSetSignalFunc	pigpio.c	/^int gpioSetSignalFunc(unsigned signum, gpioSignalFunc_t f)$/;"	f	typeref:typename:int
gpioSetSignalFuncEx	pigpio.c	/^int gpioSetSignalFuncEx(unsigned signum, gpioSignalFuncEx_t f,$/;"	f	typeref:typename:int
gpioSetTimerFunc	pigpio.c	/^int gpioSetTimerFunc(unsigned id, unsigned millis, gpioTimerFunc_t f)$/;"	f	typeref:typename:int
gpioSetTimerFuncEx	pigpio.c	/^int gpioSetTimerFuncEx(unsigned id, unsigned millis, gpioTimerFuncEx_t f,$/;"	f	typeref:typename:int
gpioSetWatchdog	pigpio.c	/^int gpioSetWatchdog(unsigned gpio, unsigned timeout)$/;"	f	typeref:typename:int
gpioSignal	pigpio.c	/^static gpioSignal_t     gpioSignal [PI_MAX_SIGNUM+1];$/;"	v	typeref:typename:gpioSignal_t[]	file:
gpioSignalFuncEx_t	pigpio.h	/^typedef void (*gpioSignalFuncEx_t) (int    signum,$/;"	t	typeref:typename:void (*)(int signum,void * userdata)
gpioSignalFunc_t	pigpio.h	/^typedef void (*gpioSignalFunc_t)   (int signum);$/;"	t	typeref:typename:void (*)(int signum)
gpioSignal_t	pigpio.c	/^} gpioSignal_t;$/;"	t	typeref:struct:__anon638cdb1e0808	file:
gpioSleep	pigpio.c	/^int gpioSleep(unsigned timetype, int seconds, int micros)$/;"	f	typeref:typename:int
gpioStartThread	pigpio.c	/^pthread_t *gpioStartThread(gpioThreadFunc_t f, void *userdata)$/;"	f	typeref:typename:pthread_t *
gpioStats	pigpio.c	/^static volatile gpioStats_t gpioStats;$/;"	v	typeref:typename:volatile gpioStats_t	file:
gpioStats_t	pigpio.c	/^} gpioStats_t;$/;"	t	typeref:struct:__anon638cdb1e1208	file:
gpioStopScript	pigpio.c	/^int gpioStopScript(unsigned script_id)$/;"	f	typeref:typename:int
gpioStopThread	pigpio.c	/^void gpioStopThread(pthread_t *pth)$/;"	f	typeref:typename:void
gpioStoreScript	pigpio.c	/^int gpioStoreScript(char *script)$/;"	f	typeref:typename:int
gpioTerminate	pigpio.c	/^void gpioTerminate(void)$/;"	f	typeref:typename:void
gpioThreadFunc_t	pigpio.h	/^typedef void *(gpioThreadFunc_t) (void *);$/;"	t	typeref:typename:void * ()(void *)
gpioTick	pigpio.c	/^uint32_t gpioTick(void)$/;"	f	typeref:typename:uint32_t
gpioTime	pigpio.c	/^int gpioTime(unsigned timetype, int *seconds, int *micros)$/;"	f	typeref:typename:int
gpioTimer	pigpio.c	/^static gpioTimer_t      gpioTimer  [PI_MAX_TIMER+1];$/;"	v	typeref:typename:gpioTimer_t[]	file:
gpioTimerFuncEx_t	pigpio.h	/^typedef void (*gpioTimerFuncEx_t)  (void *userdata);$/;"	t	typeref:typename:void (*)(void * userdata)
gpioTimerFunc_t	pigpio.h	/^typedef void (*gpioTimerFunc_t)    (void);$/;"	t	typeref:typename:void (*)(void)
gpioTimer_t	pigpio.c	/^} gpioTimer_t;$/;"	t	typeref:struct:__anon638cdb1e0a08	file:
gpioTrigger	pigpio.c	/^int gpioTrigger(unsigned gpio, unsigned pulseLen, unsigned level)$/;"	f	typeref:typename:int
gpioUpdateScript	pigpio.c	/^int gpioUpdateScript(unsigned script_id, unsigned numParam, uint32_t *param)$/;"	f	typeref:typename:int
gpioVersion	pigpio.c	/^unsigned gpioVersion(void)$/;"	f	typeref:typename:unsigned
gpioWaveAddGeneric	pigpio.c	/^int gpioWaveAddGeneric(unsigned numPulses, gpioPulse_t *pulses)$/;"	f	typeref:typename:int
gpioWaveAddNew	pigpio.c	/^int gpioWaveAddNew(void)$/;"	f	typeref:typename:int
gpioWaveAddSerial	pigpio.c	/^int gpioWaveAddSerial$/;"	f	typeref:typename:int
gpioWaveChain	pigpio.c	/^int gpioWaveChain(char *buf, unsigned bufSize)$/;"	f	typeref:typename:int
gpioWaveClear	pigpio.c	/^int gpioWaveClear(void)$/;"	f	typeref:typename:int
gpioWaveCreate	pigpio.c	/^int gpioWaveCreate(void)$/;"	f	typeref:typename:int
gpioWaveCreatePad	pigpio.c	/^int gpioWaveCreatePad(int pctCB, int pctBOOL, int pctTOOL)$/;"	f	typeref:typename:int
gpioWaveDelete	pigpio.c	/^int gpioWaveDelete(unsigned wave_id)$/;"	f	typeref:typename:int
gpioWaveGetCbs	pigpio.c	/^int gpioWaveGetCbs(void)$/;"	f	typeref:typename:int
gpioWaveGetHighCbs	pigpio.c	/^int gpioWaveGetHighCbs(void)$/;"	f	typeref:typename:int
gpioWaveGetHighMicros	pigpio.c	/^int gpioWaveGetHighMicros(void)$/;"	f	typeref:typename:int
gpioWaveGetHighPulses	pigpio.c	/^int gpioWaveGetHighPulses(void)$/;"	f	typeref:typename:int
gpioWaveGetMaxCbs	pigpio.c	/^int gpioWaveGetMaxCbs(void)$/;"	f	typeref:typename:int
gpioWaveGetMaxMicros	pigpio.c	/^int gpioWaveGetMaxMicros(void)$/;"	f	typeref:typename:int
gpioWaveGetMaxPulses	pigpio.c	/^int gpioWaveGetMaxPulses(void)$/;"	f	typeref:typename:int
gpioWaveGetMicros	pigpio.c	/^int gpioWaveGetMicros(void)$/;"	f	typeref:typename:int
gpioWaveGetPulses	pigpio.c	/^int gpioWaveGetPulses(void)$/;"	f	typeref:typename:int
gpioWaveTxAt	pigpio.c	/^int gpioWaveTxAt(void)$/;"	f	typeref:typename:int
gpioWaveTxBusy	pigpio.c	/^int gpioWaveTxBusy(void)$/;"	f	typeref:typename:int
gpioWaveTxSend	pigpio.c	/^int gpioWaveTxSend(unsigned wave_id, unsigned wave_mode)$/;"	f	typeref:typename:int
gpioWaveTxStart	pigpio.c	/^int gpioWaveTxStart(unsigned wave_mode)$/;"	f	typeref:typename:int
gpioWaveTxStop	pigpio.c	/^int gpioWaveTxStop(void)$/;"	f	typeref:typename:int
gpioWrite	pigpio.c	/^int gpioWrite(unsigned gpio, unsigned level)$/;"	f	typeref:typename:int
gpioWrite_Bits_0_31_Clear	pigpio.c	/^int gpioWrite_Bits_0_31_Clear(uint32_t bits)$/;"	f	typeref:typename:int
gpioWrite_Bits_0_31_Set	pigpio.c	/^int gpioWrite_Bits_0_31_Set(uint32_t bits)$/;"	f	typeref:typename:int
gpioWrite_Bits_32_53_Clear	pigpio.c	/^int gpioWrite_Bits_32_53_Clear(uint32_t bits)$/;"	f	typeref:typename:int
gpioWrite_Bits_32_53_Set	pigpio.c	/^int gpioWrite_Bits_32_53_Set(uint32_t bits)$/;"	f	typeref:typename:int
gpio_read	pigpiod_if.c	/^int gpio_read(unsigned gpio)$/;"	f	typeref:typename:int
gpio_read	pigpiod_if2.c	/^int gpio_read(int pi, unsigned gpio)$/;"	f	typeref:typename:int
gpio_trigger	pigpiod_if.c	/^int gpio_trigger(unsigned user_gpio, unsigned pulseLen, uint32_t level)$/;"	f	typeref:typename:int
gpio_trigger	pigpiod_if2.c	/^int gpio_trigger(int pi, unsigned user_gpio, unsigned pulseLen, uint32_t level)$/;"	f	typeref:typename:int
gpio_write	pigpiod_if.c	/^int gpio_write(unsigned gpio, unsigned level)$/;"	f	typeref:typename:int
gpio_write	pigpiod_if2.c	/^int gpio_write(int pi, unsigned gpio, unsigned level)$/;"	f	typeref:typename:int
halfBit	pigpio.c	/^   uint32_t halfBit; \/* nanoseconds *\/$/;"	m	struct:__anon638cdb1e1508	typeref:typename:uint32_t	file:
handle	pigpio.c	/^   unsigned  handle;        \/* mbAllocateMemory() *\/$/;"	m	struct:__anon638cdb1e1c08	typeref:typename:unsigned	file:
hardware_PWM	pigpiod_if.c	/^int hardware_PWM(unsigned gpio, unsigned frequency, uint32_t dutycycle)$/;"	f	typeref:typename:int
hardware_PWM	pigpiod_if2.c	/^int hardware_PWM(int pi, unsigned gpio, unsigned frequency, uint32_t dutycycle)$/;"	f	typeref:typename:int
hardware_clock	pigpiod_if.c	/^int hardware_clock(unsigned gpio, unsigned frequency)$/;"	f	typeref:typename:int
hardware_clock	pigpiod_if2.c	/^int hardware_clock(int pi, unsigned gpio, unsigned frequency)$/;"	f	typeref:typename:int
hash_val	EXAMPLES/C/IR_RECEIVER/ir_hasher.c	/^   uint32_t hash_val;$/;"	m	struct:_Pi_Hasher_s	typeref:typename:uint32_t	file:
hash_val	EXAMPLES/CPP/IR_RECEIVER/ir_hasher.hpp	/^   uint32_t hash_val;$/;"	m	class:Hasher	typeref:typename:uint32_t
highCbs	pigpio.c	/^   uint32_t highCbs;$/;"	m	struct:__anon638cdb1e1408	typeref:typename:uint32_t	file:
highMicros	pigpio.c	/^   uint32_t highMicros;$/;"	m	struct:__anon638cdb1e1408	typeref:typename:uint32_t	file:
highPulses	pigpio.c	/^   uint32_t highPulses;$/;"	m	struct:__anon638cdb1e1408	typeref:typename:uint32_t	file:
hw_clk_freq	pigpio.c	/^static uint32_t hw_clk_freq[3];$/;"	v	typeref:typename:uint32_t[3]	file:
hw_clk_max_freq	pigpio.c	/^static volatile uint32_t hw_clk_max_freq = PI_HW_CLK_MAX_FREQ;$/;"	v	typeref:typename:volatile uint32_t	file:
hw_clk_min_freq	pigpio.c	/^static volatile uint32_t hw_clk_min_freq = PI_HW_CLK_MIN_FREQ;$/;"	v	typeref:typename:volatile uint32_t	file:
hw_pwm_duty	pigpio.c	/^static uint32_t hw_pwm_duty[2];$/;"	v	typeref:typename:uint32_t[2]	file:
hw_pwm_freq	pigpio.c	/^static uint32_t hw_pwm_freq[2];$/;"	v	typeref:typename:uint32_t[2]	file:
hw_pwm_max_freq	pigpio.c	/^static volatile uint32_t hw_pwm_max_freq = PI_HW_PWM_MAX_FREQ;$/;"	v	typeref:typename:volatile uint32_t	file:
hw_pwm_real_range	pigpio.c	/^static uint32_t hw_pwm_real_range[2];$/;"	v	typeref:typename:uint32_t[2]	file:
i2cBlockProcessCall	pigpio.c	/^int i2cBlockProcessCall($/;"	f	typeref:typename:int
i2cClose	pigpio.c	/^int i2cClose(unsigned handle)$/;"	f	typeref:typename:int
i2cInfo	pigpio.c	/^static i2cInfo_t        i2cInfo    [PI_I2C_SLOTS];$/;"	v	typeref:typename:i2cInfo_t[]	file:
i2cInfo_t	pigpio.c	/^} i2cInfo_t;$/;"	t	typeref:struct:__anon638cdb1e0f08	file:
i2cOpen	pigpio.c	/^int i2cOpen(unsigned i2cBus, unsigned i2cAddr, unsigned i2cFlags)$/;"	f	typeref:typename:int
i2cProcessCall	pigpio.c	/^int i2cProcessCall(unsigned handle, unsigned reg, unsigned wVal)$/;"	f	typeref:typename:int
i2cReadBlockData	pigpio.c	/^int i2cReadBlockData(unsigned handle, unsigned reg, char *buf)$/;"	f	typeref:typename:int
i2cReadByte	pigpio.c	/^int i2cReadByte(unsigned handle)$/;"	f	typeref:typename:int
i2cReadByteData	pigpio.c	/^int i2cReadByteData(unsigned handle, unsigned reg)$/;"	f	typeref:typename:int
i2cReadDevice	pigpio.c	/^int i2cReadDevice(unsigned handle, char *buf, unsigned count)$/;"	f	typeref:typename:int
i2cReadI2CBlockData	pigpio.c	/^int i2cReadI2CBlockData($/;"	f	typeref:typename:int
i2cReadWordData	pigpio.c	/^int i2cReadWordData(unsigned handle, unsigned reg)$/;"	f	typeref:typename:int
i2cSegments	pigpio.c	/^int i2cSegments(unsigned handle, pi_i2c_msg_t *segs, unsigned numSegs)$/;"	f	typeref:typename:int
i2cSwitchCombined	pigpio.c	/^void i2cSwitchCombined(int setting)$/;"	f	typeref:typename:void
i2cWriteBlockData	pigpio.c	/^int i2cWriteBlockData($/;"	f	typeref:typename:int
i2cWriteByte	pigpio.c	/^int i2cWriteByte(unsigned handle, unsigned bVal)$/;"	f	typeref:typename:int
i2cWriteByteData	pigpio.c	/^int i2cWriteByteData(unsigned handle, unsigned reg, unsigned bVal)$/;"	f	typeref:typename:int
i2cWriteDevice	pigpio.c	/^int i2cWriteDevice(unsigned handle, char *buf, unsigned count)$/;"	f	typeref:typename:int
i2cWriteI2CBlockData	pigpio.c	/^int i2cWriteI2CBlockData($/;"	f	typeref:typename:int
i2cWriteQuick	pigpio.c	/^int i2cWriteQuick(unsigned handle, unsigned bit)$/;"	f	typeref:typename:int
i2cWriteWordData	pigpio.c	/^int i2cWriteWordData(unsigned handle, unsigned reg, unsigned wVal)$/;"	f	typeref:typename:int
i2cZip	pigpio.c	/^int i2cZip($/;"	f	typeref:typename:int
i2c_block_process_call	pigpiod_if.c	/^int i2c_block_process_call($/;"	f	typeref:typename:int
i2c_block_process_call	pigpiod_if2.c	/^int i2c_block_process_call($/;"	f	typeref:typename:int
i2c_close	pigpiod_if.c	/^int i2c_close(unsigned handle)$/;"	f	typeref:typename:int
i2c_close	pigpiod_if2.c	/^int i2c_close(int pi, unsigned handle)$/;"	f	typeref:typename:int
i2c_open	pigpiod_if.c	/^int i2c_open(unsigned i2c_bus, unsigned i2c_addr, uint32_t i2c_flags)$/;"	f	typeref:typename:int
i2c_open	pigpiod_if2.c	/^int i2c_open(int pi, unsigned i2c_bus, unsigned i2c_addr, uint32_t i2c_flags)$/;"	f	typeref:typename:int
i2c_process_call	pigpiod_if.c	/^int i2c_process_call(unsigned handle, unsigned reg, uint32_t val)$/;"	f	typeref:typename:int
i2c_process_call	pigpiod_if2.c	/^int i2c_process_call(int pi, unsigned handle, unsigned reg, uint32_t val)$/;"	f	typeref:typename:int
i2c_read_block_data	pigpiod_if.c	/^int i2c_read_block_data(unsigned handle, unsigned reg, char *buf)$/;"	f	typeref:typename:int
i2c_read_block_data	pigpiod_if2.c	/^int i2c_read_block_data(int pi, unsigned handle, unsigned reg, char *buf)$/;"	f	typeref:typename:int
i2c_read_byte	pigpiod_if.c	/^int i2c_read_byte(unsigned handle)$/;"	f	typeref:typename:int
i2c_read_byte	pigpiod_if2.c	/^int i2c_read_byte(int pi, unsigned handle)$/;"	f	typeref:typename:int
i2c_read_byte_data	pigpiod_if.c	/^int i2c_read_byte_data(unsigned handle, unsigned reg)$/;"	f	typeref:typename:int
i2c_read_byte_data	pigpiod_if2.c	/^int i2c_read_byte_data(int pi, unsigned handle, unsigned reg)$/;"	f	typeref:typename:int
i2c_read_device	pigpiod_if.c	/^int i2c_read_device(unsigned handle, char *buf, unsigned count)$/;"	f	typeref:typename:int
i2c_read_device	pigpiod_if2.c	/^int i2c_read_device(int pi, unsigned handle, char *buf, unsigned count)$/;"	f	typeref:typename:int
i2c_read_i2c_block_data	pigpiod_if.c	/^int i2c_read_i2c_block_data($/;"	f	typeref:typename:int
i2c_read_i2c_block_data	pigpiod_if2.c	/^int i2c_read_i2c_block_data($/;"	f	typeref:typename:int
i2c_read_word_data	pigpiod_if.c	/^int i2c_read_word_data(unsigned handle, unsigned reg)$/;"	f	typeref:typename:int
i2c_read_word_data	pigpiod_if2.c	/^int i2c_read_word_data(int pi, unsigned handle, unsigned reg)$/;"	f	typeref:typename:int
i2c_write_block_data	pigpiod_if.c	/^int i2c_write_block_data($/;"	f	typeref:typename:int
i2c_write_block_data	pigpiod_if2.c	/^int i2c_write_block_data($/;"	f	typeref:typename:int
i2c_write_byte	pigpiod_if.c	/^int i2c_write_byte(unsigned handle, unsigned val)$/;"	f	typeref:typename:int
i2c_write_byte	pigpiod_if2.c	/^int i2c_write_byte(int pi, unsigned handle, unsigned val)$/;"	f	typeref:typename:int
i2c_write_byte_data	pigpiod_if.c	/^int i2c_write_byte_data(unsigned handle, unsigned reg, uint32_t val)$/;"	f	typeref:typename:int
i2c_write_byte_data	pigpiod_if2.c	/^int i2c_write_byte_data(int pi, unsigned handle, unsigned reg, uint32_t val)$/;"	f	typeref:typename:int
i2c_write_device	pigpiod_if.c	/^int i2c_write_device(unsigned handle, char *buf, unsigned count)$/;"	f	typeref:typename:int
i2c_write_device	pigpiod_if2.c	/^int i2c_write_device(int pi, unsigned handle, char *buf, unsigned count)$/;"	f	typeref:typename:int
i2c_write_i2c_block_data	pigpiod_if.c	/^int i2c_write_i2c_block_data($/;"	f	typeref:typename:int
i2c_write_i2c_block_data	pigpiod_if2.c	/^int i2c_write_i2c_block_data($/;"	f	typeref:typename:int
i2c_write_quick	pigpiod_if.c	/^int i2c_write_quick(unsigned handle, unsigned bit)$/;"	f	typeref:typename:int
i2c_write_quick	pigpiod_if2.c	/^int i2c_write_quick(int pi, unsigned handle, unsigned bit)$/;"	f	typeref:typename:int
i2c_write_word_data	pigpiod_if.c	/^int i2c_write_word_data(unsigned handle, unsigned reg, uint32_t val)$/;"	f	typeref:typename:int
i2c_write_word_data	pigpiod_if2.c	/^int i2c_write_word_data(int pi, unsigned handle, unsigned reg, uint32_t val)$/;"	f	typeref:typename:int
i2c_zip	pigpiod_if.c	/^int i2c_zip($/;"	f	typeref:typename:int
i2c_zip	pigpiod_if2.c	/^int i2c_zip($/;"	f	typeref:typename:int
id	pigpio.c	/^   unsigned id;$/;"	m	struct:__anon638cdb1e0a08	typeref:typename:unsigned	file:
id	pigpio.c	/^   unsigned id;$/;"	m	struct:__anon638cdb1e0b08	typeref:typename:unsigned	file:
id	pigpiod_if.c	/^   int id;$/;"	m	struct:callback_s	typeref:typename:int	file:
id	pigpiod_if2.c	/^   int id;$/;"	m	struct:callback_s	typeref:typename:int	file:
id	pigpiod_if2.c	/^   int id;$/;"	m	struct:evtCallback_s	typeref:typename:int	file:
ifFlags	pigpio.c	/^   unsigned ifFlags;$/;"	m	struct:__anon638cdb1e1308	typeref:typename:unsigned	file:
ifFlags	pigpiod.c	/^static unsigned ifFlags                = PI_DEFAULT_IF_FLAGS;$/;"	v	typeref:typename:unsigned	file:
ignore	pigpio.c	/^   int ignore;$/;"	m	struct:__anon638cdb1e0608	typeref:typename:int	file:
in_code	EXAMPLES/C/IR_RECEIVER/ir_hasher.c	/^   int in_code;$/;"	m	struct:_Pi_Hasher_s	typeref:typename:int	file:
in_code	EXAMPLES/C/WIEGAND_CODE/wiegand.c	/^   int in_code;$/;"	m	struct:_Pi_Wieg_s	typeref:typename:int	file:
in_code	EXAMPLES/CPP/IR_RECEIVER/ir_hasher.hpp	/^   int in_code;$/;"	m	class:Hasher	typeref:typename:int
in_code	EXAMPLES/CPP/WIEGAND_CODE/wiegand.hpp	/^   int mygpio_0, mygpio_1, mytimeout, in_code, bits;$/;"	m	class:Wiegand	typeref:typename:int
includedir	Makefile	/^includedir = $(prefix)\/include$/;"	m
info	pigpio.h	/^   uint32_t info;$/;"	m	struct:__anon638cdb230908	typeref:typename:uint32_t
initAllocDMAMem	pigpio.c	/^static int initAllocDMAMem(void)$/;"	f	typeref:typename:int	file:
initCheckLockFile	pigpio.c	/^static void initCheckLockFile(void)$/;"	f	typeref:typename:void	file:
initCheckPermitted	pigpio.c	/^static int initCheckPermitted(void)$/;"	f	typeref:typename:int	file:
initClearGlobals	pigpio.c	/^static void initClearGlobals(void)$/;"	f	typeref:typename:void	file:
initClock	pigpio.c	/^static void initClock(int mainClock)$/;"	f	typeref:typename:void	file:
initDMAgo	pigpio.c	/^static void initDMAgo(volatile uint32_t  *dmaAddr, uint32_t cbAddr)$/;"	f	typeref:typename:void	file:
initGrabLockFile	pigpio.c	/^static int initGrabLockFile(void)$/;"	f	typeref:typename:int	file:
initHWClk	pigpio.c	/^static void initHWClk$/;"	f	typeref:typename:void	file:
initInitialise	pigpio.c	/^int initInitialise(void)$/;"	f	typeref:typename:int
initKillDMA	pigpio.c	/^static void initKillDMA(volatile uint32_t *dmaAddr)$/;"	f	typeref:typename:void	file:
initMapMem	pigpio.c	/^static uint32_t * initMapMem(int fd, uint32_t addr, uint32_t len)$/;"	f	typeref:typename:uint32_t *	file:
initMboxBlock	pigpio.c	/^static int initMboxBlock(int block)$/;"	f	typeref:typename:int	file:
initOpts	EXAMPLES/C/COUNTER_1/freq_count_1.c	/^static int initOpts(int argc, char *argv[])$/;"	f	typeref:typename:int	file:
initOpts	EXAMPLES/C/COUNTER_2/freq_count_2.c	/^static int initOpts(int argc, char *argv[])$/;"	f	typeref:typename:int	file:
initOpts	pigpiod.c	/^static void initOpts(int argc, char *argv[])$/;"	f	typeref:typename:void	file:
initOpts	pigs.c	/^static int initOpts(int argc, char *argv[])$/;"	f	typeref:typename:int	file:
initPCM	pigpio.c	/^static void initPCM(unsigned bits)$/;"	f	typeref:typename:void	file:
initPWM	pigpio.c	/^static void initPWM(unsigned bits)$/;"	f	typeref:typename:void	file:
initPagemapBlock	pigpio.c	/^static int initPagemapBlock(int block)$/;"	f	typeref:typename:int	file:
initPeripherals	pigpio.c	/^static int initPeripherals(void)$/;"	f	typeref:typename:int	file:
initReleaseResources	pigpio.c	/^static void initReleaseResources(void)$/;"	f	typeref:typename:void	file:
initZaps	pigpio.c	/^static int initZaps$/;"	f	typeref:typename:int	file:
inited	pigpio.c	/^   int inited;$/;"	m	struct:__anon638cdb1e0708	typeref:typename:int	file:
inpFifo	pigpio.c	/^static FILE * inpFifo = NULL;$/;"	v	typeref:typename:FILE *	file:
install	Makefile	/^install:	$(ALL)$/;"	t
instr	command.h	/^   cmdInstr_t *instr;$/;"	m	struct:__anon3aaf009a0708	typeref:typename:cmdInstr_t *
instrs	command.h	/^   int instrs;$/;"	m	struct:__anon3aaf009a0708	typeref:typename:int
intCallback	pigpiod_if.c	/^static int intCallback(unsigned user_gpio, unsigned edge, void *f, void *user, int ex)$/;"	f	typeref:typename:int	file:
intCallback	pigpiod_if2.c	/^static int intCallback($/;"	f	typeref:typename:int	file:
intCmdIdx	command.c	/^static int intCmdIdx;$/;"	v	typeref:typename:int	file:
intCmdStr	command.c	/^static char intCmdStr[32];$/;"	v	typeref:typename:char[32]	file:
intEventCallback	pigpiod_if2.c	/^static int intEventCallback($/;"	f	typeref:typename:int	file:
intEventSetFunc	pigpio.c	/^static int intEventSetFunc($/;"	f	typeref:typename:int	file:
intGpioSetAlertFunc	pigpio.c	/^static int intGpioSetAlertFunc($/;"	f	typeref:typename:int	file:
intGpioSetISRFunc	pigpio.c	/^static int intGpioSetISRFunc($/;"	f	typeref:typename:int	file:
intGpioSetTimerFunc	pigpio.c	/^static int intGpioSetTimerFunc(unsigned id,$/;"	f	typeref:typename:int	file:
intNotifyBits	pigpio.c	/^static void intNotifyBits(void)$/;"	f	typeref:typename:void	file:
intScriptBits	pigpio.c	/^static void intScriptBits(void)$/;"	f	typeref:typename:void	file:
intScriptEventBits	pigpio.c	/^static void intScriptEventBits(void)$/;"	f	typeref:typename:void	file:
internals	pigpio.c	/^   uint32_t internals;$/;"	m	struct:__anon638cdb1e1308	typeref:typename:uint32_t	file:
invert	pigpio.c	/^   int      invert; \/* 0, 1 *\/$/;"	m	struct:__anon638cdb1e1508	typeref:typename:int	file:
is	pigpio.c	/^   uint8_t  is;$/;"	m	struct:__anon638cdb1e0408	typeref:typename:uint8_t	file:
lastGpio	EXAMPLES/C/ROTARY_ENCODER/rotary_encoder.c	/^   int lastGpio;$/;"	m	struct:_Pi_Renc_s	typeref:typename:int	file:
lastGpio	EXAMPLES/CPP/ROTARY_ENCODER/rotary_encoder.hpp	/^   int mygpioA, mygpioB, levA, levB, lastGpio;$/;"	m	class:re_decoder	typeref:typename:int
lastReportTick	pigpio.c	/^   uint32_t lastReportTick;$/;"	m	struct:__anon638cdb1e0d08	typeref:typename:uint32_t	file:
lateTicks	pigpio.c	/^   uint32_t lateTicks;$/;"	m	struct:__anon638cdb1e1208	typeref:typename:uint32_t	file:
len	pigpio.h	/^   uint16_t len;   \/* msg length          *\/$/;"	m	struct:__anon638cdb230a08	typeref:typename:uint16_t
length	pigpio.h	/^   uint32_t length;$/;"	m	struct:__anon638cdb230908	typeref:typename:uint32_t
levA	EXAMPLES/C/ROTARY_ENCODER/rotary_encoder.c	/^   int levA;$/;"	m	struct:_Pi_Renc_s	typeref:typename:int	file:
levA	EXAMPLES/CPP/ROTARY_ENCODER/rotary_encoder.hpp	/^   int mygpioA, mygpioB, levA, levB, lastGpio;$/;"	m	class:re_decoder	typeref:typename:int
levB	EXAMPLES/C/ROTARY_ENCODER/rotary_encoder.c	/^   int levB;$/;"	m	struct:_Pi_Renc_s	typeref:typename:int	file:
levB	EXAMPLES/CPP/ROTARY_ENCODER/rotary_encoder.hpp	/^   int mygpioA, mygpioB, levA, levB, lastGpio;$/;"	m	class:re_decoder	typeref:typename:int
level	pigpio.c	/^   int      level;$/;"	m	struct:__anon638cdb1e1508	typeref:typename:int	file:
level	pigpio.c	/^   uint32_t level        [LVS_PER_IPAGE];$/;"	m	struct:__anon638cdb1e0208	typeref:typename:uint32_t[]	file:
level	pigpio.h	/^   uint32_t level;$/;"	m	struct:__anon638cdb230308	typeref:typename:uint32_t
level	pigpio.h	/^   uint32_t level;$/;"	m	struct:__anon638cdb230408	typeref:typename:uint32_t
lib	Makefile	/^lib:	$(LIB)$/;"	t
libInitialised	pigpio.c	/^static int libInitialised = 0;$/;"	v	typeref:typename:int	file:
libStarted	pigpio.c	/^static struct timespec libStarted;$/;"	v	typeref:struct:timespec	file:
libdir	Makefile	/^libdir = $(prefix)\/lib$/;"	m
main	EXAMPLES/C/COUNTER_1/freq_count_1.c	/^int main(int argc, char *argv[])$/;"	f	typeref:typename:int
main	EXAMPLES/C/COUNTER_2/freq_count_2.c	/^int main(int argc, char *argv[])$/;"	f	typeref:typename:int
main	EXAMPLES/C/HALL_EFFECT_SENSOR/hall.c	/^int main(int argc, char *argv[])$/;"	f	typeref:typename:int
main	EXAMPLES/C/I2C_SNIFFER/pig2i2c.c	/^int main(int argc, char * argv[])$/;"	f	typeref:typename:int
main	EXAMPLES/C/IR_RECEIVER/test_ir_hasher.c	/^int main(int argc, char *argv[])$/;"	f	typeref:typename:int
main	EXAMPLES/C/PCF8591_YL-40/PCF8591.c	/^int main(int argc, char *argv[])$/;"	f	typeref:typename:int
main	EXAMPLES/C/POT_CAP_RECHARGE/pot_cap_charge.c	/^int main (int argc, char *argv[])$/;"	f	typeref:typename:int
main	EXAMPLES/C/ROTARY_ENCODER/test_rotary_encoder.c	/^int main(int argc, char *argv[])$/;"	f	typeref:typename:int
main	EXAMPLES/C/WIEGAND_CODE/test_wiegand.c	/^int main(int argc, char *argv[])$/;"	f	typeref:typename:int
main	EXAMPLES/CPP/IR_RECEIVER/test_ir_hasher.cpp	/^int main(int argc, char *argv[])$/;"	f	typeref:typename:int
main	EXAMPLES/CPP/ROTARY_ENCODER/test_rotary_encoder.cpp	/^int main(int argc, char *argv[])$/;"	f	typeref:typename:int
main	EXAMPLES/CPP/WIEGAND_CODE/test_wiegand.cpp	/^int main(int argc, char *argv[])$/;"	f	typeref:typename:int
main	pig2vcd.c	/^int main(int argc, char * argv[])$/;"	f	typeref:typename:int
main	pigpiod.c	/^int main(int argc, char **argv)$/;"	f	typeref:typename:int
main	pigs.c	/^int main(int argc , char *argv[])$/;"	f	typeref:typename:int
main	x_pigpio.c	/^int main(int argc, char *argv[])$/;"	f	typeref:typename:int
main	x_pigpiod_if.c	/^int main(int argc, char *argv[])$/;"	f	typeref:typename:int
main	x_pigpiod_if2.c	/^int main(int argc, char *argv[])$/;"	f	typeref:typename:int
mandir	Makefile	/^mandir = $(prefix)\/man$/;"	m
maxCbs	pigpio.c	/^   uint32_t maxCbs;$/;"	m	struct:__anon638cdb1e1408	typeref:typename:uint32_t	file:
maxEmit	pigpio.c	/^   uint32_t maxEmit;$/;"	m	struct:__anon638cdb1e1208	typeref:typename:uint32_t	file:
maxMicros	pigpio.c	/^   uint32_t maxMicros;$/;"	m	struct:__anon638cdb1e1408	typeref:typename:uint32_t	file:
maxPulses	pigpio.c	/^   uint32_t maxPulses;$/;"	m	struct:__anon638cdb1e1408	typeref:typename:uint32_t	file:
maxSamples	pigpio.c	/^   uint32_t maxSamples;$/;"	m	struct:__anon638cdb1e1208	typeref:typename:uint32_t	file:
max_emits	pigpio.c	/^   int      max_emits;$/;"	m	struct:__anon638cdb1e0d08	typeref:typename:int	file:
mbAllocateMemory	pigpio.c	/^static unsigned mbAllocateMemory($/;"	f	typeref:typename:unsigned	file:
mbClose	pigpio.c	/^static void mbClose(int fd)$/;"	f	typeref:typename:void	file:
mbCreate	pigpio.c	/^static int mbCreate(char *dev)$/;"	f	typeref:typename:int	file:
mbDMAAlloc	pigpio.c	/^static int mbDMAAlloc(DMAMem_t *DMAMemP, unsigned size, uint32_t pi_mem_flag)$/;"	f	typeref:typename:int	file:
mbDMAFree	pigpio.c	/^static void mbDMAFree(DMAMem_t *DMAMemP)$/;"	f	typeref:typename:void	file:
mbLockMemory	pigpio.c	/^static unsigned mbLockMemory(int fd, unsigned handle)$/;"	f	typeref:typename:unsigned	file:
mbMapMem	pigpio.c	/^static void *mbMapMem(unsigned base, unsigned size)$/;"	f	typeref:typename:void *	file:
mbOpen	pigpio.c	/^static int mbOpen(void)$/;"	f	typeref:typename:int	file:
mbProperty	pigpio.c	/^static int mbProperty(int fd, void *buf)$/;"	f	typeref:typename:int	file:
mbReleaseMemory	pigpio.c	/^static unsigned mbReleaseMemory(int fd, unsigned handle)$/;"	f	typeref:typename:unsigned	file:
mbUnlockMemory	pigpio.c	/^static unsigned mbUnlockMemory(int fd, unsigned handle)$/;"	f	typeref:typename:unsigned	file:
mbUnmapMem	pigpio.c	/^static int mbUnmapMem(void *addr, unsigned size)$/;"	f	typeref:typename:int	file:
memAllocMode	pigpio.c	/^   unsigned memAllocMode;$/;"	m	struct:__anon638cdb1e1308	typeref:typename:unsigned	file:
memAllocMode	pigpiod.c	/^static unsigned memAllocMode           = PI_DEFAULT_MEM_ALLOC_MODE;$/;"	v	typeref:typename:unsigned	file:
micros	pigpio.c	/^   uint32_t micros;$/;"	m	struct:__anon638cdb1e1408	typeref:typename:uint32_t	file:
millis	pigpio.c	/^   unsigned millis;$/;"	m	struct:__anon638cdb1e0a08	typeref:typename:unsigned	file:
miso	pigpio.h	/^   int miso;    \/* GPIO for MISO            *\/$/;"	m	struct:__anon638cdb230808	typeref:typename:int
mode	pigpio.c	/^   int      mode;$/;"	m	struct:__anon638cdb1e1808	typeref:typename:int	file:
mode	pigpio.c	/^   uint32_t mode;$/;"	m	struct:__anon638cdb1e0e08	typeref:typename:uint32_t	file:
monitorBits	pigpio.c	/^static volatile uint32_t monitorBits = 0;$/;"	v	typeref:typename:volatile uint32_t	file:
moreToDo	pigpio.c	/^   uint32_t moreToDo;$/;"	m	struct:__anon638cdb1e1208	typeref:typename:uint32_t	file:
mosi	pigpio.h	/^   int mosi;    \/* GPIO for MOSI            *\/$/;"	m	struct:__anon638cdb230808	typeref:typename:int
msgs	pigpio.c	/^   pi_i2c_msg_t *msgs; \/* pointers to pi_i2c_msgs *\/$/;"	m	struct:__anon638cdb1e1a08	typeref:typename:pi_i2c_msg_t *	file:
mutex	pigpio.c	/^   pthread_mutex_t mutex;$/;"	m	struct:__anon638cdb1e1808	typeref:typename:pthread_mutex_t	file:
myBuf2Str	pigpio.c	/^static char *myBuf2Str(unsigned count, char *buf)$/;"	f	typeref:typename:char *	file:
myClearGpioOff	pigpio.c	/^static void myClearGpioOff(unsigned gpio, int pos)$/;"	f	typeref:typename:void	file:
myClearGpioOn	pigpio.c	/^static void myClearGpioOn(unsigned gpio, int pos)$/;"	f	typeref:typename:void	file:
myCreatePipe	pigpio.c	/^static void myCreatePipe(char * name, int perm)$/;"	f	typeref:typename:void	file:
myDoCommand	pigpio.c	/^static int myDoCommand(uintptr_t *p, unsigned bufSize, char *buf)$/;"	f	typeref:typename:int	file:
myGetLevel	pigpio.c	/^static uint32_t myGetLevel(int pos)$/;"	f	typeref:typename:uint32_t	file:
myGetTick	pigpio.c	/^static uint32_t myGetTick(int pos)$/;"	f	typeref:typename:uint32_t	file:
myGpioDelay	pigpio.c	/^static uint32_t myGpioDelay(uint32_t micros)$/;"	f	typeref:typename:uint32_t	file:
myGpioRead	pigpio.c	/^static int myGpioRead(unsigned gpio)$/;"	f	typeref:typename:int	file:
myGpioSetMode	pigpio.c	/^static void myGpioSetMode(unsigned gpio, unsigned mode)$/;"	f	typeref:typename:void	file:
myGpioSetPwm	pigpio.c	/^static void myGpioSetPwm(unsigned gpio, int oldVal, int newVal)$/;"	f	typeref:typename:void	file:
myGpioSetServo	pigpio.c	/^static void myGpioSetServo(unsigned gpio, int oldVal, int newVal)$/;"	f	typeref:typename:void	file:
myGpioSleep	pigpio.c	/^static void myGpioSleep(int seconds, int micros)$/;"	f	typeref:typename:void	file:
myGpioWrite	pigpio.c	/^static void myGpioWrite(unsigned gpio, unsigned level)$/;"	f	typeref:typename:void	file:
myI2CGetPar	pigpio.c	/^static int myI2CGetPar(char *inBuf, int *inPos, int inLen, int *esc)$/;"	f	typeref:typename:int	file:
myLvsPageSlot	pigpio.c	/^static void myLvsPageSlot(int pos, int * page, int * slot)$/;"	f	typeref:typename:void	file:
myOffPageSlot	pigpio.c	/^static void myOffPageSlot(int pos, int * page, int * slot)$/;"	f	typeref:typename:void	file:
myPathBad	pigpio.c	/^int myPathBad(char *name)$/;"	f	typeref:typename:int
myPermit	pigpio.c	/^static int myPermit(unsigned gpio)$/;"	f	typeref:typename:int	file:
myScriptNameValid	pigpio.c	/^int myScriptNameValid(char *name)$/;"	f	typeref:typename:int
mySetGpioOff	pigpio.c	/^static void mySetGpioOff(unsigned gpio, int pos)$/;"	f	typeref:typename:void	file:
mySetGpioOn	pigpio.c	/^static void mySetGpioOn(unsigned gpio, int pos)$/;"	f	typeref:typename:void	file:
myTckPageSlot	pigpio.c	/^static void myTckPageSlot(int pos, int * page, int * slot)$/;"	f	typeref:typename:void	file:
myTimeStamp	pigpio.c	/^static char * myTimeStamp()$/;"	f	typeref:typename:char *	file:
my_i2c_rdwr_ioctl_data_t	pigpio.c	/^} my_i2c_rdwr_ioctl_data_t;$/;"	t	typeref:struct:__anon638cdb1e1a08	file:
my_smbus_access	pigpio.c	/^static int my_smbus_access($/;"	f	typeref:typename:int	file:
my_smbus_data	pigpio.c	/^union my_smbus_data$/;"	u	file:
my_smbus_ioctl_data	pigpio.c	/^struct my_smbus_ioctl_data$/;"	s	file:
mycallback	EXAMPLES/C/WIEGAND_CODE/wiegand.c	/^   Pi_Wieg_CB_t mycallback;$/;"	m	struct:_Pi_Wieg_s	typeref:typename:Pi_Wieg_CB_t	file:
mycallback	EXAMPLES/CPP/IR_RECEIVER/ir_hasher.hpp	/^   HasherCB_t mycallback;$/;"	m	class:Hasher	typeref:typename:HasherCB_t
mycallback	EXAMPLES/CPP/ROTARY_ENCODER/rotary_encoder.hpp	/^   re_decoderCB_t mycallback;$/;"	m	class:re_decoder	typeref:typename:re_decoderCB_t
mycallback	EXAMPLES/CPP/WIEGAND_CODE/wiegand.hpp	/^   WiegandCB_t mycallback;$/;"	m	class:Wiegand	typeref:typename:WiegandCB_t
mygpio	EXAMPLES/CPP/IR_RECEIVER/ir_hasher.hpp	/^   int mygpio, mytimeout;$/;"	m	class:Hasher	typeref:typename:int
mygpioA	EXAMPLES/CPP/ROTARY_ENCODER/rotary_encoder.hpp	/^   int mygpioA, mygpioB, levA, levB, lastGpio;$/;"	m	class:re_decoder	typeref:typename:int
mygpioB	EXAMPLES/CPP/ROTARY_ENCODER/rotary_encoder.hpp	/^   int mygpioA, mygpioB, levA, levB, lastGpio;$/;"	m	class:re_decoder	typeref:typename:int
mygpio_0	EXAMPLES/C/WIEGAND_CODE/wiegand.c	/^   int mygpio_0;$/;"	m	struct:_Pi_Wieg_s	typeref:typename:int	file:
mygpio_0	EXAMPLES/CPP/WIEGAND_CODE/wiegand.hpp	/^   int mygpio_0, mygpio_1, mytimeout, in_code, bits;$/;"	m	class:Wiegand	typeref:typename:int
mygpio_1	EXAMPLES/C/WIEGAND_CODE/wiegand.c	/^   int mygpio_1;$/;"	m	struct:_Pi_Wieg_s	typeref:typename:int	file:
mygpio_1	EXAMPLES/CPP/WIEGAND_CODE/wiegand.hpp	/^   int mygpio_0, mygpio_1, mytimeout, in_code, bits;$/;"	m	class:Wiegand	typeref:typename:int
mytimeout	EXAMPLES/C/WIEGAND_CODE/wiegand.c	/^   int mytimeout;$/;"	m	struct:_Pi_Wieg_s	typeref:typename:int	file:
mytimeout	EXAMPLES/CPP/IR_RECEIVER/ir_hasher.hpp	/^   int mygpio, mytimeout;$/;"	m	class:Hasher	typeref:typename:int
mytimeout	EXAMPLES/CPP/WIEGAND_CODE/wiegand.hpp	/^   int mygpio_0, mygpio_1, mytimeout, in_code, bits;$/;"	m	class:Wiegand	typeref:typename:int
nFilterBits	pigpio.c	/^static volatile uint32_t nFilterBits = 0;$/;"	v	typeref:typename:volatile uint32_t	file:
name	command.h	/^   char *name; \/* command name              *\/$/;"	m	struct:__anon3aaf009a0408	typeref:typename:char *
next	pigpio.h	/^   uint32_t next;$/;"	m	struct:__anon638cdb230908	typeref:typename:uint32_t
next	pigpiod_if.c	/^   callback_t *next;$/;"	m	struct:callback_s	typeref:typename:callback_t *	file:
next	pigpiod_if2.c	/^   callback_t *next;$/;"	m	struct:callback_s	typeref:typename:callback_t *	file:
next	pigpiod_if2.c	/^   evtCallback_t *next;$/;"	m	struct:evtCallback_s	typeref:typename:evtCallback_t *	file:
nextBitDiff	pigpio.c	/^   uint32_t nextBitDiff; \/* nanoseconds *\/$/;"	m	struct:__anon638cdb1e1508	typeref:typename:uint32_t	file:
nfActive	pigpio.c	/^   int      nfActive;$/;"	m	struct:__anon638cdb1e0508	typeref:typename:int	file:
nfActiveUs	pigpio.c	/^   int      nfActiveUs;$/;"	m	struct:__anon638cdb1e0508	typeref:typename:int	file:
nfLBitV	pigpio.c	/^   uint32_t nfLBitV;$/;"	m	struct:__anon638cdb1e0508	typeref:typename:uint32_t	file:
nfRBitV	pigpio.c	/^   uint32_t nfRBitV;$/;"	m	struct:__anon638cdb1e0508	typeref:typename:uint32_t	file:
nfSteadyUs	pigpio.c	/^   int      nfSteadyUs;$/;"	m	struct:__anon638cdb1e0508	typeref:typename:int	file:
nfTick1	pigpio.c	/^   uint32_t nfTick1;$/;"	m	struct:__anon638cdb1e0508	typeref:typename:uint32_t	file:
nfTick2	pigpio.c	/^   uint32_t nfTick2;$/;"	m	struct:__anon638cdb1e0508	typeref:typename:uint32_t	file:
nmsgs	pigpio.c	/^   uint32_t     nmsgs; \/* number of pi_i2c_msgs *\/$/;"	m	struct:__anon638cdb1e1a08	typeref:typename:uint32_t	file:
notifyBits	pigpio.c	/^static volatile uint32_t notifyBits  = 0;$/;"	v	typeref:typename:volatile uint32_t	file:
notifyMutex	pigpio.c	/^static void notifyMutex(int lock)$/;"	f	typeref:typename:void	file:
notify_begin	pigpiod_if.c	/^int notify_begin(unsigned handle, uint32_t bits)$/;"	f	typeref:typename:int
notify_begin	pigpiod_if2.c	/^int notify_begin(int pi, unsigned handle, uint32_t bits)$/;"	f	typeref:typename:int
notify_close	pigpiod_if.c	/^int notify_close(unsigned handle)$/;"	f	typeref:typename:int
notify_close	pigpiod_if2.c	/^int notify_close(int pi, unsigned handle)$/;"	f	typeref:typename:int
notify_open	pigpiod_if.c	/^int notify_open(void)$/;"	f	typeref:typename:int
notify_open	pigpiod_if2.c	/^int notify_open(int pi)$/;"	f	typeref:typename:int
notify_pause	pigpiod_if.c	/^int notify_pause(unsigned handle)$/;"	f	typeref:typename:int
notify_pause	pigpiod_if2.c	/^int notify_pause(int pi, unsigned handle)$/;"	f	typeref:typename:int
num	EXAMPLES/C/WIEGAND_CODE/wiegand.c	/^   uint32_t num;$/;"	m	struct:_Pi_Wieg_s	typeref:typename:uint32_t	file:
num	EXAMPLES/CPP/WIEGAND_CODE/wiegand.hpp	/^   uint32_t num;$/;"	m	class:Wiegand	typeref:typename:uint32_t
numBOOL	pigpio.h	/^   uint16_t numBOOL;$/;"	m	struct:__anon638cdb230708	typeref:typename:uint16_t
numCB	pigpio.h	/^   uint16_t numCB;$/;"	m	struct:__anon638cdb230708	typeref:typename:uint16_t
numSamples	pigpio.c	/^   uint32_t numSamples;$/;"	m	struct:__anon638cdb1e1208	typeref:typename:uint32_t	file:
numSockNetAddr	pigpio.c	/^static int numSockNetAddr = 0;$/;"	v	typeref:typename:int	file:
numSockNetAddr	pigpiod.c	/^static int numSockNetAddr = 0;$/;"	v	typeref:typename:int	file:
numTOOL	pigpio.h	/^   uint16_t numTOOL;$/;"	m	struct:__anon638cdb230708	typeref:typename:uint16_t
old_mode_ace0	pigpio.c	/^static unsigned old_mode_ace0;$/;"	v	typeref:typename:unsigned	file:
old_mode_ace1	pigpio.c	/^static unsigned old_mode_ace1;$/;"	v	typeref:typename:unsigned	file:
old_mode_ace2	pigpio.c	/^static unsigned old_mode_ace2;$/;"	v	typeref:typename:unsigned	file:
old_mode_amiso	pigpio.c	/^static unsigned old_mode_amiso;$/;"	v	typeref:typename:unsigned	file:
old_mode_amosi	pigpio.c	/^static unsigned old_mode_amosi;$/;"	v	typeref:typename:unsigned	file:
old_mode_asclk	pigpio.c	/^static unsigned old_mode_asclk;$/;"	v	typeref:typename:unsigned	file:
old_mode_ce0	pigpio.c	/^static unsigned old_mode_ce0;$/;"	v	typeref:typename:unsigned	file:
old_mode_ce1	pigpio.c	/^static unsigned old_mode_ce1;$/;"	v	typeref:typename:unsigned	file:
old_mode_miso	pigpio.c	/^static unsigned old_mode_miso;$/;"	v	typeref:typename:unsigned	file:
old_mode_mosi	pigpio.c	/^static unsigned old_mode_mosi;$/;"	v	typeref:typename:unsigned	file:
old_mode_sclk	pigpio.c	/^static unsigned old_mode_sclk;$/;"	v	typeref:typename:unsigned	file:
old_spi_clk	pigpio.c	/^static uint32_t old_spi_clk;$/;"	v	typeref:typename:uint32_t	file:
old_spi_cntl0	pigpio.c	/^static uint32_t old_spi_cntl0;$/;"	v	typeref:typename:uint32_t	file:
old_spi_cntl1	pigpio.c	/^static uint32_t old_spi_cntl1;$/;"	v	typeref:typename:uint32_t	file:
old_spi_cs	pigpio.c	/^static uint32_t old_spi_cs;$/;"	v	typeref:typename:uint32_t	file:
openSocket	pigs.c	/^static int openSocket(void)$/;"	f	typeref:typename:int	file:
opt	command.h	/^   int8_t opt[4];$/;"	m	struct:__anon3aaf009a0308	typeref:typename:int8_t[4]
opt	command.h	/^   int8_t opt[4];$/;"	m	struct:__anon3aaf009a0608	typeref:typename:int8_t[4]
outFifo	pigpio.c	/^static FILE * outFifo = NULL;$/;"	v	typeref:typename:FILE *	file:
p	command.h	/^   uintptr_t p[5]; \/\/these are sometimes converted to pointers, so presumablly they sometimes /;"	m	struct:__anon3aaf009a0608	typeref:typename:uintptr_t[5]
p1	command.h	/^   uint32_t p1;$/;"	m	struct:__anon3aaf009a0108	typeref:typename:uint32_t
p2	command.h	/^   uint32_t p2;$/;"	m	struct:__anon3aaf009a0108	typeref:typename:uint32_t
p3	command.h	/^      uint32_t p3;$/;"	m	union:__anon3aaf009a0108::__anon3aaf009a020a	typeref:typename:uint32_t
pad	pigpio.c	/^   uint32_t pad          [PAD_PER_IPAGE];$/;"	m	struct:__anon638cdb1e0208	typeref:typename:uint32_t[]	file:
pad	pigpio.c	/^   uint8_t  pad;$/;"	m	struct:__anon638cdb1e0408	typeref:typename:uint8_t	file:
pad	pigpio.h	/^   uint32_t pad[2];$/;"	m	struct:__anon638cdb230908	typeref:typename:uint32_t[2]
padsReg	pigpio.c	/^static volatile uint32_t * padsReg = MAP_FAILED;$/;"	v	typeref:typename:volatile uint32_t *	file:
par	command.h	/^   int *par;$/;"	m	struct:__anon3aaf009a0708	typeref:typename:int *
parse_I2C	EXAMPLES/C/I2C_SNIFFER/pig2i2c.c	/^void parse_I2C(int SCL, int SDA)$/;"	f	typeref:typename:void
pcmReg	pigpio.c	/^static volatile uint32_t * pcmReg  = MAP_FAILED;$/;"	v	typeref:typename:volatile uint32_t *	file:
periphData	pigpio.c	/^   uint32_t periphData;$/;"	m	struct:__anon638cdb1e0208	typeref:typename:uint32_t	file:
periphData	pigpio.c	/^   uint32_t periphData;$/;"	m	struct:__anon638cdb1e0308	typeref:typename:uint32_t	file:
pi	pigpiod_if2.c	/^   int pi;$/;"	m	struct:callback_s	typeref:typename:int	file:
pi	pigpiod_if2.c	/^   int pi;$/;"	m	struct:evtCallback_s	typeref:typename:int	file:
piCores	pigpio.c	/^static volatile uint32_t piCores       = 0;$/;"	v	typeref:typename:volatile uint32_t	file:
pi_dram_bus	pigpio.c	/^static volatile uint32_t pi_dram_bus   = 0x40000000;$/;"	v	typeref:typename:volatile uint32_t	file:
pi_i2c_msg_t	pigpio.h	/^} pi_i2c_msg_t;$/;"	t	typeref:struct:__anon638cdb230a08
pi_is_2711	pigpio.c	/^static volatile uint32_t pi_is_2711    = 0;$/;"	v	typeref:typename:volatile uint32_t	file:
pi_ispi	pigpio.c	/^static volatile uint32_t pi_ispi       = 0;$/;"	v	typeref:typename:volatile uint32_t	file:
pi_mem_flag	pigpio.c	/^static volatile uint32_t pi_mem_flag   = 0x0C;$/;"	v	typeref:typename:volatile uint32_t	file:
pi_peri_phys	pigpio.c	/^static volatile uint32_t pi_peri_phys  = 0x20000000;$/;"	v	typeref:typename:volatile uint32_t	file:
pig2vcd	Makefile	/^pig2vcd:	pig2vcd.o$/;"	t
pig2vcd.o	Makefile	/^pig2vcd.o: pig2vcd.c pigpio.h$/;"	t
pigifError_t	pigpiod_if.h	/^} pigifError_t;$/;"	t	typeref:enum:__anon448ab6150103
pigifError_t	pigpiod_if2.h	/^} pigifError_t;$/;"	t	typeref:enum:__anond5e182a70103
pigif_bad_callback	pigpiod_if.h	/^   pigif_bad_callback       = -2008,$/;"	e	enum:__anon448ab6150103
pigif_bad_callback	pigpiod_if2.h	/^   pigif_bad_callback       = -2008,$/;"	e	enum:__anond5e182a70103
pigif_bad_connect	pigpiod_if.h	/^   pigif_bad_connect        = -2003,$/;"	e	enum:__anon448ab6150103
pigif_bad_connect	pigpiod_if2.h	/^   pigif_bad_connect        = -2003,$/;"	e	enum:__anond5e182a70103
pigif_bad_getaddrinfo	pigpiod_if.h	/^   pigif_bad_getaddrinfo    = -2002,$/;"	e	enum:__anon448ab6150103
pigif_bad_getaddrinfo	pigpiod_if2.h	/^   pigif_bad_getaddrinfo    = -2002,$/;"	e	enum:__anond5e182a70103
pigif_bad_malloc	pigpiod_if.h	/^   pigif_bad_malloc         = -2007,$/;"	e	enum:__anon448ab6150103
pigif_bad_malloc	pigpiod_if2.h	/^   pigif_bad_malloc         = -2007,$/;"	e	enum:__anond5e182a70103
pigif_bad_noib	pigpiod_if.h	/^   pigif_bad_noib           = -2005,$/;"	e	enum:__anon448ab6150103
pigif_bad_noib	pigpiod_if2.h	/^   pigif_bad_noib           = -2005,$/;"	e	enum:__anond5e182a70103
pigif_bad_recv	pigpiod_if.h	/^   pigif_bad_recv           = -2001,$/;"	e	enum:__anon448ab6150103
pigif_bad_recv	pigpiod_if2.h	/^   pigif_bad_recv           = -2001,$/;"	e	enum:__anond5e182a70103
pigif_bad_send	pigpiod_if.h	/^   pigif_bad_send           = -2000,$/;"	e	enum:__anon448ab6150103
pigif_bad_send	pigpiod_if2.h	/^   pigif_bad_send           = -2000,$/;"	e	enum:__anond5e182a70103
pigif_bad_socket	pigpiod_if.h	/^   pigif_bad_socket         = -2004,$/;"	e	enum:__anon448ab6150103
pigif_bad_socket	pigpiod_if2.h	/^   pigif_bad_socket         = -2004,$/;"	e	enum:__anond5e182a70103
pigif_callback_not_found	pigpiod_if.h	/^   pigif_callback_not_found = -2010,$/;"	e	enum:__anon448ab6150103
pigif_callback_not_found	pigpiod_if2.h	/^   pigif_callback_not_found = -2010,$/;"	e	enum:__anond5e182a70103
pigif_duplicate_callback	pigpiod_if.h	/^   pigif_duplicate_callback = -2006,$/;"	e	enum:__anon448ab6150103
pigif_duplicate_callback	pigpiod_if2.h	/^   pigif_duplicate_callback = -2006,$/;"	e	enum:__anond5e182a70103
pigif_notify_failed	pigpiod_if.h	/^   pigif_notify_failed      = -2009,$/;"	e	enum:__anon448ab6150103
pigif_notify_failed	pigpiod_if2.h	/^   pigif_notify_failed      = -2009,$/;"	e	enum:__anond5e182a70103
pigif_too_many_pis	pigpiod_if2.h	/^   pigif_too_many_pis       = -2012,$/;"	e	enum:__anond5e182a70103
pigif_unconnected_pi	pigpiod_if2.h	/^   pigif_unconnected_pi     = -2011,$/;"	e	enum:__anond5e182a70103
pigpio.o	Makefile	/^pigpio.o: pigpio.c pigpio.h command.h custom.cext$/;"	t
pigpioOpenSocket	pigpiod_if.c	/^static int pigpioOpenSocket(char *addr, char *port)$/;"	f	typeref:typename:int	file:
pigpioOpenSocket	pigpiod_if2.c	/^static int pigpioOpenSocket(const char *addrStr, const char *portStr)$/;"	f	typeref:typename:int	file:
pigpio_command	pigpiod_if.c	/^static int pigpio_command(int fd, int command, int p1, int p2, int rl)$/;"	f	typeref:typename:int	file:
pigpio_command	pigpiod_if2.c	/^static int pigpio_command(int pi, int command, int p1, int p2, int rl)$/;"	f	typeref:typename:int	file:
pigpio_command_ext	pigpiod_if.c	/^static int pigpio_command_ext$/;"	f	typeref:typename:int	file:
pigpio_command_ext	pigpiod_if2.c	/^static int pigpio_command_ext$/;"	f	typeref:typename:int	file:
pigpio_error	pigpiod_if.c	/^char *pigpio_error(int errnum)$/;"	f	typeref:typename:char *
pigpio_error	pigpiod_if2.c	/^char *pigpio_error(int errnum)$/;"	f	typeref:typename:char *
pigpio_notify	pigpiod_if2.c	/^static int pigpio_notify(int pi)$/;"	f	typeref:typename:int	file:
pigpio_start	pigpiod_if.c	/^int pigpio_start(char *addrStr, char *portStr)$/;"	f	typeref:typename:int
pigpio_start	pigpiod_if2.c	/^int pigpio_start(const char *addrStr, const char *portStr)$/;"	f	typeref:typename:int
pigpio_stop	pigpiod_if.c	/^void pigpio_stop(void)$/;"	f	typeref:typename:void
pigpio_stop	pigpiod_if2.c	/^void pigpio_stop(int pi)$/;"	f	typeref:typename:void
pigpiod	Makefile	/^pigpiod:	pigpiod.o $(LIB1)$/;"	t
pigpiod.o	Makefile	/^pigpiod.o: pigpiod.c pigpio.h$/;"	t
pigpiod_if.o	Makefile	/^pigpiod_if.o: pigpiod_if.c pigpio.h command.h pigpiod_if.h$/;"	t
pigpiod_if2.o	Makefile	/^pigpiod_if2.o: pigpiod_if2.c pigpio.h command.h pigpiod_if2.h$/;"	t
pigpiod_if_version	pigpiod_if.c	/^unsigned pigpiod_if_version(void)$/;"	f	typeref:typename:unsigned
pigpiod_if_version	pigpiod_if2.c	/^unsigned pigpiod_if_version(void)$/;"	f	typeref:typename:unsigned
pigs	Makefile	/^pigs:		pigs.o command.o$/;"	t
pigs.o	Makefile	/^pigs.o: pigs.c pigpio.h command.h pigs.h$/;"	t
pipe	pigpio.c	/^   int      pipe;$/;"	m	struct:__anon638cdb1e0d08	typeref:typename:int	file:
prefix	Makefile	/^prefix = \/usr\/local$/;"	m
prev	pigpiod_if.c	/^   callback_t *prev;$/;"	m	struct:callback_s	typeref:typename:callback_t *	file:
prev	pigpiod_if2.c	/^   callback_t *prev;$/;"	m	struct:callback_s	typeref:typename:callback_t *	file:
prev	pigpiod_if2.c	/^   evtCallback_t *prev;$/;"	m	struct:evtCallback_s	typeref:typename:evtCallback_t *	file:
printFlags	pigs.c	/^int printFlags = 0;$/;"	v	typeref:typename:int
print_result	pigs.c	/^void print_result(int sock, int rv, cmdCmd_t cmd)$/;"	f	typeref:typename:void
pth	pigpio.c	/^   pthread_t *pth;$/;"	m	struct:__anon638cdb1e0708	typeref:typename:pthread_t *	file:
pthAlert	pigpio.c	/^static pthread_t pthAlert;$/;"	v	typeref:typename:pthread_t	file:
pthAlertRunning	pigpio.c	/^static int pthAlertRunning  = PI_THREAD_NONE;$/;"	v	typeref:typename:int	file:
pthAlertThread	pigpio.c	/^static void * pthAlertThread(void *x)$/;"	f	typeref:typename:void *	file:
pthCond	pigpio.c	/^   pthread_cond_t pthCond;$/;"	m	struct:__anon638cdb1e0b08	typeref:typename:pthread_cond_t	file:
pthFifo	pigpio.c	/^static pthread_t pthFifo;$/;"	v	typeref:typename:pthread_t	file:
pthFifoRunning	pigpio.c	/^static int pthFifoRunning   = PI_THREAD_NONE;$/;"	v	typeref:typename:int	file:
pthFifoThread	pigpio.c	/^static void * pthFifoThread(void *x)$/;"	f	typeref:typename:void *	file:
pthISRThread	pigpio.c	/^static void *pthISRThread(void *x)$/;"	f	typeref:typename:void *	file:
pthId	pigpio.c	/^   pthread_t pthId;$/;"	m	struct:__anon638cdb1e0a08	typeref:typename:pthread_t	file:
pthIdp	pigpio.c	/^   pthread_t *pthIdp;$/;"	m	struct:__anon638cdb1e0b08	typeref:typename:pthread_t *	file:
pthMutex	pigpio.c	/^   pthread_mutex_t pthMutex;$/;"	m	struct:__anon638cdb1e0b08	typeref:typename:pthread_mutex_t	file:
pthNotify	pigpiod_if.c	/^static pthread_t *pthNotify;$/;"	v	typeref:typename:pthread_t *	file:
pthNotifyThread	pigpiod_if.c	/^static void *pthNotifyThread(void *x)$/;"	f	typeref:typename:void *	file:
pthNotifyThread	pigpiod_if2.c	/^static void *pthNotifyThread(void *x)$/;"	f	typeref:typename:void *	file:
pthScript	pigpio.c	/^static void *pthScript(void *x)$/;"	f	typeref:typename:void *	file:
pthSocket	pigpio.c	/^static pthread_t pthSocket;$/;"	v	typeref:typename:pthread_t	file:
pthSocketRunning	pigpio.c	/^static int pthSocketRunning = PI_THREAD_NONE;$/;"	v	typeref:typename:int	file:
pthSocketThread	pigpio.c	/^static void * pthSocketThread(void *x)$/;"	f	typeref:typename:void *	file:
pthSocketThreadHandler	pigpio.c	/^static void *pthSocketThreadHandler(void *fdC)$/;"	f	typeref:typename:void *	file:
pthTimerTick	pigpio.c	/^static void * pthTimerTick(void *x)$/;"	f	typeref:typename:void *	file:
ptr	pigpio.h	/^   void *ptr;$/;"	m	struct:__anon638cdb230208	typeref:typename:void *
pulses	pigpio.c	/^   uint32_t pulses;$/;"	m	struct:__anon638cdb1e1408	typeref:typename:uint32_t	file:
putBitInBytes	pigpio.c	/^void putBitInBytes(int bitPos, char *buf, int bit)$/;"	f	typeref:typename:void
pwmCycles	pigpio.c	/^static const uint16_t pwmCycles[PWM_FREQS]=$/;"	v	typeref:typename:const uint16_t[]	file:
pwmFreq	pigpio.c	/^static int pwmFreq[PWM_FREQS];$/;"	v	typeref:typename:int[]	file:
pwmRealRange	pigpio.c	/^static const uint16_t pwmRealRange[PWM_FREQS]=$/;"	v	typeref:typename:const uint16_t[]	file:
pwmReg	pigpio.c	/^static volatile uint32_t * pwmReg  = MAP_FAILED;$/;"	v	typeref:typename:volatile uint32_t *	file:
range	pigpio.c	/^   uint16_t range; \/* dutycycles specified by 0 .. range *\/$/;"	m	struct:__anon638cdb1e0408	typeref:typename:uint16_t	file:
rawCbs_t	pigpio.h	/^} rawCbs_t;$/;"	t	typeref:struct:__anon638cdb230908
rawDumpScript	pigpio.c	/^void rawDumpScript(unsigned script_id)$/;"	f	typeref:typename:void
rawDumpWave	pigpio.c	/^void rawDumpWave(void)$/;"	f	typeref:typename:void
rawSPI_t	pigpio.h	/^} rawSPI_t;$/;"	t	typeref:struct:__anon638cdb230808
rawWaveAddGeneric	pigpio.c	/^int rawWaveAddGeneric(unsigned numIn1, rawWave_t *in1)$/;"	f	typeref:typename:int
rawWaveAddSPI	pigpio.c	/^int rawWaveAddSPI($/;"	f	typeref:typename:int
rawWaveCB	pigpio.c	/^unsigned rawWaveCB(void)$/;"	f	typeref:typename:unsigned
rawWaveCBAdr	pigpio.c	/^rawCbs_t * rawWaveCBAdr(int cbNum)$/;"	f	typeref:typename:rawCbs_t *
rawWaveGetIn	pigpio.c	/^uint32_t rawWaveGetIn(int pos)$/;"	f	typeref:typename:uint32_t
rawWaveGetOOL	pigpio.c	/^uint32_t rawWaveGetOOL(int pos)$/;"	f	typeref:typename:uint32_t
rawWaveGetOut	pigpio.c	/^uint32_t rawWaveGetOut(int pos)$/;"	f	typeref:typename:uint32_t
rawWaveInfo	pigpio.c	/^rawWaveInfo_t rawWaveInfo(int wave_id)$/;"	f	typeref:typename:rawWaveInfo_t
rawWaveInfo_t	pigpio.h	/^} rawWaveInfo_t;$/;"	t	typeref:struct:__anon638cdb230708
rawWaveSetIn	pigpio.c	/^void rawWaveSetIn(int pos, uint32_t value)$/;"	f	typeref:typename:void
rawWaveSetOOL	pigpio.c	/^void rawWaveSetOOL(int pos, uint32_t value)$/;"	f	typeref:typename:void
rawWaveSetOut	pigpio.c	/^void rawWaveSetOut(int pos, uint32_t value)$/;"	f	typeref:typename:void
rawWave_t	pigpio.h	/^} rawWave_t;$/;"	t	typeref:struct:__anon638cdb230608
re_cancel	EXAMPLES/CPP/ROTARY_ENCODER/rotary_encoder.cpp	/^void re_decoder::re_cancel(void)$/;"	f	class:re_decoder	typeref:typename:void
re_decoder	EXAMPLES/CPP/ROTARY_ENCODER/rotary_encoder.cpp	/^re_decoder::re_decoder(int gpioA, int gpioB, re_decoderCB_t callback)$/;"	f	class:re_decoder
re_decoder	EXAMPLES/CPP/ROTARY_ENCODER/rotary_encoder.hpp	/^class re_decoder$/;"	c
re_decoderCB_t	EXAMPLES/CPP/ROTARY_ENCODER/rotary_encoder.hpp	/^typedef void (*re_decoderCB_t)(int);$/;"	t	typeref:typename:void (*)(int)
readPos	pigpio.c	/^   int      readPos;$/;"	m	struct:__anon638cdb1e1508	typeref:typename:int	file:
read_SDA	pigpio.c	/^static int read_SDA(wfRx_t *w)$/;"	f	typeref:typename:int	file:
read_bank_1	pigpiod_if.c	/^uint32_t read_bank_1(void)$/;"	f	typeref:typename:uint32_t
read_bank_1	pigpiod_if2.c	/^uint32_t read_bank_1(int pi)$/;"	f	typeref:typename:uint32_t
read_bank_2	pigpiod_if.c	/^uint32_t read_bank_2(void)$/;"	f	typeref:typename:uint32_t
read_bank_2	pigpiod_if2.c	/^uint32_t read_bank_2(int pi)$/;"	f	typeref:typename:uint32_t
read_write	pigpio.c	/^   uint8_t read_write;$/;"	m	struct:my_smbus_ioctl_data	typeref:typename:uint8_t	file:
rechargeTick	EXAMPLES/C/POT_CAP_RECHARGE/pot_cap_charge.c	/^static uint32_t rechargeTick = 0;$/;"	v	typeref:typename:uint32_t	file:
recvMax	pigpiod_if.c	/^int recvMax(void *buf, int bufsize, int sent)$/;"	f	typeref:typename:int
recvMax	pigpiod_if2.c	/^static int recvMax(int pi, void *buf, int bufsize, int sent)$/;"	f	typeref:typename:int	file:
report	pigs.c	/^void report(int err, char *fmt, ...)$/;"	f	typeref:typename:void
reportedLevel	pigpio.c	/^static uint32_t reportedLevel = 0;$/;"	v	typeref:typename:uint32_t	file:
request	pigpio.c	/^   unsigned request;$/;"	m	struct:__anon638cdb1e0b08	typeref:typename:unsigned	file:
res	command.h	/^      uint32_t res;$/;"	m	union:__anon3aaf009a0108::__anon3aaf009a020a	typeref:typename:uint32_t
response_buf	pigs.c	/^char response_buf[CMD_MAX_EXTENSION];$/;"	v	typeref:typename:char[]
runState	pigpio.c	/^static volatile int runState = PI_STARTING;$/;"	v	typeref:typename:volatile int	file:
run_script	pigpiod_if.c	/^int run_script(unsigned script_id, unsigned numPar, uint32_t *param)$/;"	f	typeref:typename:int
run_script	pigpiod_if2.c	/^int run_script(int pi, unsigned script_id, unsigned numPar, uint32_t *param)$/;"	f	typeref:typename:int
run_state	pigpio.c	/^   unsigned run_state;$/;"	m	struct:__anon638cdb1e0b08	typeref:typename:unsigned	file:
running	pigpio.c	/^   unsigned running;$/;"	m	struct:__anon638cdb1e0a08	typeref:typename:unsigned	file:
rv	command.h	/^   int   rv;   \/* command return value type *\/$/;"	m	struct:__anon3aaf009a0408	typeref:typename:int
rxBuf	pigpio.h	/^   char rxBuf[BSC_FIFO_SIZE]; \/* Read only *\/$/;"	m	struct:__anon638cdb230b08	typeref:typename:char[]
rxCnt	pigpio.h	/^   int rxCnt;                 \/* Read only *\/$/;"	m	struct:__anon638cdb230b08	typeref:typename:int
s	pigpio.c	/^      wfRxSerial_t s;$/;"	m	union:__anon638cdb1e1808::__anon638cdb1e190a	typeref:typename:wfRxSerial_t	file:
samples	EXAMPLES/C/COUNTER_2/freq_count_2.c	/^void samples(const gpioSample_t *samples, int numSamples)$/;"	f	typeref:typename:void
scrEvtWait	pigpio.c	/^static int scrEvtWait(gpioScript_t *s, uint32_t bits)$/;"	f	typeref:typename:int	file:
scrPop	pigpio.c	/^static int scrPop(gpioScript_t *s, int *SP, int *S)$/;"	f	typeref:typename:int	file:
scrPush	pigpio.c	/^static void scrPush(gpioScript_t *s, int *SP, int *S, int val)$/;"	f	typeref:typename:void	file:
scrSwap	pigpio.c	/^static void scrSwap(int *v1, int *v2)$/;"	f	typeref:typename:void	file:
scrSys	pigpio.c	/^static int scrSys(char *cmd, uint32_t p1, uint32_t p2)$/;"	f	typeref:typename:int	file:
scrWait	pigpio.c	/^static int scrWait(gpioScript_t *s, uint32_t bits)$/;"	f	typeref:typename:int	file:
script	pigpio.c	/^   cmdScript_t script;$/;"	m	struct:__anon638cdb1e0b08	typeref:typename:cmdScript_t	file:
scriptBits	pigpio.c	/^static volatile uint32_t scriptBits  = 0;$/;"	v	typeref:typename:volatile uint32_t	file:
scriptEventBits	pigpio.c	/^static volatile uint32_t scriptEventBits  = 0;$/;"	v	typeref:typename:volatile uint32_t	file:
script_status	pigpiod_if.c	/^int script_status(unsigned script_id, uint32_t *param)$/;"	f	typeref:typename:int
script_status	pigpiod_if2.c	/^int script_status(int pi, unsigned script_id, uint32_t *param)$/;"	f	typeref:typename:int
seqno	pigpio.c	/^   uint16_t seqno;$/;"	m	struct:__anon638cdb1e0d08	typeref:typename:uint16_t	file:
seqno	pigpio.h	/^   uint16_t seqno;$/;"	m	struct:__anon638cdb230408	typeref:typename:uint16_t
serClose	pigpio.c	/^int serClose(unsigned handle)$/;"	f	typeref:typename:int
serDataAvailable	pigpio.c	/^int serDataAvailable(unsigned handle)$/;"	f	typeref:typename:int
serInfo	pigpio.c	/^static serInfo_t        serInfo    [PI_SER_SLOTS];$/;"	v	typeref:typename:serInfo_t[]	file:
serInfo_t	pigpio.c	/^} serInfo_t;$/;"	t	typeref:struct:__anon638cdb1e1008	file:
serOpen	pigpio.c	/^int serOpen(char *tty, unsigned serBaud, unsigned serFlags)$/;"	f	typeref:typename:int
serRead	pigpio.c	/^int serRead(unsigned handle, char *buf, unsigned count)$/;"	f	typeref:typename:int
serReadByte	pigpio.c	/^int serReadByte(unsigned handle)$/;"	f	typeref:typename:int
serWrite	pigpio.c	/^int serWrite(unsigned handle, char *buf, unsigned count)$/;"	f	typeref:typename:int
serWriteByte	pigpio.c	/^int serWriteByte(unsigned handle, unsigned bVal)$/;"	f	typeref:typename:int
serial_close	pigpiod_if.c	/^int serial_close(unsigned handle)$/;"	f	typeref:typename:int
serial_close	pigpiod_if2.c	/^int serial_close(int pi, unsigned handle)$/;"	f	typeref:typename:int
serial_data_available	pigpiod_if.c	/^int serial_data_available(unsigned handle)$/;"	f	typeref:typename:int
serial_data_available	pigpiod_if2.c	/^int serial_data_available(int pi, unsigned handle)$/;"	f	typeref:typename:int
serial_open	pigpiod_if.c	/^int serial_open(char *dev, unsigned baud, unsigned flags)$/;"	f	typeref:typename:int
serial_open	pigpiod_if2.c	/^int serial_open(int pi, char *dev, unsigned baud, unsigned flags)$/;"	f	typeref:typename:int
serial_read	pigpiod_if.c	/^int serial_read(unsigned handle, char *buf, unsigned count)$/;"	f	typeref:typename:int
serial_read	pigpiod_if2.c	/^int serial_read(int pi, unsigned handle, char *buf, unsigned count)$/;"	f	typeref:typename:int
serial_read_byte	pigpiod_if.c	/^int serial_read_byte(unsigned handle)$/;"	f	typeref:typename:int
serial_read_byte	pigpiod_if2.c	/^int serial_read_byte(int pi, unsigned handle)$/;"	f	typeref:typename:int
serial_write	pigpiod_if.c	/^int serial_write(unsigned handle, char *buf, unsigned count)$/;"	f	typeref:typename:int
serial_write	pigpiod_if2.c	/^int serial_write(int pi, unsigned handle, char *buf, unsigned count)$/;"	f	typeref:typename:int
serial_write_byte	pigpiod_if.c	/^int serial_write_byte(unsigned handle, unsigned val)$/;"	f	typeref:typename:int
serial_write_byte	pigpiod_if2.c	/^int serial_write_byte(int pi, unsigned handle, unsigned val)$/;"	f	typeref:typename:int
servoIdx	pigpio.c	/^   uint16_t servoIdx;$/;"	m	struct:__anon638cdb1e0c08	typeref:typename:uint16_t	file:
set_CS	pigpio.c	/^static void set_CS(wfRx_t *w)$/;"	f	typeref:typename:void	file:
set_PWM_dutycycle	pigpiod_if.c	/^int set_PWM_dutycycle(unsigned user_gpio, unsigned dutycycle)$/;"	f	typeref:typename:int
set_PWM_dutycycle	pigpiod_if2.c	/^int set_PWM_dutycycle(int pi, unsigned user_gpio, unsigned dutycycle)$/;"	f	typeref:typename:int
set_PWM_frequency	pigpiod_if.c	/^int set_PWM_frequency(unsigned user_gpio, unsigned frequency)$/;"	f	typeref:typename:int
set_PWM_frequency	pigpiod_if2.c	/^int set_PWM_frequency(int pi, unsigned user_gpio, unsigned frequency)$/;"	f	typeref:typename:int
set_PWM_range	pigpiod_if.c	/^int set_PWM_range(unsigned user_gpio, unsigned range)$/;"	f	typeref:typename:int
set_PWM_range	pigpiod_if2.c	/^int set_PWM_range(int pi, unsigned user_gpio, unsigned range)$/;"	f	typeref:typename:int
set_SCLK	pigpio.c	/^static void set_SCLK(wfRx_t *w)$/;"	f	typeref:typename:void	file:
set_SDA	pigpio.c	/^static void set_SDA(wfRx_t *w)$/;"	f	typeref:typename:void	file:
set_bank_1	pigpiod_if.c	/^int set_bank_1(uint32_t levels)$/;"	f	typeref:typename:int
set_bank_1	pigpiod_if2.c	/^int set_bank_1(int pi, uint32_t levels)$/;"	f	typeref:typename:int
set_bank_2	pigpiod_if.c	/^int set_bank_2(uint32_t levels)$/;"	f	typeref:typename:int
set_bank_2	pigpiod_if2.c	/^int set_bank_2(int pi, uint32_t levels)$/;"	f	typeref:typename:int
set_glitch_filter	pigpiod_if.c	/^int set_glitch_filter(unsigned user_gpio, unsigned steady)$/;"	f	typeref:typename:int
set_glitch_filter	pigpiod_if2.c	/^int set_glitch_filter(int pi, unsigned user_gpio, unsigned steady)$/;"	f	typeref:typename:int
set_mode	pigpiod_if.c	/^int set_mode(unsigned gpio, unsigned mode)$/;"	f	typeref:typename:int
set_mode	pigpiod_if2.c	/^int set_mode(int pi, unsigned gpio, unsigned mode)$/;"	f	typeref:typename:int
set_noise_filter	pigpiod_if.c	/^int set_noise_filter(unsigned user_gpio, unsigned steady, unsigned active)$/;"	f	typeref:typename:int
set_noise_filter	pigpiod_if2.c	/^int set_noise_filter(int pi, unsigned user_gpio, unsigned steady, unsigned active)$/;"	f	typeref:typename:int
set_pad_strength	pigpiod_if2.c	/^int set_pad_strength(int pi, unsigned pad, unsigned padStrength)$/;"	f	typeref:typename:int
set_pull_up_down	pigpiod_if.c	/^int set_pull_up_down(unsigned gpio, unsigned pud)$/;"	f	typeref:typename:int
set_pull_up_down	pigpiod_if2.c	/^int set_pull_up_down(int pi, unsigned gpio, unsigned pud)$/;"	f	typeref:typename:int
set_servo_pulsewidth	pigpiod_if.c	/^int set_servo_pulsewidth(unsigned user_gpio, unsigned pulsewidth)$/;"	f	typeref:typename:int
set_servo_pulsewidth	pigpiod_if2.c	/^int set_servo_pulsewidth(int pi, unsigned user_gpio, unsigned pulsewidth)$/;"	f	typeref:typename:int
set_watchdog	pigpiod_if.c	/^int set_watchdog(unsigned user_gpio, unsigned timeout)$/;"	f	typeref:typename:int
set_watchdog	pigpiod_if2.c	/^int set_watchdog(int pi, unsigned user_gpio, unsigned timeout)$/;"	f	typeref:typename:int
shell	pigpio.c	/^int shell(char *scriptName, char *scriptString)$/;"	f	typeref:typename:int
shell_	pigpiod_if2.c	/^int shell_(int pi, char *scriptName, char *scriptString)$/;"	f	typeref:typename:int
shortPipeWrite	pigpio.c	/^   uint32_t shortPipeWrite;$/;"	m	struct:__anon638cdb1e1208	typeref:typename:uint32_t	file:
sigHandler	pigpio.c	/^static void sigHandler(int signum)$/;"	f	typeref:typename:void	file:
sigSetHandler	pigpio.c	/^static void sigSetHandler(void)$/;"	f	typeref:typename:void	file:
size	pigpio.c	/^   uint32_t size;$/;"	m	struct:my_smbus_ioctl_data	typeref:typename:uint32_t	file:
size	pigpio.c	/^   unsigned  size;          \/* in bytes *\/$/;"	m	struct:__anon638cdb1e1c08	typeref:typename:unsigned	file:
size	pigpio.h	/^   size_t size;$/;"	m	struct:__anon638cdb230208	typeref:typename:size_t
size	pigpio.h	/^   uint16_t size;$/;"	m	struct:__anon638cdb230108	typeref:typename:uint16_t
sockNetAddr	pigpio.c	/^static uint32_t sockNetAddr[MAX_CONNECT_ADDRESSES];$/;"	v	typeref:typename:uint32_t[]	file:
sockNetAddr	pigpiod.c	/^static uint32_t sockNetAddr[MAX_CONNECT_ADDRESSES];$/;"	v	typeref:typename:uint32_t[]	file:
socketPort	pigpio.c	/^   unsigned socketPort;$/;"	m	struct:__anon638cdb1e1308	typeref:typename:unsigned	file:
socketPort	pigpiod.c	/^static unsigned socketPort             = PI_DEFAULT_SOCKET_PORT;$/;"	v	typeref:typename:unsigned	file:
speed	pigpio.c	/^   unsigned speed;$/;"	m	struct:__anon638cdb1e1108	typeref:typename:unsigned	file:
spiACS	pigpio.c	/^static void spiACS(int channel, int on)$/;"	f	typeref:typename:void	file:
spiAnyOpen	pigpio.c	/^static int spiAnyOpen(uint32_t flags)$/;"	f	typeref:typename:int	file:
spiClose	pigpio.c	/^int spiClose(unsigned handle)$/;"	f	typeref:typename:int
spiFlags	pigpio.c	/^   int spiFlags;$/;"	m	struct:__anon638cdb1e1708	typeref:typename:int	file:
spiGo	pigpio.c	/^static void spiGo($/;"	f	typeref:typename:void	file:
spiGoA	pigpio.c	/^static void spiGoA($/;"	f	typeref:typename:void	file:
spiGoS	pigpio.c	/^static void spiGoS($/;"	f	typeref:typename:void	file:
spiInfo	pigpio.c	/^static spiInfo_t        spiInfo    [PI_SPI_SLOTS];$/;"	v	typeref:typename:spiInfo_t[]	file:
spiInfo_t	pigpio.c	/^} spiInfo_t;$/;"	t	typeref:struct:__anon638cdb1e1108	file:
spiInit	pigpio.c	/^static void spiInit(uint32_t flags)$/;"	f	typeref:typename:void	file:
spiOpen	pigpio.c	/^int spiOpen(unsigned spiChan, unsigned baud, unsigned spiFlags)$/;"	f	typeref:typename:int
spiRead	pigpio.c	/^int spiRead(unsigned handle, char *buf, unsigned count)$/;"	f	typeref:typename:int
spiReg	pigpio.c	/^static volatile uint32_t * spiReg  = MAP_FAILED;$/;"	v	typeref:typename:volatile uint32_t *	file:
spiTerm	pigpio.c	/^static void spiTerm(uint32_t flags)$/;"	f	typeref:typename:void	file:
spiWrite	pigpio.c	/^int spiWrite(unsigned handle, char *buf, unsigned count)$/;"	f	typeref:typename:int
spiXfer	pigpio.c	/^int spiXfer(unsigned handle, char *txBuf, char *rxBuf, unsigned count)$/;"	f	typeref:typename:int
spi_close	pigpiod_if.c	/^int spi_close(unsigned handle)$/;"	f	typeref:typename:int
spi_close	pigpiod_if2.c	/^int spi_close(int pi, unsigned handle)$/;"	f	typeref:typename:int
spi_dummy	pigpio.c	/^static uint32_t spi_dummy;$/;"	v	typeref:typename:uint32_t	file:
spi_open	pigpiod_if.c	/^int spi_open(unsigned channel, unsigned speed, uint32_t flags)$/;"	f	typeref:typename:int
spi_open	pigpiod_if2.c	/^int spi_open(int pi, unsigned channel, unsigned speed, uint32_t flags)$/;"	f	typeref:typename:int
spi_read	pigpiod_if.c	/^int spi_read(unsigned handle, char *buf, unsigned count)$/;"	f	typeref:typename:int
spi_read	pigpiod_if2.c	/^int spi_read(int pi, unsigned handle, char *buf, unsigned count)$/;"	f	typeref:typename:int
spi_write	pigpiod_if.c	/^int spi_write(unsigned handle, char *buf, unsigned count)$/;"	f	typeref:typename:int
spi_write	pigpiod_if2.c	/^int spi_write(int pi, unsigned handle, char *buf, unsigned count)$/;"	f	typeref:typename:int
spi_xfer	pigpiod_if.c	/^int spi_xfer(unsigned handle, char *txBuf, char *rxBuf, unsigned count)$/;"	f	typeref:typename:int
spi_xfer	pigpiod_if2.c	/^int spi_xfer(int pi, unsigned handle, char *txBuf, char *rxBuf, unsigned count)$/;"	f	typeref:typename:int
spinWhileStarting	pigpio.c	/^static void spinWhileStarting(void)$/;"	f	typeref:typename:void	file:
src	pigpio.h	/^   uint32_t src;$/;"	m	struct:__anon638cdb230908	typeref:typename:uint32_t
ss_pol	pigpio.h	/^   int ss_pol;  \/* slave select off state   *\/$/;"	m	struct:__anon638cdb230808	typeref:typename:int
ss_us	pigpio.h	/^   int ss_us;   \/* delay after slave select *\/$/;"	m	struct:__anon638cdb230808	typeref:typename:int
startBitTick	pigpio.c	/^   uint32_t startBitTick; \/* microseconds *\/$/;"	m	struct:__anon638cdb1e1508	typeref:typename:uint32_t	file:
start_thread	pigpiod_if.c	/^pthread_t *start_thread(gpioThreadFunc_t thread_func, void *arg)$/;"	f	typeref:typename:pthread_t *
start_thread	pigpiod_if2.c	/^pthread_t *start_thread(gpioThreadFunc_t thread_func, void *userdata)$/;"	f	typeref:typename:pthread_t *
started	pigpio.c	/^   int started;$/;"	m	struct:__anon638cdb1e1608	typeref:typename:int	file:
state	pigpio.c	/^   uint16_t state;$/;"	m	struct:__anon638cdb1e0d08	typeref:typename:uint16_t	file:
state	pigpio.c	/^   uint16_t state;$/;"	m	struct:__anon638cdb1e0e08	typeref:typename:uint16_t	file:
state	pigpio.c	/^   uint16_t state;$/;"	m	struct:__anon638cdb1e0f08	typeref:typename:uint16_t	file:
state	pigpio.c	/^   uint16_t state;$/;"	m	struct:__anon638cdb1e1008	typeref:typename:uint16_t	file:
state	pigpio.c	/^   uint16_t state;$/;"	m	struct:__anon638cdb1e1108	typeref:typename:uint16_t	file:
state	pigpio.c	/^   unsigned state;$/;"	m	struct:__anon638cdb1e0b08	typeref:typename:unsigned	file:
status	pigs.c	/^int status = PIGS_OK;$/;"	v	typeref:typename:int
step	command.h	/^   int      step;$/;"	m	struct:__anon3aaf009a0508	typeref:typename:int
stopHardwarePWM	pigpio.c	/^static void stopHardwarePWM(void)$/;"	f	typeref:typename:void	file:
stop_script	pigpiod_if.c	/^int stop_script(unsigned script_id)$/;"	f	typeref:typename:int
stop_script	pigpiod_if2.c	/^int stop_script(int pi, unsigned script_id)$/;"	f	typeref:typename:int
stop_thread	pigpiod_if.c	/^void stop_thread(pthread_t *pth)$/;"	f	typeref:typename:void
stop_thread	pigpiod_if2.c	/^void stop_thread(pthread_t *pth)$/;"	f	typeref:typename:void
store_script	pigpiod_if.c	/^int store_script(char *script)$/;"	f	typeref:typename:int
store_script	pigpiod_if2.c	/^int store_script(int pi, char *script)$/;"	f	typeref:typename:int
str	command.c	/^   char * str;$/;"	m	struct:__anon3aaf00950108	typeref:typename:char *	file:
str_area	command.h	/^   char *str_area;$/;"	m	struct:__anon3aaf009a0708	typeref:typename:char *
str_area_len	command.h	/^   int str_area_len;$/;"	m	struct:__anon3aaf009a0708	typeref:typename:int
str_area_pos	command.h	/^   int str_area_pos;$/;"	m	struct:__anon3aaf009a0708	typeref:typename:int
stride	pigpio.h	/^   uint32_t stride;$/;"	m	struct:__anon638cdb230908	typeref:typename:uint32_t
switchFunctionOff	pigpio.c	/^static void switchFunctionOff(unsigned gpio)$/;"	f	typeref:typename:void	file:
symbol	pig2vcd.c	/^int symbol(int bit)$/;"	f	typeref:typename:int
systReg	pigpio.c	/^static volatile uint32_t * systReg = MAP_FAILED;$/;"	v	typeref:typename:volatile uint32_t *	file:
t0	x_pigpio.c	/^void t0()$/;"	f	typeref:typename:void
t0	x_pigpiod_if.c	/^void t0()$/;"	f	typeref:typename:void
t0	x_pigpiod_if2.c	/^void t0(int pi)$/;"	f	typeref:typename:void
t1	EXAMPLES/C/IR_RECEIVER/ir_hasher.c	/^   int t1;$/;"	m	struct:_Pi_Hasher_s	typeref:typename:int	file:
t1	EXAMPLES/CPP/IR_RECEIVER/ir_hasher.hpp	/^   uint32_t t1, t2, t3, t4;$/;"	m	class:Hasher	typeref:typename:uint32_t
t1	x_pigpio.c	/^void t1()$/;"	f	typeref:typename:void
t1	x_pigpiod_if.c	/^void t1()$/;"	f	typeref:typename:void
t1	x_pigpiod_if2.c	/^void t1(int pi)$/;"	f	typeref:typename:void
t2	EXAMPLES/C/IR_RECEIVER/ir_hasher.c	/^   int t2;$/;"	m	struct:_Pi_Hasher_s	typeref:typename:int	file:
t2	EXAMPLES/CPP/IR_RECEIVER/ir_hasher.hpp	/^   uint32_t t1, t2, t3, t4;$/;"	m	class:Hasher	typeref:typename:uint32_t
t2	x_pigpio.c	/^void t2()$/;"	f	typeref:typename:void
t2	x_pigpiod_if.c	/^void t2()$/;"	f	typeref:typename:void
t2	x_pigpiod_if2.c	/^void t2(int pi)$/;"	f	typeref:typename:void
t2_count	x_pigpio.c	/^int t2_count;$/;"	v	typeref:typename:int
t2_count	x_pigpiod_if.c	/^int t2_count=0;$/;"	v	typeref:typename:int
t2_count	x_pigpiod_if2.c	/^int t2_count=0;$/;"	v	typeref:typename:int
t2cb	x_pigpio.c	/^void t2cb(int gpio, int level, uint32_t tick)$/;"	f	typeref:typename:void
t2cb	x_pigpiod_if.c	/^void t2cb(unsigned gpio, unsigned level, uint32_t tick)$/;"	f	typeref:typename:void
t2cb	x_pigpiod_if2.c	/^void t2cb(int pi, unsigned gpio, unsigned level, uint32_t tick)$/;"	f	typeref:typename:void
t3	EXAMPLES/C/IR_RECEIVER/ir_hasher.c	/^   int t3;$/;"	m	struct:_Pi_Hasher_s	typeref:typename:int	file:
t3	EXAMPLES/CPP/IR_RECEIVER/ir_hasher.hpp	/^   uint32_t t1, t2, t3, t4;$/;"	m	class:Hasher	typeref:typename:uint32_t
t3	x_pigpio.c	/^void t3()$/;"	f	typeref:typename:void
t3	x_pigpiod_if.c	/^void t3()$/;"	f	typeref:typename:void
t3	x_pigpiod_if2.c	/^void t3(int pi)$/;"	f	typeref:typename:void
t3_count	x_pigpio.c	/^int t3_count;$/;"	v	typeref:typename:int
t3_count	x_pigpiod_if.c	/^int t3_count=0;$/;"	v	typeref:typename:int
t3_count	x_pigpiod_if2.c	/^int t3_count=0;$/;"	v	typeref:typename:int
t3_off	x_pigpio.c	/^float t3_off;$/;"	v	typeref:typename:float
t3_off	x_pigpiod_if.c	/^float t3_off=0.0;$/;"	v	typeref:typename:float
t3_off	x_pigpiod_if2.c	/^float t3_off=0.0;$/;"	v	typeref:typename:float
t3_on	x_pigpio.c	/^float t3_on;$/;"	v	typeref:typename:float
t3_on	x_pigpiod_if.c	/^float t3_on=0.0;$/;"	v	typeref:typename:float
t3_on	x_pigpiod_if2.c	/^float t3_on=0.0;$/;"	v	typeref:typename:float
t3_reset	x_pigpio.c	/^int t3_reset;$/;"	v	typeref:typename:int
t3_reset	x_pigpiod_if.c	/^int t3_reset=1;$/;"	v	typeref:typename:int
t3_reset	x_pigpiod_if2.c	/^int t3_reset=1;$/;"	v	typeref:typename:int
t3_tick	x_pigpio.c	/^uint32_t t3_tick;$/;"	v	typeref:typename:uint32_t
t3_tick	x_pigpiod_if.c	/^uint32_t t3_tick=0;$/;"	v	typeref:typename:uint32_t
t3_tick	x_pigpiod_if2.c	/^uint32_t t3_tick=0;$/;"	v	typeref:typename:uint32_t
t3_val	x_pigpio.c	/^int t3_val;$/;"	v	typeref:typename:int
t3cbf	x_pigpio.c	/^void t3cbf(int gpio, int level, uint32_t tick, void *userdata)$/;"	f	typeref:typename:void
t3cbf	x_pigpiod_if.c	/^void t3cbf(unsigned gpio, unsigned level, uint32_t tick)$/;"	f	typeref:typename:void
t3cbf	x_pigpiod_if2.c	/^void t3cbf(int pi, unsigned gpio, unsigned level, uint32_t tick)$/;"	f	typeref:typename:void
t4	EXAMPLES/C/IR_RECEIVER/ir_hasher.c	/^   int t4;$/;"	m	struct:_Pi_Hasher_s	typeref:typename:int	file:
t4	EXAMPLES/CPP/IR_RECEIVER/ir_hasher.hpp	/^   uint32_t t1, t2, t3, t4;$/;"	m	class:Hasher	typeref:typename:uint32_t
t4	x_pigpio.c	/^void t4()$/;"	f	typeref:typename:void
t4	x_pigpiod_if.c	/^void t4()$/;"	f	typeref:typename:void
t4	x_pigpiod_if2.c	/^void t4(int pi)$/;"	f	typeref:typename:void
t5	x_pigpio.c	/^void t5()$/;"	f	typeref:typename:void
t5	x_pigpiod_if.c	/^void t5()$/;"	f	typeref:typename:void
t5	x_pigpiod_if2.c	/^void t5(int pi)$/;"	f	typeref:typename:void
t5_count	x_pigpio.c	/^int t5_count;$/;"	v	typeref:typename:int
t5_count	x_pigpiod_if.c	/^int t5_count = 0;$/;"	v	typeref:typename:int
t5_count	x_pigpiod_if2.c	/^int t5_count = 0;$/;"	v	typeref:typename:int
t5cbf	x_pigpio.c	/^void t5cbf(int gpio, int level, uint32_t tick)$/;"	f	typeref:typename:void
t5cbf	x_pigpiod_if.c	/^void t5cbf(unsigned gpio, unsigned level, uint32_t tick)$/;"	f	typeref:typename:void
t5cbf	x_pigpiod_if2.c	/^void t5cbf(int pi, unsigned gpio, unsigned level, uint32_t tick)$/;"	f	typeref:typename:void
t6	x_pigpio.c	/^void t6()$/;"	f	typeref:typename:void
t6	x_pigpiod_if.c	/^void t6()$/;"	f	typeref:typename:void
t6	x_pigpiod_if2.c	/^void t6(int pi)$/;"	f	typeref:typename:void
t6_count	x_pigpio.c	/^int t6_count;$/;"	v	typeref:typename:int
t6_count	x_pigpiod_if.c	/^int t6_count=0;$/;"	v	typeref:typename:int
t6_count	x_pigpiod_if2.c	/^int t6_count=0;$/;"	v	typeref:typename:int
t6_on	x_pigpio.c	/^int t6_on;$/;"	v	typeref:typename:int
t6_on	x_pigpiod_if.c	/^int t6_on=0;$/;"	v	typeref:typename:int
t6_on	x_pigpiod_if2.c	/^int t6_on=0;$/;"	v	typeref:typename:int
t6_on_tick	x_pigpio.c	/^uint32_t t6_on_tick;$/;"	v	typeref:typename:uint32_t
t6_on_tick	x_pigpiod_if.c	/^uint32_t t6_on_tick=0;$/;"	v	typeref:typename:uint32_t
t6_on_tick	x_pigpiod_if2.c	/^uint32_t t6_on_tick=0;$/;"	v	typeref:typename:uint32_t
t6cbf	x_pigpio.c	/^void t6cbf(int gpio, int level, uint32_t tick)$/;"	f	typeref:typename:void
t6cbf	x_pigpiod_if.c	/^void t6cbf(unsigned gpio, unsigned level, uint32_t tick)$/;"	f	typeref:typename:void
t6cbf	x_pigpiod_if2.c	/^void t6cbf(int pi, unsigned gpio, unsigned level, uint32_t tick)$/;"	f	typeref:typename:void
t7	x_pigpio.c	/^void t7()$/;"	f	typeref:typename:void
t7	x_pigpiod_if.c	/^void t7()$/;"	f	typeref:typename:void
t7	x_pigpiod_if2.c	/^void t7(int pi)$/;"	f	typeref:typename:void
t7_count	x_pigpio.c	/^int t7_count;$/;"	v	typeref:typename:int
t7_count	x_pigpiod_if.c	/^int t7_count=0;$/;"	v	typeref:typename:int
t7_count	x_pigpiod_if2.c	/^int t7_count=0;$/;"	v	typeref:typename:int
t7cbf	x_pigpio.c	/^void t7cbf(int gpio, int level, uint32_t tick)$/;"	f	typeref:typename:void
t7cbf	x_pigpiod_if.c	/^void t7cbf(unsigned gpio, unsigned level, uint32_t tick)$/;"	f	typeref:typename:void
t7cbf	x_pigpiod_if2.c	/^void t7cbf(int pi, unsigned gpio, unsigned level, uint32_t tick)$/;"	f	typeref:typename:void
t8	x_pigpio.c	/^void t8()$/;"	f	typeref:typename:void
t8	x_pigpiod_if.c	/^void t8()$/;"	f	typeref:typename:void
t8	x_pigpiod_if2.c	/^void t8(int pi)$/;"	f	typeref:typename:void
t9	x_pigpio.c	/^void t9()$/;"	f	typeref:typename:void
t9	x_pigpiod_if.c	/^void t9()$/;"	f	typeref:typename:void
t9	x_pigpiod_if2.c	/^void t9(int pi)$/;"	f	typeref:typename:void
t9_count	x_pigpio.c	/^int t9_count;$/;"	v	typeref:typename:int
t9_count	x_pigpiod_if.c	/^int t9_count = 0;$/;"	v	typeref:typename:int
t9_count	x_pigpiod_if2.c	/^int t9_count = 0;$/;"	v	typeref:typename:int
t9cbf	x_pigpio.c	/^void t9cbf(int gpio, int level, uint32_t tick)$/;"	f	typeref:typename:void
t9cbf	x_pigpiod_if.c	/^void t9cbf(unsigned gpio, unsigned level, uint32_t tick)$/;"	f	typeref:typename:void
t9cbf	x_pigpiod_if2.c	/^void t9cbf(int pi, unsigned gpio, unsigned level, uint32_t tick)$/;"	f	typeref:typename:void
ta	x_pigpio.c	/^void ta()$/;"	f	typeref:typename:void
ta	x_pigpiod_if.c	/^void ta()$/;"	f	typeref:typename:void
ta	x_pigpiod_if2.c	/^void ta(int pi)$/;"	f	typeref:typename:void
tag	command.h	/^   uint32_t tag;$/;"	m	struct:__anon3aaf009a0508	typeref:typename:uint32_t
tb	x_pigpio.c	/^void tb()$/;"	f	typeref:typename:void
tb	x_pigpiod_if.c	/^void tb()$/;"	f	typeref:typename:void
tb	x_pigpiod_if2.c	/^void tb(int pi)$/;"	f	typeref:typename:void
tc	x_pigpio.c	/^void tc()$/;"	f	typeref:typename:void
tc	x_pigpiod_if.c	/^void tc()$/;"	f	typeref:typename:void
tc	x_pigpiod_if2.c	/^void tc(int pi)$/;"	f	typeref:typename:void
terminate	pigpiod.c	/^void terminate(int signum)$/;"	f	typeref:typename:void
tick	pigpio.c	/^   uint32_t tick         [TCK_PER_IPAGE];$/;"	m	struct:__anon638cdb1e0208	typeref:typename:uint32_t[]	file:
tick	pigpio.h	/^   uint32_t tick;$/;"	m	struct:__anon638cdb230308	typeref:typename:uint32_t
tick	pigpio.h	/^   uint32_t tick;$/;"	m	struct:__anon638cdb230408	typeref:typename:uint32_t
timeStamp	EXAMPLES/C/I2C_SNIFFER/pig2i2c.c	/^static char * timeStamp()$/;"	f	typeref:typename:char *	file:
timeStamp	pig2vcd.c	/^static char * timeStamp()$/;"	f	typeref:typename:char *	file:
time_sleep	pigpio.c	/^void time_sleep(double seconds)$/;"	f	typeref:typename:void
time_sleep	pigpiod_if.c	/^void time_sleep(double seconds)$/;"	f	typeref:typename:void
time_sleep	pigpiod_if2.c	/^void time_sleep(double seconds)$/;"	f	typeref:typename:void
time_time	pigpio.c	/^double time_time(void)$/;"	f	typeref:typename:double
time_time	pigpiod_if.c	/^double time_time(void)$/;"	f	typeref:typename:double
time_time	pigpiod_if2.c	/^double time_time(void)$/;"	f	typeref:typename:double
timeout	EXAMPLES/C/IR_RECEIVER/ir_hasher.c	/^   int timeout;$/;"	m	struct:_Pi_Hasher_s	typeref:typename:int	file:
timeout	pigpio.c	/^   int      timeout; \/* millisconds *\/$/;"	m	struct:__anon638cdb1e1508	typeref:typename:int	file:
timeout	pigpio.c	/^   int timeout;$/;"	m	struct:__anon638cdb1e0708	typeref:typename:int	file:
topCB	pigpio.h	/^   uint16_t topCB;  \/* last CB used by wave   *\/$/;"	m	struct:__anon638cdb230708	typeref:typename:uint16_t
topOOL	pigpio.h	/^   uint16_t topOOL; \/* last top OOL used by wave *\/$/;"	m	struct:__anon638cdb230708	typeref:typename:uint16_t
txBuf	pigpio.h	/^   char txBuf[BSC_FIFO_SIZE]; \/* Write *\/$/;"	m	struct:__anon638cdb230b08	typeref:typename:char[]
txCnt	pigpio.h	/^   int txCnt;                 \/* Write *\/$/;"	m	struct:__anon638cdb230b08	typeref:typename:int
uninstall	Makefile	/^uninstall:$/;"	t
updateMask	pigpiod.c	/^static uint64_t updateMask             = -1;$/;"	v	typeref:typename:uint64_t	file:
updateMaskSet	pigpiod.c	/^static int updateMaskSet = 0;$/;"	v	typeref:typename:int	file:
update_script	pigpiod_if2.c	/^int update_script(int pi, unsigned script_id, unsigned numPar, uint32_t *param)$/;"	f	typeref:typename:int
usDelay	pigpio.h	/^   uint32_t usDelay;$/;"	m	struct:__anon638cdb230508	typeref:typename:uint32_t
usDelay	pigpio.h	/^   uint32_t usDelay;$/;"	m	struct:__anon638cdb230608	typeref:typename:uint32_t
usage	EXAMPLES/C/COUNTER_1/freq_count_1.c	/^void usage()$/;"	f	typeref:typename:void
usage	EXAMPLES/C/COUNTER_2/freq_count_2.c	/^void usage()$/;"	f	typeref:typename:void
usage	pigpio.c	/^   int usage;$/;"	m	struct:__anon638cdb1e1708	typeref:typename:int	file:
usage	pigpiod.c	/^void usage()$/;"	f	typeref:typename:void
user	pigpiod_if.c	/^   void * user;$/;"	m	struct:callback_s	typeref:typename:void *	file:
user	pigpiod_if2.c	/^   void * user;$/;"	m	struct:callback_s	typeref:typename:void *	file:
user	pigpiod_if2.c	/^   void * user;$/;"	m	struct:evtCallback_s	typeref:typename:void *	file:
userdata	pigpio.c	/^   void *userdata;$/;"	m	struct:__anon638cdb1e0508	typeref:typename:void *	file:
userdata	pigpio.c	/^   void *userdata;$/;"	m	struct:__anon638cdb1e0608	typeref:typename:void *	file:
userdata	pigpio.c	/^   void *userdata;$/;"	m	struct:__anon638cdb1e0708	typeref:typename:void *	file:
userdata	pigpio.c	/^   void *userdata;$/;"	m	struct:__anon638cdb1e0808	typeref:typename:void *	file:
userdata	pigpio.c	/^   void *userdata;$/;"	m	struct:__anon638cdb1e0908	typeref:typename:void *	file:
userdata	pigpio.c	/^   void *userdata;$/;"	m	struct:__anon638cdb1e0a08	typeref:typename:void *	file:
valid	pigpio.c	/^   uint16_t valid;$/;"	m	struct:__anon638cdb1e0c08	typeref:typename:uint16_t	file:
var	command.h	/^   int *var;$/;"	m	struct:__anon3aaf009a0708	typeref:typename:int *
virtual_addr	pigpio.c	/^   uintptr_t *virtual_addr; \/* mbMapMem() *\/$/;"	m	struct:__anon638cdb1e1c08	typeref:typename:uintptr_t *	file:
vt	command.h	/^   int   vt;   \/* command verification type *\/$/;"	m	struct:__anon3aaf009a0408	typeref:typename:int
waitBits	pigpio.c	/^   uint32_t waitBits;$/;"	m	struct:__anon638cdb1e0b08	typeref:typename:uint32_t	file:
wait_for_edge	pigpiod_if.c	/^int wait_for_edge(unsigned user_gpio, unsigned edge, double timeout)$/;"	f	typeref:typename:int
wait_for_edge	pigpiod_if2.c	/^int wait_for_edge(int pi, unsigned user_gpio, unsigned edge, double timeout)$/;"	f	typeref:typename:int
wait_for_event	pigpiod_if2.c	/^int wait_for_event(int pi, unsigned event, double timeout)$/;"	f	typeref:typename:int
wave2Cbs	pigpio.c	/^static int wave2Cbs(unsigned wave_mode, int *CB, int *BOOL, int *TOOL,$/;"	f	typeref:typename:int	file:
waveBitDelay	pigpio.c	/^static void waveBitDelay$/;"	f	typeref:typename:void	file:
waveCBsOOLs	pigpio.c	/^static void waveCBsOOLs(int *numCBs, int *numBOOLs, int *numTOOLs)$/;"	f	typeref:typename:void	file:
waveCbPOadr	pigpio.c	/^static uint32_t waveCbPOadr(int pos)$/;"	f	typeref:typename:uint32_t	file:
waveClockInited	pigpio.c	/^static int waveClockInited = 0;$/;"	v	typeref:typename:int	file:
waveDelayCBs	pigpio.c	/^static int waveDelayCBs(uint32_t delay)$/;"	f	typeref:typename:int	file:
waveEndPtr	pigpio.c	/^static uint32_t *waveEndPtr = NULL;$/;"	v	typeref:typename:uint32_t *	file:
waveInfo	pigpio.c	/^static rawWaveInfo_t waveInfo[PI_MAX_WAVES];$/;"	v	typeref:typename:rawWaveInfo_t[]	file:
waveOOLPOadr	pigpio.c	/^static uint32_t waveOOLPOadr(int pos)$/;"	f	typeref:typename:uint32_t	file:
waveOOLPageSlot	pigpio.c	/^static void waveOOLPageSlot(int pos, int *page, int *slot)$/;"	f	typeref:typename:void	file:
waveOutBotCB	pigpio.c	/^static int waveOutBotCB  = PI_WAVE_COUNT_PAGES*CBS_PER_OPAGE;$/;"	v	typeref:typename:int	file:
waveOutBotOOL	pigpio.c	/^static int waveOutBotOOL = PI_WAVE_COUNT_PAGES*OOL_PER_OPAGE;$/;"	v	typeref:typename:int	file:
waveOutCount	pigpio.c	/^static int waveOutCount = 0;$/;"	v	typeref:typename:int	file:
waveOutTopOOL	pigpio.c	/^static int waveOutTopOOL = NUM_WAVE_OOL;$/;"	v	typeref:typename:int	file:
waveRxBit	pigpio.c	/^static void waveRxBit(int gpio, int level, uint32_t tick)$/;"	f	typeref:typename:void	file:
waveRxSerial	pigpio.c	/^static void waveRxSerial(wfRx_t *w, int level, uint32_t tick)$/;"	f	typeref:typename:void	file:
waveSetOOL	pigpio.c	/^static void waveSetOOL(int pos, uint32_t OOL)$/;"	f	typeref:typename:void	file:
wave_add_generic	pigpiod_if.c	/^int wave_add_generic(unsigned numPulses, gpioPulse_t *pulses)$/;"	f	typeref:typename:int
wave_add_generic	pigpiod_if2.c	/^int wave_add_generic(int pi, unsigned numPulses, gpioPulse_t *pulses)$/;"	f	typeref:typename:int
wave_add_new	pigpiod_if.c	/^int wave_add_new(void)$/;"	f	typeref:typename:int
wave_add_new	pigpiod_if2.c	/^int wave_add_new(int pi)$/;"	f	typeref:typename:int
wave_add_serial	pigpiod_if.c	/^int wave_add_serial($/;"	f	typeref:typename:int
wave_add_serial	pigpiod_if2.c	/^int wave_add_serial($/;"	f	typeref:typename:int
wave_chain	pigpiod_if.c	/^int wave_chain(char *buf, unsigned bufSize)$/;"	f	typeref:typename:int
wave_chain	pigpiod_if2.c	/^int wave_chain(int pi, char *buf, unsigned bufSize)$/;"	f	typeref:typename:int
wave_clear	pigpiod_if.c	/^int wave_clear(void)$/;"	f	typeref:typename:int
wave_clear	pigpiod_if2.c	/^int wave_clear(int pi)$/;"	f	typeref:typename:int
wave_create	pigpiod_if.c	/^int wave_create(void)$/;"	f	typeref:typename:int
wave_create	pigpiod_if2.c	/^int wave_create(int pi)$/;"	f	typeref:typename:int
wave_create_and_pad	pigpiod_if2.c	/^int wave_create_and_pad(int pi, int percent)$/;"	f	typeref:typename:int
wave_delete	pigpiod_if.c	/^int wave_delete(unsigned wave_id)$/;"	f	typeref:typename:int
wave_delete	pigpiod_if2.c	/^int wave_delete(int pi, unsigned wave_id)$/;"	f	typeref:typename:int
wave_get_cbs	pigpiod_if.c	/^int wave_get_cbs(void)$/;"	f	typeref:typename:int
wave_get_cbs	pigpiod_if2.c	/^int wave_get_cbs(int pi)$/;"	f	typeref:typename:int
wave_get_high_cbs	pigpiod_if.c	/^int wave_get_high_cbs(void)$/;"	f	typeref:typename:int
wave_get_high_cbs	pigpiod_if2.c	/^int wave_get_high_cbs(int pi)$/;"	f	typeref:typename:int
wave_get_high_micros	pigpiod_if.c	/^int wave_get_high_micros(void)$/;"	f	typeref:typename:int
wave_get_high_micros	pigpiod_if2.c	/^int wave_get_high_micros(int pi)$/;"	f	typeref:typename:int
wave_get_high_pulses	pigpiod_if.c	/^int wave_get_high_pulses(void)$/;"	f	typeref:typename:int
wave_get_high_pulses	pigpiod_if2.c	/^int wave_get_high_pulses(int pi)$/;"	f	typeref:typename:int
wave_get_max_cbs	pigpiod_if.c	/^int wave_get_max_cbs(void)$/;"	f	typeref:typename:int
wave_get_max_cbs	pigpiod_if2.c	/^int wave_get_max_cbs(int pi)$/;"	f	typeref:typename:int
wave_get_max_micros	pigpiod_if.c	/^int wave_get_max_micros(void)$/;"	f	typeref:typename:int
wave_get_max_micros	pigpiod_if2.c	/^int wave_get_max_micros(int pi)$/;"	f	typeref:typename:int
wave_get_max_pulses	pigpiod_if.c	/^int wave_get_max_pulses(void)$/;"	f	typeref:typename:int
wave_get_max_pulses	pigpiod_if2.c	/^int wave_get_max_pulses(int pi)$/;"	f	typeref:typename:int
wave_get_micros	pigpiod_if.c	/^int wave_get_micros(void)$/;"	f	typeref:typename:int
wave_get_micros	pigpiod_if2.c	/^int wave_get_micros(int pi)$/;"	f	typeref:typename:int
wave_get_pulses	pigpiod_if.c	/^int wave_get_pulses(void)$/;"	f	typeref:typename:int
wave_get_pulses	pigpiod_if2.c	/^int wave_get_pulses(int pi)$/;"	f	typeref:typename:int
wave_send_once	pigpiod_if.c	/^int wave_send_once(unsigned wave_id)$/;"	f	typeref:typename:int
wave_send_once	pigpiod_if2.c	/^int wave_send_once(int pi, unsigned wave_id)$/;"	f	typeref:typename:int
wave_send_repeat	pigpiod_if.c	/^int wave_send_repeat(unsigned wave_id)$/;"	f	typeref:typename:int
wave_send_repeat	pigpiod_if2.c	/^int wave_send_repeat(int pi, unsigned wave_id)$/;"	f	typeref:typename:int
wave_send_using_mode	pigpiod_if2.c	/^int wave_send_using_mode(int pi, unsigned wave_id, unsigned mode)$/;"	f	typeref:typename:int
wave_tx_at	pigpiod_if2.c	/^int wave_tx_at(int pi)$/;"	f	typeref:typename:int
wave_tx_busy	pigpiod_if.c	/^int wave_tx_busy(void)$/;"	f	typeref:typename:int
wave_tx_busy	pigpiod_if2.c	/^int wave_tx_busy(int pi)$/;"	f	typeref:typename:int
wave_tx_repeat	pigpiod_if.c	/^int wave_tx_repeat(void) \/* DEPRECATED *\/$/;"	f	typeref:typename:int
wave_tx_repeat	pigpiod_if2.c	/^int wave_tx_repeat(int pi) \/* DEPRECATED *\/$/;"	f	typeref:typename:int
wave_tx_start	pigpiod_if.c	/^int wave_tx_start(void) \/* DEPRECATED *\/$/;"	f	typeref:typename:int
wave_tx_start	pigpiod_if2.c	/^int wave_tx_start(int pi) \/* DEPRECATED *\/$/;"	f	typeref:typename:int
wave_tx_stop	pigpiod_if.c	/^int wave_tx_stop(void)$/;"	f	typeref:typename:int
wave_tx_stop	pigpiod_if2.c	/^int wave_tx_stop(int pi)$/;"	f	typeref:typename:int
wdLBitV	pigpio.c	/^   uint32_t wdLBitV;$/;"	m	struct:__anon638cdb1e0508	typeref:typename:uint32_t	file:
wdSteadyUs	pigpio.c	/^   int      wdSteadyUs;$/;"	m	struct:__anon638cdb1e0508	typeref:typename:int	file:
wdTick	pigpio.c	/^   uint32_t wdTick;$/;"	m	struct:__anon638cdb1e0508	typeref:typename:uint32_t	file:
wdogBits	pigpio.c	/^static volatile uint32_t wdogBits    = 0;$/;"	v	typeref:typename:volatile uint32_t	file:
wf	pigpio.c	/^static rawWave_t wf[3][PI_WAVE_MAX_PULSES];$/;"	v	typeref:typename:rawWave_t[3][]	file:
wfRx	pigpio.c	/^static wfRx_t wfRx[PI_MAX_USER_GPIO+1];$/;"	v	typeref:typename:wfRx_t[]	file:
wfRxI2C_t	pigpio.c	/^} wfRxI2C_t;$/;"	t	typeref:struct:__anon638cdb1e1608	file:
wfRxSPI_t	pigpio.c	/^} wfRxSPI_t;$/;"	t	typeref:struct:__anon638cdb1e1708	file:
wfRxSerial_t	pigpio.c	/^} wfRxSerial_t;$/;"	t	typeref:struct:__anon638cdb1e1508	file:
wfRx_lock	pigpio.c	/^static void wfRx_lock(int i)$/;"	f	typeref:typename:void	file:
wfRx_t	pigpio.c	/^} wfRx_t;$/;"	t	typeref:struct:__anon638cdb1e1808	file:
wfRx_unlock	pigpio.c	/^static void wfRx_unlock(int i)$/;"	f	typeref:typename:void	file:
wfStats	pigpio.c	/^static wfStats_t wfStats=$/;"	v	typeref:typename:wfStats_t	file:
wfStats_t	pigpio.c	/^} wfStats_t;$/;"	t	typeref:struct:__anon638cdb1e1408	file:
wfc	pigpio.c	/^static int wfc[3]={0, 0, 0};$/;"	v	typeref:typename:int[3]	file:
wfcur	pigpio.c	/^static int wfcur=0;$/;"	v	typeref:typename:int	file:
width	pigpio.c	/^   uint16_t width;$/;"	m	struct:__anon638cdb1e0408	typeref:typename:uint16_t	file:
word	pigpio.c	/^   uint16_t word;$/;"	m	union:my_smbus_data	typeref:typename:uint16_t	file:
wouldBlockPipeWrite	pigpio.c	/^   uint32_t wouldBlockPipeWrite;$/;"	m	struct:__anon638cdb1e1208	typeref:typename:uint32_t	file:
writePos	pigpio.c	/^   int      writePos;$/;"	m	struct:__anon638cdb1e1508	typeref:typename:int	file:
x_pigpio	Makefile	/^x_pigpio:	x_pigpio.o $(LIB1)$/;"	t
x_pigpio.o	Makefile	/^x_pigpio.o: x_pigpio.c pigpio.h$/;"	t
x_pigpiod_if	Makefile	/^x_pigpiod_if:	x_pigpiod_if.o $(LIB2)$/;"	t
x_pigpiod_if.o	Makefile	/^x_pigpiod_if.o: x_pigpiod_if.c pigpiod_if.h pigpio.h$/;"	t
x_pigpiod_if2	Makefile	/^x_pigpiod_if2:	x_pigpiod_if2.o $(LIB3)$/;"	t
x_pigpiod_if2.o	Makefile	/^x_pigpiod_if2.o: x_pigpiod_if2.c pigpiod_if2.h pigpio.h$/;"	t
